
R version 4.2.2 Patched (2022-11-10 r83330) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> setwd('/home/mikeg/Repositories/ZEFI-Thermal-Curves/code/2023-01-12_brms_generate.and.fit.realistic.simulated.data')
> + + + + + + + + + + + + + + + Error in ss(file, echo = visibly, local = local, print.eval = output,  : 
  /tmp/brms_two.piece_create.and.fit.simulated.data.Rmd!RJ6Kn8:10:23: unexpected symbol
9:                       echo = TRUE  # show R code
10:                       fig.width
                          ^
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > # install packages user might not have by replacing FALSE with TRUE
> 
> ## load libraries
> library(stats)
> library(MASS) # provides negative binomial fitting:  glm.nb
> library(ggplot2)
> library(ggpubr)
> library(grid)
> library(gridExtra)
> library(GGally)
Registered S3 method overwritten by 'GGally':
  method from   
  +.gg   ggplot2
> library(broom)
> library(tidyverse)
── Attaching packages ────────────── tidyverse 1.3.2 ──
✔ tibble  3.1.8     ✔ dplyr   1.1.0
✔ tidyr   1.3.0     ✔ stringr 1.5.0
✔ readr   2.1.3     ✔ forcats 1.0.0
✔ purrr   1.0.1     
── Conflicts ───────────────── tidyverse_conflicts() ──
✖ dplyr::combine() masks gridExtra::combine()
✖ dplyr::filter()  masks stats::filter()
✖ dplyr::lag()     masks stats::lag()
✖ dplyr::select()  masks MASS::select()
> library(viridisLite)
> library(cmdstanr)
This is cmdstanr version 0.5.3
- CmdStanR documentation and vignettes: mc-stan.org/cmdstanr
- CmdStan path: /home/mikeg/.cmdstan/cmdstan-2.31.0
- CmdStan version: 2.31.0
> library(rstan)
Loading required package: StanHeaders

rstan version 2.26.13 (Stan version 2.26.1)

For execution on a local, multicore CPU with excess RAM we recommend calling
options(mc.cores = parallel::detectCores()).
To avoid recompilation of unchanged Stan programs, we recommend calling
rstan_options(auto_write = TRUE)
For within-chain threading using `reduce_sum()` or `map_rect()` Stan functions,
change `threads_per_chain` option:
rstan_options(threads_per_chain = 1)


Attaching package: ‘rstan’

The following object is masked from ‘package:tidyr’:

    extract

> options(mc.cores = 4) #(parallel::detectCores()-2))
> rstan_options(auto_write = TRUE)
> library(brms)
Loading required package: Rcpp
Loading 'brms' package (version 2.18.0). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').

Attaching package: ‘brms’

The following object is masked from ‘package:rstan’:

    loo

The following object is masked from ‘package:stats’:

    ar

> library(loo)
This is loo version 2.5.1
- Online documentation and vignettes at mc-stan.org/loo
- As of v2.0.0 loo defaults to 1 core but we recommend using as many as possible. Use the 'cores' argument or set options(mc.cores = NUM_CORES) for an entire session. 

Attaching package: ‘loo’

The following object is masked from ‘package:rstan’:

    loo

> library(shinystan)
Loading required package: shiny

This is shinystan version 2.6.0

> ## options(ggplot2.continuous.colour="viridis",
> ##        ggplot2.discrete.colour="viridis",
> ##        ggplot2.scale_fill_discrete = scale_fill_viridis_d,
> ##        ggplot2.scale_fill_continuous = scale_fill_viridis_c)
> 
> library(reshape2)

Attaching package: ‘reshape2’

The following object is masked from ‘package:tidyr’:

    smiths

> library(lme4)
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack


Attaching package: ‘lme4’

The following object is masked from ‘package:brms’:

    ngrps

> library(latex2exp)
> + + + + + + + > input_dir <- file.path("input")
> output_dir <- file.path("output")
> load(file.path(input_dir, "data.processing_2022-12-15.Rda"),
+      verbose = TRUE)
Loading objects:
  motif_data
  motif_data_40C
  motif_stats
  motif_stats_40C
  bird_bill_data
> motif_data
# A tibble: 146 × 28
   male  round trial_round motif…¹ motif…² temp_…³ humid…⁴ chamber date  counter
   <fct> <dbl>       <dbl>   <int>   <dbl>   <dbl>   <dbl> <fct>   <chr> <chr>  
 1 T229      1           1       0 0          45.8      NA 6       02/1… KIM    
 2 T229      1           2      24 0.0131     42.3      NA 6       02/1… KIM    
 3 T229      1           3     114 0.0622     40.7      NA 6       02/1… KIM    
 4 T229      1           4     198 0.108      26.2      NA 6       02/1… KIM    
 5 T229      1           5     315 0.172      34.9      NA 6       02/2… KIM    
 6 T231      1           1      57 0.0431     42.8      NA 2       02/1… RAS    
 7 T231      1           2       7 0.00529    45.0      NA 2       02/1… RAS    
 8 T231      1           3      86 0.0650     41.1      NA 2       02/1… KIM    
 9 T231      1           4      24 0.0181     27.2      NA 2       02/1… RAS    
10 T231      1           5     215 0.162      36.5      NA 2       02/2… RAS    
# … with 136 more rows, 18 more variables: test_order <int>, temp_target <dbl>,
#   temp_median <dbl>, humdity_mean <dbl>, motif_rate <dbl>, mass <dbl>,
#   n_obs_completed <lgl>, motif_count_plus_1 <int>,
#   log_motif_count_plus_1 <dbl>, temp <dbl>, n_obs_round <int>, n_obs <int>,
#   trial <int>, motif_prop_round <dbl>, weights <dbl>, svp <dbl>, vpd <dbl>,
#   vpd_offset <dbl>, and abbreviated variable names ¹​motif_count, ²​motif_prop,
#   ³​temp_mean, ⁴​humidity_mean
# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > filter_data <- TRUE
> if(filter_data) {
+     males_filtered_disp <- motif_stats_40C %>%
+         filter(dispersion < 50) %>%
+         pull(male)
+ 
+     males_filtered_mean <- motif_stats %>%
+         filter(mean > 10) %>% # changing from 10 to 40 removes previous male 7 (T258)
+         pull(male)
+ 
+     male_v .... [TRUNCATED] 
> data_ind <- motif_data %>%
+     filter(male %in% male_vector) %>%
+     mutate(male = droplevels(male)) %>%
+     mutate(index = as.integer(male)) %>%
+     mutate(male = as.character(male)) %>% 
+     arrange(index) %>%
+     select(male, index, motif_count, temp_target, temp, round, trial_round .... [TRUNCATED] 
> stats_ind <- motif_stats %>%
+     filter(male %in% male_vector) 
> data_ind <- data_ind %>% filter(temp < 38) %>%
+     group_by(male) %>% mutate(y0_simple.est = mean(motif_count), phi_ind = var(motif_count)/y0_simple.est) %>% ## phi is overdispersion parameter
+     ungroup()
> summary(data_ind)
     male               index         motif_count     temp_target   
 Length:38          Min.   : 1.000   Min.   :  0.0   Min.   :27.00  
 Class :character   1st Qu.: 3.000   1st Qu.: 52.5   1st Qu.:27.00  
 Mode  :character   Median : 5.500   Median : 89.0   Median :35.00  
                    Mean   : 5.579   Mean   :112.9   Mean   :31.61  
                    3rd Qu.: 8.000   3rd Qu.:167.2   3rd Qu.:35.00  
                    Max.   :11.000   Max.   :425.0   Max.   :40.00  
      temp           round        trial_round        date          
 Min.   :25.71   Min.   :1.000   Min.   :1.000   Length:38         
 1st Qu.:29.51   1st Qu.:1.000   1st Qu.:2.000   Class :character  
 Median :33.52   Median :3.000   Median :3.000   Mode  :character  
 Mean   :31.88   Mean   :2.211   Mean   :3.105                     
 3rd Qu.:34.34   3rd Qu.:3.000   3rd Qu.:4.000                     
 Max.   :37.64   Max.   :3.000   Max.   :6.000                     
   counter          y0_simple.est       phi_ind       
 Length:38          Min.   : 24.00   Min.   :  0.142  
 Class :character   1st Qu.: 64.33   1st Qu.:  6.955  
 Mode  :character   Median : 93.20   Median : 12.986  
                    Mean   :112.89   Mean   : 33.913  
                    3rd Qu.:166.38   3rd Qu.: 48.000  
                    Max.   :246.25   Max.   :128.361  
> n_male <- length(unique(data_ind$male))
> ## for calculation of 'theta_bar' (size in `rnbinom`) see note in `Set Up Simulate Data`
> summary_stats <- data_ind %>% ungroup() %>%  summarize(y0_bar = mean(y0_simple.est), y0_sd = sd(y0_simple.est), phi_bar = median(phi_ind), theta_bar = y0_bar^2/(y0_sd^2 - y0_bar))
> comment(summary_stats) <- "summary stats for observed bird motifs"
> save(summary_stats, file = file.path(output_dir, "obs_summary_stats.Rda"))
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > sim_parms <- function(flag = "uniform_1", n_male = 10, mean_global = 100, sd = 10, n_sd = 2, min = 10, max = 600) {
+ 
+     mean_low <- mean_global - n_sd * sd
+     mean_high <- mean_global + n_sd * sd
+     n_low <- ceiling(n_male/2)
+     n_high <- n_male - n_low
+     
+     switch(flag,
+    .... [TRUNCATED] 
> var_temp_mean <- function(temp_target) {
+     ## Returns expected variance in temp_mean given temp_target
+     ## numbers from analysis in `code/2023-01-13_temp_target.vs.var/compare.temp_target.vs.var.Rmd`
+     var = max(0.891, -5.16 + 0.167 * temp_target)
+ 
+     return(var)
+ }
> sd_temp_mean <- function(temp_target) {
+     sqrt(var_temp_mean(temp_target))
+ }
> two_piece_model <- function(temp, y0, x0, xmax, theta) {
+     ifelse(temp < x0, y0, y0 * (1-(temp-x0)/(xmax-x0)))
+ }
> sim_nb_counts <- function(temp, y0, x0, xmax, theta) {
+     ## Calculate expected value given parametes
+     mu <- two_piece_model(temp, y0, x0, xmax, theta)
+                                         #print(paste("size: ", size, "count: ", count))
+     rnbinom(1, size = theta, mu = mu)
+ }
> sim_qpoisson_counts <- function(temp, y0, x0, xmax, phi) {
+ 
+     ## Calculate expected value given parametes
+     mu <- two_piece_model(temp, y0, x0, xmax, theta)
+     
+     ## calculate theta parameter based on mu and phi
+     theta = mu/(phi - 1)
+                                          .... [TRUNCATED] 
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > parms_sim_file <- file.path(output_dir, "parms_sim_tbl")
> data_sim_file <- file.path(output_dir, "data_sim_tbl")
> recreate_simulated_data <- TRUE
> phi <- summary_stats$phi_bar ## overdispersion parameter
> theta <- summary_stats$theta_bar ## size parameter
> y0_bar <- summary_stats$y0_bar ## make slightly larger
> y0_sd <- summary_stats$y0_sd/3 ## assume there's more than one population and so make it smaller
> x0_bar <- 39 ## based on vague prior knowledge
> x0_sd <- 1 ## ditto
> xmax <- 46
> n_male <- 12
> ## Simulate data if it doesn't exist or if desired
> 
> if( ! file.exists(data_sim_file) | recreate_simulated_data) {
+     ## Generate 'true' parameters
+     ## If TRUE, replace estimated y_0 with simulated values,
+     ## else use estimates from observed data 
+     y_flags <- c("uniform_1", " ..." ... [TRUNCATED] 
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > sampling_d <- "nb"
> n_reps <- replicates[[2]]
> ## Use `rlang` injection paradigm
> ## `!!` tels R to evaluate argument before evaluating function, so it uses the
> ## variable defined in the .globalEnvironment() rather than . of filter
> ## See  https://stackoverflow.com/a/47171513/5322644
> parms_tmp <- parms_sim %>%
+   filter(sampling_dist  .... [TRUNCATED] 
> data_tmp <- data_sim %>%
+   filter(sampling_dist == !!sampling_dist,
+          n_reps == !!n_reps)
> dim(parms_tmp)
[1] 7680   16
> x_flag <- "groups_2"
> y_flag <- "groups_2"
> parms <- parms_tmp %>% filter(x_flag == !!x_flag, y_flag == !!y_flag) %>%
+   select(-c(temp_mean, temp_target, rep)) %>%
+   unique()
> dim(parms)
[1] 12 13
> data <- data_tmp %>% filter(x_flag == !!x_flag, y_flag == !!y_flag)
> dim(data)
[1] 480  17
> p <- ggplot(parms)
> hist_x0_vals <- p + 
+     aes(x0, fill = x0_group) +
+   geom_histogram(binwidth = 0.75) 
> last_plot()
> hist_y0_vals <- p +
+     aes(y0, fill = y0_group) +
+     geom_histogram(binwidth = 25)
> last_plot()
> scatter_x0_vs_y0 <- p +
+   aes(x = x0, y = y0, color = interaction(x0_group, y0_group, sep=':')) + 
+   geom_point() +
+     guides(color=guide_legend(title="groups\n  x0_group:y0_group"))
>   last_plot()
> plot <- ggplot(data) +
+   aes(y = motif_count, x = temp_mean, color = index) +
+   geom_point() +
+   facet_grid(rows = vars(x0_group), cols = vars(y0_group)) #, scales = "free_y")
> last_plot()
> + + + + + + + + + + + + + + + + > iter <- 800
> xmax <- 46
> x0max <- xmax - 0.5;
> x0min <- 20;
> y_xmax <- 0
> y0_min <- 10
> sd_y0_prior <- 200
> alpha_theta_prior <- 10 ## exponential dist scale parameter for overdispersion theta in quasipoisson
> alpha_phi_prior <- 0.01 ## gamma dist shape parameter for nb. brms default is 0.01
> beta_phi_prior <- 0.01 ## gamma dist rate parameter for nb. brms default is 0.01
> ## values to use for model predictions
> x_for_predictions = seq(25, xmax, length.out = 100)
> n_cores <- 4
> n_chains <- n_cores
> + + + + + + + + + + > x_flag_data <- "groups_2"
> y_flag_data <- "groups_2"
> sampling_dist <- "nb"
> n_r <- 32
> data <- data_sim %>% filter(x_flag == x_flag_data,
+                             y_flag == y_flag_data,
+                             sampling_dist == sampling_dist,
+                             n_reps == n_r) %>%
+     rename(temp = temp_mean, male = index) %>%
+     rename(y = motif_count, x =  .... [TRUNCATED] 
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.95
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- flags
> flags_y <- flags
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     x0 = flags_x, y0 = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(normal(150, 200), nlpar = "y0", lb = 1) +
+     prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                    .... [TRUNCATED] 
[1] "brms: groups_2, groups_2"
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.005734 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 57.34 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.006486 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 64.86 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.006682 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 66.82 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.006552 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 65.52 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 1: Iteration:   1 / 800 [  0%]  (Warmup)
Chain 2: Iteration:   1 / 800 [  0%]  (Warmup)
Chain 3: Iteration:   1 / 800 [  0%]  (Warmup)
Chain 4: Iteration:   1 / 800 [  0%]  (Warmup)
Chain 3: Iteration:  80 / 800 [ 10%]  (Warmup)
Chain 2: Iteration:  80 / 800 [ 10%]  (Warmup)
Chain 4: Iteration:  80 / 800 [ 10%]  (Warmup)
  C-c C-c
> + + + + + + + + + + + + + + + + > iter <- 2000
> xmax <- 46
> x0max <- xmax - 0.5;
> x0min <- 20;
> y_xmax <- 0
> y0_min <- 10
> sd_y0_prior <- 200
> alpha_theta_prior <- 10 ## exponential dist scale parameter for overdispersion theta in quasipoisson
> alpha_phi_prior <- 0.01 ## gamma dist shape parameter for nb. brms default is 0.01
> beta_phi_prior <- 0.01 ## gamma dist rate parameter for nb. brms default is 0.01
> ## values to use for model predictions
> x_for_predictions = seq(25, xmax, length.out = 100)
> n_cores <- 4
> n_chains <- n_cores
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.95
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- flags
> flags_y <- flags
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     x0 = flags_x, y0 = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(normal(150, 200), nlpar = "y0", lb = 1) +
+     prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                    .... [TRUNCATED] 
[1] "brms: groups_2, groups_2"
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[641] is -6.49527, but must be positive finite! (in 'anon_model', line 83, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.285702, but must be positive finite! (in 'anon_model', line 83, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.308802, but must be positive finite! (in 'anon_model', line 83, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -2.16518, but must be positive finite! (in 'anon_model', line 83, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[481] is -0.662456, but must be positive finite! (in 'anon_model', line 83, column 4 to column 49)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 1: 
Chain 1: Gradient evaluation took 0.006699 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 66.99 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[321] is -3.23548, but must be positive finite! (in 'anon_model', line 83, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[641] is -6.71284, but must be positive finite! (in 'anon_model', line 83, column 4 to column 49)
Chain 2: 
Chain 2: Gradient evaluation took 0.006632 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 66.32 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.25023, but must be positive finite! (in 'anon_model', line 83, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[321] is -3.63064, but must be positive finite! (in 'anon_model', line 83, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[481] is -0.578254, but must be positive finite! (in 'anon_model', line 83, column 4 to column 49)
Chain 3: 
Chain 3: Gradient evaluation took 0.006358 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 63.58 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.006328 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 63.28 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 3397.98 seconds (Warm-up)
Chain 3:                3261.88 seconds (Sampling)
Chain 3:                6659.86 seconds (Total)
Chain 3: 
Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 3962.84 seconds (Warm-up)
Chain 2:                2789.47 seconds (Sampling)
Chain 2:                6752.31 seconds (Total)
Chain 2: 
Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 3660.12 seconds (Warm-up)
Chain 4:                3161.6 seconds (Sampling)
Chain 4:                6821.72 seconds (Total)
Chain 4: 
Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 3764.17 seconds (Warm-up)
Chain 1:                3128 seconds (Sampling)
Chain 1:                6892.17 seconds (Total)
Chain 1: 
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (x0_group || male)
         y0 ~ (y0_group || male)
   Data: data (Number of observations: 3840) 
  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup draws = 4000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)     4.67      1.50     2.57     8.49 1.00     1732     2435
sd(x0_x0_group2)     8.57      2.86     4.93    16.10 1.01      992     1848
sd(y0_Intercept)    24.31      9.58    12.49    48.20 1.00     1532     1990
sd(y0_y0_group2)   125.94     33.30    77.41   202.82 1.00     1177     1918

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    35.14      1.61    32.07    38.63 1.00     1058     1654
y0_Intercept    62.43     10.44    44.73    85.28 1.00     1199     1633

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     3.49      0.09     3.32     3.66 1.00     8785     3108

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
> save(file = file.path(output_dir, paste0("fit_tbl_data_", x_flag_data, "_", y_flag_data, "_n3.Rda")), fit_tbl)
> adapt_delta <- 0.95
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- <- c("groups_1")
Error: unexpected assignment in "flags_x <- <-"
> flags_y <- <- c("groups_2")
Error: unexpected assignment in "flags_y <- <-"
> N <- length(data)
> adapt_delta <- 0.95
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- c("groups_1")
> flags_y <- c("groups_2")
> N <- length(data)
> 
> my_priors <- prior(normal(150, 200), nlpar = "y0", lb = 1) +
+     prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
>         x_form <- switch(x_flag,
+                          individual = formula(x0 ~ -1 + male), 
+                          groups_1 = formula(x0 ~ (x0_group|| male)), # no need for x0_group when there's only 1 group
+                          #groups_2 = formula(x0 ~ (1||male) + x0_group)
+                          groups_2 = formula(x0 ~ (x0_group||male) )
+                          )
>         
>         y_form <- switch(y_flag,
+                          individual = formula(y0 ~ -1 + male), 
+                          groups_1 = formula(y0 ~ (1|| male)),
+                          #groups_2 = formula(y0 ~ (1|| male) + y0_group)
+                          groups_2 = formula(y0 ~ (y0_group||male))
+                          )
>         nlform <- bf(
+             y ~  0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0),
+             x_form,
+             y_form,
+             nl = TRUE)
> 
>         if(TRUE) get_prior(nlform, data = data, family = negbinomial(link = "identity", link_shape = "identity"))
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd x0_group2  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd y0_group2  male              y0  0    (vectorized)
> 
>         x_form <- switch(x_flag,
+                          individual = formula(x0 ~ -1 + male), 
+                          groups_1 = formula(x0 ~ -1 + (x0_group|| male)), # no need for x0_group when there's only 1 group
+                          #groups_2 = formula(x0 ~ (1||male) + x0_group)
+                          groups_2 = formula(x0 ~ (x0_group||male) )
+                          )
>         
>         y_form <- switch(y_flag,
+                          individual = formula(y0 ~ -1 + male), 
+                          groups_1 = formula(y0 ~ (1|| male)),
+                          #groups_2 = formula(y0 ~ (1|| male) + y0_group)
+                          groups_2 = formula(y0 ~ (y0_group||male))
+                          )
>         nlform <- bf(
+             y ~  0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0),
+             x_form,
+             y_form,
+             nl = TRUE)
> 
>         if(TRUE) get_prior(nlform, data = data, family = negbinomial(link = "identity", link_shape = "identity"))
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd x0_group2  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd y0_group2  male              y0  0    (vectorized)
> 
> x_form
x0 ~ (x0_group || male)
> adapt_delta <- 0.95
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- c("groups_1")
> flags_y <- c("groups_2")
> N <- length(data)
>         x_form <- switch(x_flag,
+                          individual = formula(x0 ~ -1 + male), 
+                          groups_1 = formula(x0 ~ -1 + (x0_group|| male)), # no need for x0_group when there's only 1 group
+                          #groups_2 = formula(x0 ~ (1||male) + x0_group)
+                          groups_2 = formula(x0 ~ (x0_group||male) )
+                          )
>         
>         y_form <- switch(y_flag,
+                          individual = formula(y0 ~ -1 + male), 
+                          groups_1 = formula(y0 ~ (1|| male)),
+                          #groups_2 = formula(y0 ~ (1|| male) + y0_group)
+                          groups_2 = formula(y0 ~ (y0_group||male))
+                          )
>         nlform <- bf(
+             y ~  0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0),
+             x_form,
+             y_form,
+             nl = TRUE)
> 
>         if(TRUE) get_prior(nlform, data = data, family = negbinomial(link = "identity", link_shape = "identity"))
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd x0_group2  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd y0_group2  male              y0  0    (vectorized)
> 
> x_form
x0 ~ (x0_group || male)
> y_form
y0 ~ (y0_group || male)
> x_flag
[1] "groups_2"
> 
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                           fit_tbl$y0 == y_flag)
+         fit_tbl[ curr_row, ]$desc <- desc
+ 
+         print(desc)
+ 
+         ## Parameter Structure
+         x_form <- switch(x_flag,
+                          individual = formula(x0 ~ -1 + male), 
+                          groups_1 = formula(x0 ~ -1 + (x0_group|| male)), # no need for x0_group when there's only 1 group
+                          #groups_2 = formula(x0 ~ (1||male) + x0_group)
+                          groups_2 = formula(x0 ~ (x0_group||male) )
+                          )
+         
+         y_form <- switch(y_flag,
+                          individual = formula(y0 ~ -1 + male), 
+                          groups_1 = formula(y0 ~ (1|| male)),
+                          #groups_2 = formula(y0 ~ (1|| male) + y0_group)
+                          groups_2 = formula(y0 ~ (y0_group||male))
+                          )
+         nlform <- bf(
+             y ~  0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0),
+             x_form,
+             y_form,
+             nl = TRUE)
+ 
+         if(TRUE) get_prior(nlform, data = data, family = negbinomial(link = "identity", link_shape = "identity"))
+ 
+ }}
[1] "brms: groups_1, groups_2"
> 
>         if(TRUE) print(get_prior(nlform, data = data, family = negbinomial(link = "identity", link_shape = "identity")))
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd x0_group2  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd y0_group2  male              y0  0    (vectorized)
>         y_form <- switch(y_flag,
+                          individual = formula(y0 ~ -1 + male), 
+                          groups_1 = formula(y0 ~ (1|| male)),
+                          #groups_2 = formula(y0 ~ (1|| male) + y0_group)
+                          groups_2 = formula(y0 ~ -1 + (y0_group||male))
+                          )
>         nlform <- bf(
+             y ~  0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0),
+             x_form,
+             y_form,
+             nl = TRUE)
> 
>         if(TRUE) print(get_prior(nlform, data = data, family = negbinomial(link = "identity", link_shape = "identity")))
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd x0_group2  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd y0_group2  male              y0  0    (vectorized)
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 400 #2000
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- c("groups_1")
> flags_y <- c("groups_2")
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     x0 = flags_x, y0 = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(normal(150, 200), nlpar = "y0", lb = 1) +
+     prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                    .... [TRUNCATED] 
[1] "brms: groups_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd x0_group2  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd y0_group2  male              y0  0    (vectorized)
Error: The following priors do not correspond to any model parameter: 
<lower=1> b_y0 ~ normal(150, 200)
<lower=30,upper=45.5> b_x0 ~ uniform(30, 45.5)
Function 'get_prior' might be helpful to you.
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 400 #2000
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- c("groups_1")
> flags_y <- c("groups_2")
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     x0 = flags_x, y0 = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- NULL #prior(normal(150, 200), nlpar = "y0", lb = 1) +
>     #prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> 
> 
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                    .... [TRUNCATED] 
[1] "brms: groups_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd x0_group2  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd y0_group2  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.145383, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.056438, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[641] is -0.10852, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.02142, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0891132, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0452881, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0778542, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.662408, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.205991, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.813095, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.610857, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.0739181, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.424469, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0653498, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.00654574, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[961] is -0.51404, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[641] is -1.27902, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0612473, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.23696, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[801] is -0.0418311, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -2.04427, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.125434, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0415111, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0188628, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0751665, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0948154, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.12788, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.823259, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.269887, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0039699, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0961758, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0218462, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0772408, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[481] is -1.29447, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.298456, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[641] is -3.92102, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.68478, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[321] is -2.98193, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.118807, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.111212, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[481] is -0.691746, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0965789, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0846427, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0519389, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[481] is -0.539759, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.165764, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.014958, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -2.33691, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[481] is -1.30749, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.265043, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0853634, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.334583, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.671556, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -3.13553, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.185905, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0513138, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.677513, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0474742, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0847427, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0948048, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.418502, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.203103, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.20852, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -4.01896, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.182455, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.354982, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.382644, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.276897, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.831976, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0689303, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0907232, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)


SAMPLING FOR MODEL 'SAMPLINGanon_model
 FOR MODEL '' NOW (CHAIN anon_model' NOW (CHAIN SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 32).
).
4).
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -1.74071, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.00730976, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.737211, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0621186, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.109403, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.137021, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.398529, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[801] is -0.477946, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[481] is -0.571019, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0549466, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0579263, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[321] is -3.17816, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.194925, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0137811, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.824521, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -3.23621, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain Chain 3: 2  Error evaluating the log probability at the initial value.: Rejecting initial value:

Chain 2Chain :   Error evaluating the log probability at the initial value.3
Chain : Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.62371, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.551294, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Chain 
41
: : Rejecting initial value:
Rejecting initial value:Chain 
1:   Error evaluating the log probability at the initial value.Chain 
Chain 41: : Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.283833, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)  Error evaluating the log probability at the initial value.

Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[481] is -0.288324, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0328293, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.977377, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.168631, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain Chain 43: : Rejecting initial value:Rejecting initial value:

Chain Chain 43: :   Error evaluating the log probability at the initial value.  Error evaluating the log probability at the initial value.

Chain Chain 43Chain : : 1Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.964375, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Exception: neg_binomial_2_lpmf: Location parameter[321] is -1.467, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49): 
Rejecting initial value:

Chain 1: Chain   Error evaluating the log probability at the initial value.2
: Chain Rejecting initial value:1
: Chain Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.375851, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)2
:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.111782, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.00324753, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.30948, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:Chain 
2Chain : 3Rejecting initial value:: 
  Error evaluating the log probability at the initial value.Chain 
2Chain : 3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -2.97931, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)  Error evaluating the log probability at the initial value.

Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.128165, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain Chain 14: : Rejecting initial value:Exception: neg_binomial_2_lpmf: Location parameter[161] is -1.36833, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 4:   Error evaluating the log probability at the initial value.
Chain Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0534528, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
2: Chain Rejecting initial value:
Chain 23:   Error evaluating the log probability at the initial value.: 
Rejecting initial value:Chain 2
: Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.91361, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Chain 
3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.487998, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain Chain 4: 1Rejecting initial value:: 
Chain Rejecting initial value:4: 
  Error evaluating the log probability at the initial value.
Chain Chain 41: : Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.6613, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)  Error evaluating the log probability at the initial value.

Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.786564, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.Chain 
2Chain Chain : 41: : Rejecting initial value:Exception: neg_binomial_2_lpmf: Location parameter[161] is -4.12749, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Rejecting initial value:


Chain Chain 21: :   Error evaluating the log probability at the initial value.
  Error evaluating the log probability at the initial value.Chain 
2: Chain Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.643562, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -3.46616, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.185659, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain Chain 42: : Exception: neg_binomial_2_lpmf: Location parameter[321] is -1.8547, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Rejecting initial value:

Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.384565, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.136786, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.481099, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Chain 
2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.133334, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain Chain 13: : Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.1625, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Rejecting initial value:

Chain 3:   Error evaluating the log probability at the initial value.
Chain Chain 34: : Rejecting initial value:Exception: neg_binomial_2_lpmf: Location parameter[321] is -2.2502, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 4: Chain   Error evaluating the log probability at the initial value.2
: Chain Rejecting initial value:4
: Chain Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.237171, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)2
:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.675123, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0417942, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain Chain 42: : Rejecting initial value:Rejecting initial value:

Chain Chain 42: :   Error evaluating the log probability at the initial value.  Error evaluating the log probability at the initial value.

Chain Chain 42: : Exception: neg_binomial_2_lpmf: Location parameter[801] is -0.586599, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Exception: neg_binomial_2_lpmf: Location parameter[961] is -1.9745, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 3: Rejecting initial value:
Chain 3: Chain 2  Error evaluating the log probability at the initial value.: Rejecting initial value:

Chain Chain Chain 123Chain : : : 4  Error evaluating the log probability at the initial value.Rejecting initial value:: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.24072, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Rejecting initial value:
Chain 

2Chain Chain : 14Exception: neg_binomial_2_lpmf: Location parameter[161] is -1.50453, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49): : 
  Error evaluating the log probability at the initial value.  Error evaluating the log probability at the initial value.

Chain Chain 14: : Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.553536, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.336153, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[801] is -0.0244735, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[321] is -1.62998, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1Chain : 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.435175, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Rejecting initial value:

Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.214342, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3Chain : 4: Rejecting initial value:  Error evaluating the log probability at the initial value.
Chain 
4:   Error evaluating the log probability at the initial value.Chain 
Chain 34: : Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0622051, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0673822, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -3.76332, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.112556, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 1: 
Chain 1: Initialization between (-2, 2) failed after 100 attempts. 
Chain 1: Chain  Try specifying initial values, reducing ranges of constrained values, or reparameterizing the model.2: 
Rejecting initial value:
Chain Chain 2:   Error evaluating the log probability at the initial value.4
Chain : 2Rejecting initial value:: Exception: neg_binomial_2_lpmf: Location parameter[1121] is -0.0221149, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.223178, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.671486, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0500609, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0177019, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.281574, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.148753, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.119734, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.184305, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[481] is -0.313674, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain Chain 32: : Rejecting initial value:Rejecting initial value:

Chain Chain 32: :   Error evaluating the log probability at the initial value.  Error evaluating the log probability at the initial value.

Chain Chain 32: : Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.078305, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Exception: neg_binomial_2_lpmf: Location parameter[641] is -0.214612, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.100473, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0646155, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3[1]:   Error evaluating the log probability at the initial value.
Chain 3:  "Error in eval(ei, envir) : Initialization failed."Exception: neg_binomial_2_lpmf: Location parameter[481] is -0.935166, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.802707, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -3.01285, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2Chain :   Error evaluating the log probability at the initial value.3
: Chain 2Rejecting initial value:: 
Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.441245, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3:   Error evaluating the log probability at the initial value.Chain 
4Chain : 3Rejecting initial value:: 
Exception: neg_binomial_2_lpmf: Location parameter[161] is -1.27906, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Chain 
4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.564165, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.105091, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.Chain 
Chain 34: : Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.86356, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Rejecting initial value:

Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.485551, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)error occurred during calling the sampler; sampling not done

Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.22603, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[161] is -3.34383, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3Chain : 2Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.841125, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49): 
Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.74167, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.Chain 
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.320599, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)3
: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.297609, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.10836, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4Chain : 3Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.211045, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49): 
Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0569375, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.110091, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0280025, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Chain 
2: Chain Rejecting initial value:4
: Chain Rejecting initial value:2: 
  Error evaluating the log probability at the initial value.Chain 
4Chain : 2:   Error evaluating the log probability at the initial value.Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.775642, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.111074, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -2.20621, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[161] is -4.00318, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.77889, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Chain Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.502739, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)2
: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[161] is -1.61139, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4Chain : 3  Error evaluating the log probability at the initial value.: 
Rejecting initial value:Chain 
4Chain : 3Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.125, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49):   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.428673, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.784985, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain Chain 43: : Rejecting initial value:  Error evaluating the log probability at the initial value.

Chain 4Chain : 3  Error evaluating the log probability at the initial value.: 
Chain Exception: neg_binomial_2_lpmf: Location parameter[961] is -0.1186, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Chain 2
4: : Rejecting initial value:Exception: neg_binomial_2_lpmf: Location parameter[321] is -1.49608, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 
2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.565575, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain Chain 34: : Rejecting initial value:Chain Rejecting initial value:
2
: Chain Chain Rejecting initial value:34
: : Chain   Error evaluating the log probability at the initial value.  Error evaluating the log probability at the initial value.2

: Chain   Error evaluating the log probability at the initial value.Chain 
34Chain : : 2Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.13112, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49): Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.237388, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.178084, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 2: Rejecting initial value:
Chain Chain 2Chain 4: : 3  Error evaluating the log probability at the initial value.Rejecting initial value:: 

Rejecting initial value:Chain Chain 2
4: : Chain Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.110977, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)  Error evaluating the log probability at the initial value.3

: Chain 4  Error evaluating the log probability at the initial value.: 
Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.388408, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Chain 
3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.137084, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0322219, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Chain 
4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -3.47527, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.132807, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.375466, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4Chain : Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.481421, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.Chain 
Chain 3: 2Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.898535, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49): 
Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.00379248, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain Chain 42: Chain : Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.651761, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Rejecting initial value:3

: Chain Rejecting initial value:2: 
  Error evaluating the log probability at the initial value.Chain 
3Chain 2: : Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.178688, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)  Error evaluating the log probability at the initial value.

Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.201934, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Chain Rejecting initial value:2: 
Rejecting initial value:
Chain Chain 42: :   Error evaluating the log probability at the initial value.
Chain   Error evaluating the log probability at the initial value.2
: Chain Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.111827, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)4
: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.921219, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[481] is -1.60956, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.482362, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.540845, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.428096, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0932915, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.120826, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3Chain : 2  Error evaluating the log probability at the initial value.: 
Rejecting initial value:Chain 
3Chain 2: :   Error evaluating the log probability at the initial value.Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0909935, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.491164, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.21348, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Chain 
2Chain : Rejecting initial value:
Chain 23:   Error evaluating the log probability at the initial value.: 
Rejecting initial value:Chain 2
: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.103233, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Chain 
3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.113728, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.559877, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.401353, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.614559, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.103826, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0825109, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[321] is -1.13834, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.16387, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0270906, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0409458, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2: Chain   Error evaluating the log probability at the initial value.3
: Chain Rejecting initial value:2: 
Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.0780166, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Chain 
3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.42197, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.115842, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Chain Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.252588, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)4: 
Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0539301, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain Chain 3:   Error evaluating the log probability at the initial value.
4: Chain Rejecting initial value:3: 
Chain Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0958404, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: 2  Error evaluating the log probability at the initial value.: 
Rejecting initial value:
Chain 4Chain : 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.462767, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)  Error evaluating the log probability at the initial value.

Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[481] is -0.197548, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4Chain : 3Rejecting initial value:: 
Rejecting initial value:Chain 
Chain 2Chain : 43Rejecting initial value:: : 
  Error evaluating the log probability at the initial value.  Error evaluating the log probability at the initial value.Chain 

2Chain : Chain 4  Error evaluating the log probability at the initial value.: 3
Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0886438, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Chain : 
2Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0428664, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49): Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.352238, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 4: Rejecting initial value:
Chain 2Chain : 4Rejecting initial value:: 
  Error evaluating the log probability at the initial value.Chain 
2: Chain   Error evaluating the log probability at the initial value.4
: Chain Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0195958, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)2
: Exception: neg_binomial_2_lpmf: Location parameter[801] is -2.27986, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.139656, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain Chain 24: : Rejecting initial value:  Error evaluating the log probability at the initial value.

Chain 2Chain : 4  Error evaluating the log probability at the initial value.: 
Chain Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.407576, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)2
: Exception: neg_binomial_2_lpmf: Location parameter[641] is -0.640958, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.513973, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain Chain 24: :   Error evaluating the log probability at the initial value.Rejecting initial value:

Chain Chain 24: : Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.106968, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)  Error evaluating the log probability at the initial value.

Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.339674, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.04969, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.108659, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain Chain 4: Rejecting initial value:
3Chain 4: : Rejecting initial value:  Error evaluating the log probability at the initial value.

Chain Chain 34: : Exception: neg_binomial_2_lpmf: Location parameter[1] is -2.9381, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)  Error evaluating the log probability at the initial value.

Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.417082, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -2.3624, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.00417117, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain Chain 23: Rejecting initial value:: 
  Error evaluating the log probability at the initial value.Chain 
2Chain : 3  Error evaluating the log probability at the initial value.: 
Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.616509, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Chain 
2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.110285, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -4.08696, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[481] is -2.24976, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Chain 
3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.175416, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4Chain : 2  Error evaluating the log probability at the initial value.: 
Rejecting initial value:Chain 
4Chain : 2Exception: neg_binomial_2_lpmf: Location parameter[481] is -0.34931, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49): 
  Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[321] is -1.10132, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0524908, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4Chain : 2  Error evaluating the log probability at the initial value.: 
Rejecting initial value:Chain 
4Chain : 2Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.397802, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49): 
  Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.06283, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.24761, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain Chain 24: : Rejecting initial value:  Error evaluating the log probability at the initial value.

Chain Chain 24: :   Error evaluating the log probability at the initial value.Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.81499, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0749757, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Chain Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.229193, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)4
: Rejecting initial value:Chain 
2Chain : 4Rejecting initial value:: 
  Error evaluating the log probability at the initial value.Chain 
2Chain : 4  Error evaluating the log probability at the initial value.: 
Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0796985, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Chain 
2: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0828029, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain Chain 34: : Rejecting initial value:  Error evaluating the log probability at the initial value.Chain 

2Chain : Chain 4Rejecting initial value:3: 
:   Error evaluating the log probability at the initial value.Chain 
Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.190304, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)2Chain : 
4  Error evaluating the log probability at the initial value.: 
Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.655676, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Chain 
2: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.296694, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Chain Rejecting initial value:2
: Chain Rejecting initial value:4
: Chain   Error evaluating the log probability at the initial value.2
: Chain   Error evaluating the log probability at the initial value.4
: Chain Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.018088, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)2
: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.245973, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0723536, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Chain Rejecting initial value:2
: Chain Rejecting initial value:4
: Chain   Error evaluating the log probability at the initial value.2
: Chain   Error evaluating the log probability at the initial value.4
: Chain Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.20401, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)2
: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.423189, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.41584, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain Chain 4:   Error evaluating the log probability at the initial value.2
: Chain Rejecting initial value:4
: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.498472, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Chain 
2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.100308, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.0297973, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain Chain 24: : Rejecting initial value:Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0883375, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.673748, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[321] is -2.16201, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.329305, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain Chain 43: :   Error evaluating the log probability at the initial value.Rejecting initial value:

Chain Chain 34: :   Error evaluating the log probability at the initial value.Exception: neg_binomial_2_lpmf: Location parameter[161] is -1.03136, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.176386, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.383984, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain Chain 34: : Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.06014, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Rejecting initial value:

Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.285689, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.272745, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[321] is -1.34166, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4: Chain   Error evaluating the log probability at the initial value.2
: Rejecting initial value:Chain 
4Chain : 2Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.146809, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49): 
  Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[481] is -2.90584, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[481] is -0.0170797, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.21291, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain Chain 34: : Rejecting initial value:  Error evaluating the log probability at the initial value.

Chain 3Chain : 4  Error evaluating the log probability at the initial value.
: Chain Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.107605, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)3: 
Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.195102, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[321] is -2.00186, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3Chain : 4  Error evaluating the log probability at the initial value.: 
Rejecting initial value:Chain 
3Chain : 4Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.291661, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49): 
  Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[481] is -0.349762, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0986548, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3: Chain   Error evaluating the log probability at the initial value.4
: Chain Rejecting initial value:3
: Chain Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.113387, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)4
:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0755704, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.106284, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain Chain 43: : Rejecting initial value:Exception: neg_binomial_2_lpmf: Location parameter[321] is -1.31363, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0251271, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0226766, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3Chain : 4Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.4986, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49): 
Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.157307, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2: Chain   Error evaluating the log probability at the initial value.
Chain 23: : Exception: neg_binomial_2_lpmf: Location parameter[641] is -1.65749, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Rejecting initial value:

Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0158187, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.28846, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.115817, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.893039, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain Chain 24: : Rejecting initial value:  Error evaluating the log probability at the initial value.

Chain Chain 24: :   Error evaluating the log probability at the initial value.Exception: neg_binomial_2_lpmf: Location parameter[641] is -0.279923, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.201937, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[641] is -0.824782, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2Chain : 4Rejecting initial value:: 
Rejecting initial value:Chain 
2Chain : 4  Error evaluating the log probability at the initial value.: 
  Error evaluating the log probability at the initial value.Chain 
2Chain : 4Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.122864, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49): 
Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0497841, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.321784, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain Chain 42: : Rejecting initial value:Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.372494, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.277948, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -2.0428, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2Chain : Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.255415, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain Chain 4: 3Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0379709, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49): 
Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0846854, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[481] is -0.769219, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain Chain 43: : Chain   Error evaluating the log probability at the initial value.Rejecting initial value:2

: Chain Chain Rejecting initial value:34
: : Chain   Error evaluating the log probability at the initial value.Exception: neg_binomial_2_lpmf: Location parameter[161] is -2.25574, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)2

: Chain   Error evaluating the log probability at the initial value.3
: Chain Exception: neg_binomial_2_lpmf: Location parameter[481] is -0.927934, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)2
: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.14914, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.138067, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4Chain : 3Rejecting initial value:: 
Rejecting initial value:
Chain Chain 43: :   Error evaluating the log probability at the initial value.  Error evaluating the log probability at the initial value.

Chain Chain 43: : Exception: neg_binomial_2_lpmf: Location parameter[321] is -1.45169, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.18199, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0589717, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain Chain Chain 342: : : Rejecting initial value:Rejecting initial value:Rejecting initial value:


Chain Chain Chain 342: : :   Error evaluating the log probability at the initial value.  Error evaluating the log probability at the initial value.  Error evaluating the log probability at the initial value.


Chain Chain Chain 324: : : Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0904526, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.233731, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.50033, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)


Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.334914, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain Chain 43: : Rejecting initial value:Rejecting initial value:

Chain Chain 43: :   Error evaluating the log probability at the initial value.  Error evaluating the log probability at the initial value.

Chain Chain 43: : Exception: neg_binomial_2_lpmf: Location parameter[1] is -2.34567, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0225848, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0567105, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Chain 
Chain 4: 3Rejecting initial value:: 
Rejecting initial value:
Chain 4Chain : 3  Error evaluating the log probability at the initial value.: 
  Error evaluating the log probability at the initial value.Chain 
4Chain : 3Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0578811, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49): 
Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.58251, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.71644, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain Chain 43: : Chain Rejecting initial value:Rejecting initial value:2

: Chain Chain Rejecting initial value:43
: : Chain   Error evaluating the log probability at the initial value.  Error evaluating the log probability at the initial value.2

: Chain Chain   Error evaluating the log probability at the initial value.43: 
: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0538175, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Exception: neg_binomial_2_lpmf: Location parameter[481] is -0.018479, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Chain 

2: Exception: neg_binomial_2_lpmf: Location parameter[321] is -2.7777, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[641] is -2.04606, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:Chain 
3: Chain Rejecting initial value:4
: Chain   Error evaluating the log probability at the initial value.3
: Chain   Error evaluating the log probability at the initial value.4
: Chain Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.362854, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)3
: Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.89677, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[481] is -0.487609, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2Chain Chain : 43  Error evaluating the log probability at the initial value.: : 
Rejecting initial value:Rejecting initial value:Chain 

2Chain Chain : 43Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.04026, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49): : 
  Error evaluating the log probability at the initial value.  Error evaluating the log probability at the initial value.

Chain Chain 43: : Exception: neg_binomial_2_lpmf: Location parameter[481] is -1.62922, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0898121, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.414415, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain Chain 43: : Rejecting initial value:Rejecting initial value:

Chain Chain 43: :   Error evaluating the log probability at the initial value.  Error evaluating the log probability at the initial value.

Chain Chain 43: : Chain Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0616807, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.170682, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
2
: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.319886, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Chain Rejecting initial value:
4Chain : 2Rejecting initial value:: 
  Error evaluating the log probability at the initial value.Chain 
Chain 3Chain 4: 2: Rejecting initial value::   Error evaluating the log probability at the initial value.
Exception: neg_binomial_2_lpmf: Location parameter[961] is -0.120705, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 
Chain 34: :   Error evaluating the log probability at the initial value.Exception: neg_binomial_2_lpmf: Location parameter[481] is -2.10264, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[481] is -2.35098, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[481] is -0.481714, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4Chain : 3Rejecting initial value:: 
Rejecting initial value:Chain 
4Chain : 3  Error evaluating the log probability at the initial value.: 
  Error evaluating the log probability at the initial value.Chain 
4Chain : 3Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.31342, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49): 
Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0472931, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.19424, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[321] is -1.16031, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain Chain Chain 342: : : Rejecting initial value:Rejecting initial value:


Chain Chain Chain 432: :   Error evaluating the log probability at the initial value.:   Error evaluating the log probability at the initial value.
Initialization between (-2, 2) failed after 100 attempts. 
Chain 
Chain 4Chain 3: 2: Exception: neg_binomial_2_lpmf: Location parameter[801] is -0.0563189, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49): Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.466154, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
 Try specifying initial values, reducing ranges of constrained values, or reparameterizing the model.

Chain Chain 34: : Rejecting initial value:Rejecting initial value:

Chain Chain 34: :   Error evaluating the log probability at the initial value.  Error evaluating the log probability at the initial value.

Chain Chain 34: : Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.399922, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Exception: neg_binomial_2_lpmf: Location parameter[801] is -0.378077, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain Chain 34: : Rejecting initial value:Rejecting initial value:

Chain Chain 34: :   Error evaluating the log probability at the initial value.  Error evaluating the log probability at the initial value.

Chain Chain 3: 4Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.964881, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.880612, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
[1] "Error in eval(ei, envir) : Initialization failed."
Chain 3: Chain Rejecting initial value:4
: Chain Rejecting initial value:3
: Chain   Error evaluating the log probability at the initial value.4
: Chain   Error evaluating the log probability at the initial value.3
: Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.395968, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.602265, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)

Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0294257, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[641] is -0.211915, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.38824, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4error occurred during calling the sampler; sampling not done
: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.469383, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.00132556, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -2.84257, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0292493, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.129964, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[321] is -1.76041, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.361736, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[481] is -0.22062, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.218247, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -1.62608, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Chain Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.155035, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)3
: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.175216, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain Chain 43: : Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0775653, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Rejecting initial value:

Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.156735, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Chain Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.366907, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)3
: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.089369, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain Chain 43: : Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.460593, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Rejecting initial value:

Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.589313, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain Chain 43: :   Error evaluating the log probability at the initial value.Rejecting initial value:

Chain Chain 43: : Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.11548, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)  Error evaluating the log probability at the initial value.

Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0234481, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 4: Chain Rejecting initial value:3
: Chain Rejecting initial value:
4Chain : 3  Error evaluating the log probability at the initial value.: 
  Error evaluating the log probability at the initial value.Chain 
4Chain : 3Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.00256937, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49): 
Exception: neg_binomial_2_lpmf: Location parameter[321] is -3.59511, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)Chain 
4: 
Chain 4: Initialization between (-2, 2) failed after 100 attempts. 
Chain 4:  Try specifying initial values, reducing ranges of constrained values, or reparameterizing the model.
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.105985, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -2.9456, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[641] is -1.56628, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
[1]Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[481] is -0.692492, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
 "Error in eval(ei, envir) : Initialization failed."
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.913047, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -3.73773, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3error occurred during calling the sampler; sampling not done
:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[961] is -1.03061, but must be positive finite! (in 'anon_model', line 71, column 4 to column 49)
Chain 3: 
Chain 3: Initialization between (-2, 2) failed after 100 attempts. 
Chain 3:  Try specifying initial values, reducing ranges of constrained values, or reparameterizing the model.
[1] "Error in eval(ei, envir) : Initialization failed."
error occurred during calling the sampler; sampling not done
Warning in .local(object, ...) :
  some chains had errors; consider specifying chains = 1 to debug
here are whatever error messages were returned
[[1]]
Stan model 'anon_model' does not contain samples.

[[2]]
Stan model 'anon_model' does not contain samples.

[[3]]
Stan model 'anon_model' does not contain samples.

[[4]]
Stan model 'anon_model' does not contain samples.

 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ -1 + (x0_group || male)
         y0 ~ -1 + (y0_group || male)
   Data: data (Number of observations: 3840) 

The model does not contain posterior draws.
Warning in eval(ei, envir) : 
> save(file = file.path(output_dir, paste0("fit_tbl_data_", x_flag_data, "_", y_flag_data, "_n3.Rda")), fit_tbl)
> 
> my_priors <- prior(normal(150, 200), nlpar = "y0", lb = 1) +
+     prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> 
>         if(TRUE) print(get_prior(nlform, data = data, family = negbinomial(link = "identity", link_shape = "identity")))
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd x0_group2  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd y0_group2  male              y0  0    (vectorized)
> }}
Error: unexpected '}' in "}"
>         fit <- brm(nlform,
+                    data = data,
+                    ## `link` refers to the mapping of the expectation of the distribution: log, sqrt, identity, softplus
+                    ## link_shape corresponds to `phi` of `stan`'s
+                    ## Negbinomial_2
+                    ## Defining `phi = mu/theta` creates a quasipoisson
+                    ## distribution with overdispersion parameter (1 +theta)
+                    family = negbinomial(link = "identity", link_shape = "identity"),
+                    prior = my_priors,
+                    iter = iter,
+                    silent = ifelse(interactive(), 1, 2), # 0, 1, or 2. 1 is default
+                    control = list(adapt_delta = adapt_delta,
+                        max_treedepth = 12),
+                        ## Only print out sampling progress if in interactive mode
+                    refresh = ifelse(interactive(),max(iter/10, 1), 0),
+         chains = n_chains,
+         cores = n_cores,
+         save_model = "brms_two.piece.stan")
Error: The following priors do not correspond to any model parameter: 
<lower=1> b_y0 ~ normal(150, 200)
<lower=30,upper=45.5> b_x0 ~ uniform(30, 45.5)
Function 'get_prior' might be helpful to you.
>     ## Avoid having brms recompile model by defining
>     ## model in global environment
>     stanfit <- fit
> stan    
function (file, model_name = "anon_model", model_code = "", fit = NA, 
    data = list(), pars = NA, chains = 4, iter = 2000, warmup = floor(iter/2), 
    thin = 1, init = "random", seed = sample.int(.Machine$integer.max, 
        1), algorithm = c("NUTS", "HMC", "Fixed_param"), control = NULL, 
    sample_file = NULL, diagnostic_file = NULL, save_dso = TRUE, 
    verbose = FALSE, include = TRUE, cores = getOption("mc.cores", 
        1L), open_progress = interactive() && !isatty(stdout()) && 
        !identical(Sys.getenv("RSTUDIO"), "1"), ..., boost_lib = NULL, 
    eigen_lib = NULL) 
{
    if (isTRUE(rstan_options("threads_per_chain") > 1L)) {
        Sys.setenv(STAN_NUM_THREADS = rstan_options("threads_per_chain"))
    }
    dot_arg_names <- names(list(...))
    is_arg_recognizable(dot_arg_names, c("chain_id", "init_r", 
        "test_grad", "append_samples", "refresh", "control", 
        "enable_random_init", "save_warmup", "obfuscate_model_name"), 
        pre_msg = "passing unknown arguments: ", call. = FALSE)
    if (!is.list(data) && !is.environment(data) && !is.character(data)) 
        stop("'data' must be a list, environment, or character vector")
    if (is(fit, "stanfit")) 
        sm <- get_stanmodel(fit)
    else {
        attr(model_code, "model_name2") <- deparse(substitute(model_code))
        if (missing(model_name)) 
            model_name <- NULL
        sm <- stan_model(file, model_name = model_name, model_code = model_code, 
            stanc_ret = NULL, boost_lib = boost_lib, eigen_lib = eigen_lib, 
            save_dso = save_dso, verbose = verbose)
    }
    if (is.null(sample_file)) 
        sample_file <- NA
    if (is.null(diagnostic_file)) 
        diagnostic_file <- NA
    sampling(sm, data, pars, chains, iter, warmup, thin, seed, 
        init, check_data = TRUE, sample_file = sample_file, diagnostic_file = diagnostic_file, 
        verbose = verbose, algorithm = match.arg(algorithm), 
        control = control, check_unknown_args = FALSE, cores = cores, 
        open_progress = open_progress, include = include, ...)
}
<bytecode: 0x55a0e56240a8>
<environment: namespace:rstan>
>                                         #fit_exp <- expose_functions(fit) , vectorize = TRUE)
>                                         #fit_cr <- add_criterion(fit_exp, c("loo", "waic"))
>     print(fit)     
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ -1 + (x0_group || male)
         y0 ~ -1 + (y0_group || male)
   Data: data (Number of observations: 3840) 

The model does not contain posterior draws.
>     fit_tbl[ curr_row, ]$fit <- list(fit)
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 400 #2000
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- c("groups_1")
> flags_y <- c("groups_2")
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     x0 = flags_x, y0 = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(normal(150, 200), nlpar = "y0", lb = 1) +
+     prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                    .... [TRUNCATED] 
[1] "brms: groups_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd x0_group2  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd y0_group2  male              y0  0    (vectorized)
> ?get_prior
>           of model specification are explained in brmsformula.
Error: unexpected symbol in "          of model"
> nlform
y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
x0 ~ -1 + (x0_group || male)
y0 ~ -1 + (y0_group || male)
>         if(TRUE) print(get_prior(nlform, data = data, family = negbinomial(link = "identity", link_shape = "identity")))
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd x0_group2  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd y0_group2  male              y0  0    (vectorized)
>         x_form <- switch(x_flag,
+                          individual = formula(x0 ~ -1 + male), 
+                          groups_1 = formula(x0 ~ 1 + (x0_group|| male)), # no need for x0_group when there's only 1 group
+                          #groups_2 = formula(x0 ~ (1||male) + x0_group)
+                          groups_2 = formula(x0 ~ (x0_group||male) )
+                          )
>         
>         y_form <- switch(y_flag,
+                          individual = formula(y0 ~ -1 + male), 
+                          groups_1 = formula(y0 ~ (1|| male)),
+                          #groups_2 = formula(y0 ~ (1|| male) + y0_group)
+                          groups_2 = formula(y0 ~ -1 + (y0_group||male))
+                          )
>         nlform <- bf(
+             y ~  0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0),
+             x_form,
+             y_form,
+             nl = TRUE)
> 
>         if(TRUE) print(get_prior(nlform, data = data, family = negbinomial(link = "identity", link_shape = "identity")))
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd x0_group2  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd y0_group2  male              y0  0    (vectorized)
> priors
Error: object 'priors' not found
> priors()
Error in priors() : could not find function "priors"
> my_priors
             prior class coef group resp dpar nlpar lb   ub source
  normal(150, 200)     b                         y0  1 <NA>   user
 uniform(30, 45.5)     b                         x0 30 45.5   user
> 
> my_priors <- prior(uniform(10, 1000), nlpar = "y0", lb = 10) + #normal(150, 200), nlpar = "y0", lb = 1) +
+     prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> my_priors
             prior class coef group resp dpar nlpar lb   ub source
 uniform(10, 1000)     b                         y0 10 <NA>   user
 uniform(30, 45.5)     b                         x0 30 45.5   user
> x_flag
[1] "groups_1"
> x_flag_data
[1] "groups_2"
> names(data_sim)
 [1] "sampling_dist" "index"         "x0"            "x0_group"     
 [5] "x0_bar"        "x0_sd"         "y0"            "y0_group"     
 [9] "y0_bar"        "y0_sd"         "temp_target"   "n_reps"       
[13] "rep"           "x_flag"        "y_flag"        "temp_mean"    
[17] "motif_count"  
> head(data_sim)
# A tibble: 6 × 17
  sampling…¹ index    x0 x0_gr…² x0_bar x0_sd    y0 y0_gr…³ y0_bar y0_sd temp_…⁴
  <chr>      <fct> <dbl> <fct>    <dbl> <dbl> <dbl> <fct>    <dbl> <dbl>   <dbl>
1 qpoisson   1        39 1           39     1  113. 1         113.  21.5      30
2 qpoisson   1        39 1           39     1  113. 1         113.  21.5      30
3 qpoisson   1        39 1           39     1  113. 1         113.  21.5      30
4 qpoisson   1        39 1           39     1  113. 1         113.  21.5      38
5 qpoisson   1        39 1           39     1  113. 1         113.  21.5      38
6 qpoisson   1        39 1           39     1  113. 1         113.  21.5      38
# … with 6 more variables: n_reps <dbl>, rep <int>, x_flag <chr>, y_flag <chr>,
#   temp_mean <dbl>, motif_count <dbl>, and abbreviated variable names
#   ¹​sampling_dist, ²​x0_group, ³​y0_group, ⁴​temp_target
# ℹ Use `colnames()` to see all variable names
> print(head(data_sim))
# A tibble: 6 × 17
  sampling…¹ index    x0 x0_gr…² x0_bar x0_sd    y0 y0_gr…³ y0_bar y0_sd temp_…⁴
  <chr>      <fct> <dbl> <fct>    <dbl> <dbl> <dbl> <fct>    <dbl> <dbl>   <dbl>
1 qpoisson   1        39 1           39     1  113. 1         113.  21.5      30
2 qpoisson   1        39 1           39     1  113. 1         113.  21.5      30
3 qpoisson   1        39 1           39     1  113. 1         113.  21.5      30
4 qpoisson   1        39 1           39     1  113. 1         113.  21.5      38
5 qpoisson   1        39 1           39     1  113. 1         113.  21.5      38
6 qpoisson   1        39 1           39     1  113. 1         113.  21.5      38
# … with 6 more variables: n_reps <dbl>, rep <int>, x_flag <chr>, y_flag <chr>,
#   temp_mean <dbl>, motif_count <dbl>, and abbreviated variable names
#   ¹​sampling_dist, ²​x0_group, ³​y0_group, ⁴​temp_target
# ℹ Use `colnames()` to see all variable names
> summary(data_sim)
 sampling_dist          index             x0        x0_group      x0_bar     
 Length:82560       1      : 6880   Min.   :35.00   1:61920   Min.   :34.70  
 Class :character   2      : 6880   1st Qu.:37.80   2:20640   1st Qu.:37.77  
 Mode  :character   3      : 6880   Median :39.00             Median :39.00  
                    4      : 6880   Mean   :38.97             Mean   :38.97  
                    5      : 6880   3rd Qu.:40.30             3rd Qu.:40.27  
                    6      : 6880   Max.   :44.10             Max.   :44.06  
                    (Other):41280                                            
     x0_sd         y0         y0_group      y0_bar            y0_sd      
 Min.   :1   Min.   : 10.00   1:61920   Min.   : -3.521   Min.   :21.48  
 1st Qu.:1   1st Qu.: 78.08   2:20640   1st Qu.: 78.091   1st Qu.:21.48  
 Median :1   Median :112.90             Median :112.895   Median :21.48  
 Mean   :1   Mean   :113.34             Mean   :113.292   Mean   :21.48  
 3rd Qu.:1   3rd Qu.:149.80             3rd Qu.:149.765   3rd Qu.:21.48  
 Max.   :1   Max.   :248.50             Max.   :248.538   Max.   :21.48  
                                                                         
  temp_target       n_reps           rep           x_flag         
 Min.   :30.0   Min.   : 3.00   Min.   : 1.00   Length:82560      
 1st Qu.:38.0   1st Qu.: 8.00   1st Qu.: 4.00   Class :character  
 Median :40.0   Median :32.00   Median :11.00   Mode  :character  
 Mean   :38.8   Mean   :25.51   Mean   :13.26                     
 3rd Qu.:42.0   3rd Qu.:32.00   3rd Qu.:22.00                     
 Max.   :44.0   Max.   :32.00   Max.   :32.00                     
                                                                  
    y_flag            temp_mean      motif_count    
 Length:82560       Min.   :26.34   Min.   :  0.00  
 Class :character   1st Qu.:37.21   1st Qu.: 32.00  
 Mode  :character   Median :39.93   Median : 68.00  
                    Mean   :38.79   Mean   : 83.24  
                    3rd Qu.:42.46   3rd Qu.:118.00  
                    Max.   :45.90   Max.   :715.00  
                                                    
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + Error in ss(file, echo = visibly, local = local, print.eval = output,  : 
  /tmp/brms_two.piece_create.and.fit.simulated.data.Rmd!FFFf5f:43:36: unexpected symbol
42:       data <- data_base
43:       if(x_flag %in% c("uniform_1" or
                                       ^
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 400 #2000
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- c("groups_1")
> flags_y <- c("groups_2")
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     x0 = flags_x, y0 = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                    .... [TRUNCATED] 
[1] "brms: groups_1, groups_2"
Error in eval(ei, envir) : object 'data_base' not found
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 400 #2000
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- c("groups_1")
> flags_y <- c("groups_2")
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     x0 = flags_x, y0 = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                    .... [TRUNCATED] 
[1] "brms: groups_1, groups_2"
Error in eval(ei, envir) : object 'data_base' not found
> data_base <- data_sim %>% filter(x_flag == x_flag_data,
+                             y_flag == y_flag_data,
+                             sampling_dist == sampling_dist,
+                             n_reps == n_r) %>%
+     rename(temp = temp_mean, male = index) %>%
+     rename(y = motif_count, x = temp) 
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 400 #2000
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- c("groups_1")
> flags_y <- c("groups_2")
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     x0 = flags_x, y0 = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                    .... [TRUNCATED] 
[1] "brms: groups_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd x0_group2  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd y0_group2  male              y0  0    (vectorized)
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 400 #2000
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- c("groups_1")
> flags_y <- c("groups_2")
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     x0 = flags_x, y0 = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                    .... [TRUNCATED] 
[1] "brms: groups_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd  x0_group  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd y0_group2  male              y0  0    (vectorized)
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 400 #2000
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- c("groups_1")
> flags_y <- c("groups_2")
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     x0 = flags_x, y0 = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                    .... [TRUNCATED] 
[1] "brms: groups_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd  x0_group  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd y0_group2  male              y0  0    (vectorized)
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 400 #2000
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- c("groups_1")
> flags_y <- c("groups_2")
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     x0 = flags_x, y0 = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                    .... [TRUNCATED] 
[1] "brms: groups_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd  x0_group  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd y0_group2  male              y0  0    (vectorized)
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 400 #2000
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- c("groups_1")
> flags_y <- c("groups_2")
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     x0 = flags_x, y0 = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                    .... [TRUNCATED] 
[1] "brms: groups_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd  x0_group  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd y0_group2  male              y0  0    (vectorized)
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 400 #2000
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- c("groups_1")
> flags_y <- c("groups_2")
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     x0 = flags_x, y0 = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                    .... [TRUNCATED] 
[1] "brms: groups_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd  x0_group  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd y0_group2  male              y0  0    (vectorized)
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 400 #2000
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- c("groups_1")
> flags_y <- c("groups_2")
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     x0 = flags_x, y0 = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                    .... [TRUNCATED] 
[1] "brms: groups_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd  x0_group  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd y0_group2  male              y0  0    (vectorized)
> dim(data)
[1] 3840   17
> summary(data)
 sampling_dist           male            x0           x0_group     x0_bar     
 Length:3840        1      : 320   Min.   :35.00   Min.   :1   Min.   :34.70  
 Class :character   2      : 320   1st Qu.:36.75   1st Qu.:1   1st Qu.:36.73  
 Mode  :character   3      : 320   Median :38.70   Median :1   Median :38.71  
                    4      : 320   Mean   :38.51   Mean   :1   Mean   :38.51  
                    5      : 320   3rd Qu.:40.48   3rd Qu.:1   3rd Qu.:40.51  
                    6      : 320   Max.   :41.40   Max.   :1   Max.   :41.44  
                    (Other):1920                                              
     x0_sd         y0         y0_group     y0_bar           y0_sd      
 Min.   :1   Min.   : 23.30   1:1920   Min.   : 23.31   Min.   :21.48  
 1st Qu.:1   1st Qu.: 62.98   2:1920   1st Qu.: 62.98   1st Qu.:21.48  
 Median :1   Median :117.40            Median :117.37   Median :21.48  
 Mean   :1   Mean   :118.78            Mean   :118.77   Mean   :21.48  
 3rd Qu.:1   3rd Qu.:177.00            3rd Qu.:176.99   3rd Qu.:21.48  
 Max.   :1   Max.   :210.40            Max.   :210.37   Max.   :21.48  
                                                                       
  temp_target       n_reps        rep           x_flag         
 Min.   :30.0   Min.   :32   Min.   : 1.00   Length:3840       
 1st Qu.:38.0   1st Qu.:32   1st Qu.: 8.75   Class :character  
 Median :40.0   Median :32   Median :16.50   Mode  :character  
 Mean   :38.8   Mean   :32   Mean   :16.50                     
 3rd Qu.:42.0   3rd Qu.:32   3rd Qu.:24.25                     
 Max.   :44.0   Max.   :32   Max.   :32.00                     
                                                               
    y_flag                x               y         
 Length:3840        Min.   :26.66   Min.   :  0.00  
 Class :character   1st Qu.:37.27   1st Qu.: 26.00  
 Mode  :character   Median :39.99   Median : 60.00  
                    Mean   :38.78   Mean   : 85.27  
                    3rd Qu.:42.44   3rd Qu.:128.00  
                    Max.   :45.90   Max.   :608.00  
                                                    
> n_reps
[1] 8
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 400 #2000
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- c("groups_1")
> flags_y <- c("groups_2")
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     x0 = flags_x, y0 = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                    .... [TRUNCATED] 
[1] "brms: groups_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd  x0_group  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd y0_group2  male              y0  0    (vectorized)
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 400 #2000
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- c("groups_1")
> flags_y <- c("groups_2")
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     x0 = flags_x, y0 = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                    .... [TRUNCATED] 
[1] "brms: groups_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd  x0_group  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd y0_group2  male              y0  0    (vectorized)
Error: The following priors do not correspond to any model parameter: 
<lower=30,upper=45.5> b_x0 ~ uniform(30, 45.5)
Function 'get_prior' might be helpful to you.
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 400 #2000
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- c("groups_1")
> flags_y <- c("groups_2")
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     x0 = flags_x, y0 = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                    .... [TRUNCATED] 
[1] "brms: groups_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd  x0_group  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd y0_group2  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[321] is -1.29728, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.605408, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.860721, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.505101, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -2.16666, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[481] is -0.0487371, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[321] is -1.60846, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.03553, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.162397, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.680599, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 1: 
Chain 1: Gradient evaluation took 0.00575 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 57.5 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.949307, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.0683499, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.400431, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.467735, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -2.14147, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -2.20855, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.683993, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.502129, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[481] is -1.60358, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.178113, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[641] is -2.4714, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -3.61937, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.888068, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -3.32111, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.495539, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.259159, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.721759, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.122208, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.502809, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.388745, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.333402, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 2: Rejecting initial value:
Chain 2:   Error evaluating the log probability at the initial value.
Chain 2: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.265865, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 2: 
Chain 2: Gradient evaluation took 0.005802 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 58.02 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.336187, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[321] is -1.85355, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.918848, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.184643, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.942068, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.70066, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1601] is -0.122321, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.661599, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.798806, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.67688, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.347744, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -2.26142, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[481] is -0.937912, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[801] is -0.0188332, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.742357, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[321] is -0.25833, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.262009, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -1.15221, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -1.99594, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.146036, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.507542, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -1.57834, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.0231327, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: Rejecting initial value:
Chain 3:   Error evaluating the log probability at the initial value.
Chain 3: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.571512, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 3: 
Chain 3: Gradient evaluation took 0.005862 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 58.62 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[481] is -0.285722, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.195496, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[1] is -0.00654868, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[961] is -0.684653, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 4: Rejecting initial value:
Chain 4:   Error evaluating the log probability at the initial value.
Chain 4: Exception: neg_binomial_2_lpmf: Location parameter[161] is -0.746188, but must be positive finite! (in 'anon_model', line 75, column 4 to column 49)
Chain 4: 
Chain 4: Gradient evaluation took 0.005842 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 58.42 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 1: Iteration:   1 / 400 [  0%]  (Warmup)
Chain 2: Iteration:   1 / 400 [  0%]  (Warmup)
Chain 3: Iteration:   1 / 400 [  0%]  (Warmup)
Chain 4: Iteration:   1 / 400 [  0%]  (Warmup)
Chain 1: Iteration:  40 / 400 [ 10%]  (Warmup)
Chain 4: Iteration:  40 / 400 [ 10%]  (Warmup)
Chain 2: Iteration:  40 / 400 [ 10%]  (Warmup)
Chain 3: Iteration:  40 / 400 [ 10%]  (Warmup)
for(x_flag in flags_x) {
    for(y_flag in flags_y) {

        ## Set up variables for saving model and fit
        desc <- paste0(model, ": ", x_flag, ", ", y_flag)
        curr_row <- which(fit_tbl$model == model &
                          fit_tbl$x0 == x_flag &
                   .... [TRUNCATED]   C-c C-c
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 400 #2000
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- c("groups_1")
> flags_y <- c("groups_2")
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     x0 = flags_x, y0 = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                    .... [TRUNCATED] 
[1] "brms: groups_1, groups_2"
Error in h(simpleError(msg, call)) : 
  error in evaluating the argument 'x' in selecting a method for function 'print': Invalid syntax used in group-level terms.
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 400 #2000
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- c("groups_1")
> flags_y <- c("groups_2")
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     x0 = flags_x, y0 = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                    .... [TRUNCATED] 
[1] "brms: groups_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd  x0_group  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd y0_group2  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.006983 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 69.83 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.006434 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 64.34 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.00636 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 63.6 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.006234 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 62.34 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 1: Iteration:   1 / 400 [  0%]  (Warmup)
Chain 2: Iteration:   1 / 400 [  0%]  (Warmup)
Chain 3: Iteration:   1 / 400 [  0%]  (Warmup)
Chain 4: Iteration:   1 / 400 [  0%]  (Warmup)
Chain 3: Iteration:  40 / 400 [ 10%]  (Warmup)
Chain 1: Iteration:  40 / 400 [ 10%]  (Warmup)
Chain 4: Iteration:  40 / 400 [ 10%]  (Warmup)
Chain 2: Iteration:  40 / 400 [ 10%]  (Warmup)
Chain 1: Iteration:  80 / 400 [ 20%]  (Warmup)
Chain 4: Iteration:  80 / 400 [ 20%]  (Warmup)
Chain 3: Iteration:  80 / 400 [ 20%]  (Warmup)
Chain 2: Iteration:  80 / 400 [ 20%]  (Warmup)
Chain 4: Iteration: 120 / 400 [ 30%]  (Warmup)
Chain 3: Iteration: 120 / 400 [ 30%]  (Warmup)
Chain 1: Iteration: 120 / 400 [ 30%]  (Warmup)
Chain 2: Iteration: 120 / 400 [ 30%]  (Warmup)
Chain 1: Iteration: 160 / 400 [ 40%]  (Warmup)
Chain 3: Iteration: 160 / 400 [ 40%]  (Warmup)
Chain 4: Iteration: 160 / 400 [ 40%]  (Warmup)
Chain 2: Iteration: 160 / 400 [ 40%]  (Warmup)
Chain 1: Iteration: 200 / 400 [ 50%]  (Warmup)
Chain 1: Iteration: 201 / 400 [ 50%]  (Sampling)
Chain 3: Iteration: 200 / 400 [ 50%]  (Warmup)
Chain 3: Iteration: 201 / 400 [ 50%]  (Sampling)
Chain 2: Iteration: 200 / 400 [ 50%]  (Warmup)
Chain 2: Iteration: 201 / 400 [ 50%]  (Sampling)
Chain 4: Iteration: 200 / 400 [ 50%]  (Warmup)
Chain 4: Iteration: 201 / 400 [ 50%]  (Sampling)
Chain 1: Iteration: 240 / 400 [ 60%]  (Sampling)
Chain 2: Iteration: 240 / 400 [ 60%]  (Sampling)
Chain 3: Iteration: 240 / 400 [ 60%]  (Sampling)
Chain 4: Iteration: 240 / 400 [ 60%]  (Sampling)
Chain 1: Iteration: 280 / 400 [ 70%]  (Sampling)
Chain 2: Iteration: 280 / 400 [ 70%]  (Sampling)
Chain 3: Iteration: 280 / 400 [ 70%]  (Sampling)
Chain 4: Iteration: 280 / 400 [ 70%]  (Sampling)
Chain 1: Iteration: 320 / 400 [ 80%]  (Sampling)
Chain 2: Iteration: 320 / 400 [ 80%]  (Sampling)
Chain 3: Iteration: 320 / 400 [ 80%]  (Sampling)
Chain 4: Iteration: 320 / 400 [ 80%]  (Sampling)
Chain 1: Iteration: 360 / 400 [ 90%]  (Sampling)
Chain 2: Iteration: 360 / 400 [ 90%]  (Sampling)
Chain 3: Iteration: 360 / 400 [ 90%]  (Sampling)
Chain 1: Iteration: 400 / 400 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 227.087 seconds (Warm-up)
Chain 1:                138.543 seconds (Sampling)
Chain 1:                365.63 seconds (Total)
Chain 1: 
Chain 4: Iteration: 360 / 400 [ 90%]  (Sampling)
Chain 2: Iteration: 400 / 400 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 240.239 seconds (Warm-up)
Chain 2:                135.442 seconds (Sampling)
Chain 2:                375.681 seconds (Total)
Chain 2: 
Chain 3: Iteration: 400 / 400 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 237.505 seconds (Warm-up)
Chain 3:                151.751 seconds (Sampling)
Chain 3:                389.256 seconds (Total)
Chain 3: 
Chain 4: Iteration: 400 / 400 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 243.196 seconds (Warm-up)
Chain 4:                153.21 seconds (Sampling)
Chain 4:                396.406 seconds (Total)
Chain 4: 
Warning: There were 5 divergent transitions after warmup. See
https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
to find out why this is a problem and how to eliminate them.
Warning: Examine the pairs() plot to diagnose sampling problems

Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-ess
Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#tail-ess
Warning: There were 5 divergent transitions after warmup. Increasing adapt_delta above 0.875 may help. See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (x0_group || male)
         y0 ~ 1 + (y0_group || male)
   Data: data (Number of observations: 3840) 
  Draws: 4 chains, each with iter = 400; warmup = 200; thin = 1;
         total post-warmup draws = 800

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)     1.37      0.76     0.12     3.03 1.01      174      302
sd(x0_x0_group)      1.36      0.81     0.05     3.12 1.01      237      282
sd(y0_Intercept)    28.58     11.43    14.61    57.52 1.01      263      288
sd(y0_y0_group2)   127.69     34.87    78.91   214.68 1.00      422      570

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    38.80      0.63    37.56    40.05 1.00      473      437
y0_Intercept    60.08     12.56    39.53    92.03 1.01      301      251

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     3.13      0.08     2.98     3.27 1.01     1243      589

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
> save(file = file.path(output_dir, paste0("fit_tbl_data_", x_flag_data, "_", y_flag_data, "_n3.Rda")), fit_tbl)
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 400 #2000
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- c("groups_1")
> flags_y <- c("groups_2")
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     x0 = flags_x, y0 = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                    .... [TRUNCATED] 
[1] "brms: groups_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd  x0_group  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.006069 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 60.69 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.005914 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 59.14 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.00622 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 62.2 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 1: Iteration:   1 / 400 [  0%]  (Warmup)
Chain 4: 
Chain 4: Gradient evaluation took 0.005641 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 56.41 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 2: Iteration:   1 / 400 [  0%]  (Warmup)
Chain 3: Iteration:   1 / 400 [  0%]  (Warmup)
Chain 4: Iteration:   1 / 400 [  0%]  (Warmup)
Chain 2: Iteration:  40 / 400 [ 10%]  (Warmup)
Chain 1: Iteration:  40 / 400 [ 10%]  (Warmup)
Chain 3: Iteration:  40 / 400 [ 10%]  (Warmup)
Chain 4: Iteration:  40 / 400 [ 10%]  (Warmup)
Chain 2: Iteration:  80 / 400 [ 20%]  (Warmup)
Chain 3: Iteration:  80 / 400 [ 20%]  (Warmup)
Chain 1: Iteration:  80 / 400 [ 20%]  (Warmup)
Chain 4: Iteration:  80 / 400 [ 20%]  (Warmup)
Chain 2: Iteration: 120 / 400 [ 30%]  (Warmup)
Chain 1: Iteration: 120 / 400 [ 30%]  (Warmup)
Chain 3: Iteration: 120 / 400 [ 30%]  (Warmup)
Chain 4: Iteration: 120 / 400 [ 30%]  (Warmup)
Chain 2: Iteration: 160 / 400 [ 40%]  (Warmup)
Chain 1: Iteration: 160 / 400 [ 40%]  (Warmup)
Chain 3: Iteration: 160 / 400 [ 40%]  (Warmup)
Chain 2: Iteration: 200 / 400 [ 50%]  (Warmup)
Chain 2: Iteration: 201 / 400 [ 50%]  (Sampling)
Chain 4: Iteration: 160 / 400 [ 40%]  (Warmup)
Chain 1: Iteration: 200 / 400 [ 50%]  (Warmup)
Chain 1: Iteration: 201 / 400 [ 50%]  (Sampling)
Chain 2: Iteration: 240 / 400 [ 60%]  (Sampling)
Chain 3: Iteration: 200 / 400 [ 50%]  (Warmup)
Chain 3: Iteration: 201 / 400 [ 50%]  (Sampling)
Chain 1: Iteration: 240 / 400 [ 60%]  (Sampling)
Chain 4: Iteration: 200 / 400 [ 50%]  (Warmup)
Chain 2: Iteration: 280 / 400 [ 70%]  (Sampling)
Chain 4: Iteration: 201 / 400 [ 50%]  (Sampling)
Chain 3: Iteration: 240 / 400 [ 60%]  (Sampling)
Chain 1: Iteration: 280 / 400 [ 70%]  (Sampling)
Chain 2: Iteration: 320 / 400 [ 80%]  (Sampling)
Chain 4: Iteration: 240 / 400 [ 60%]  (Sampling)
Chain 1: Iteration: 320 / 400 [ 80%]  (Sampling)
Chain 3: Iteration: 280 / 400 [ 70%]  (Sampling)
Chain 2: Iteration: 360 / 400 [ 90%]  (Sampling)
Chain 1: Iteration: 360 / 400 [ 90%]  (Sampling)
Chain 4: Iteration: 280 / 400 [ 70%]  (Sampling)
Chain 2: Iteration: 400 / 400 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 124.922 seconds (Warm-up)
Chain 2:                89.964 seconds (Sampling)
Chain 2:                214.886 seconds (Total)
Chain 2: 
Chain 3: Iteration: 320 / 400 [ 80%]  (Sampling)
Chain 1: Iteration: 400 / 400 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 139.305 seconds (Warm-up)
Chain 1:                83.028 seconds (Sampling)
Chain 1:                222.333 seconds (Total)
Chain 1: 
Chain 4: Iteration: 320 / 400 [ 80%]  (Sampling)
Chain 3: Iteration: 360 / 400 [ 90%]  (Sampling)
Chain 4: Iteration: 360 / 400 [ 90%]  (Sampling)
Chain 3: Iteration: 400 / 400 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 146.901 seconds (Warm-up)
Chain 3:                119.884 seconds (Sampling)
Chain 3:                266.785 seconds (Total)
Chain 3: 
Chain 4: Iteration: 400 / 400 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 159.36 seconds (Warm-up)
Chain 4:                121.198 seconds (Sampling)
Chain 4:                280.558 seconds (Total)
Chain 4: 
Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-ess
Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#tail-ess
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (x0_group || male)
         y0 ~ (1 || male) + y0_group
   Data: data (Number of observations: 3840) 
  Draws: 4 chains, each with iter = 400; warmup = 200; thin = 1;
         total post-warmup draws = 800

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)     1.31      0.78     0.04     2.87 1.02      155      231
sd(x0_x0_group)      1.34      0.80     0.06     3.11 1.03      185      279
sd(y0_Intercept)    22.33      5.89    13.51    37.29 1.01      251      344

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    38.81      0.69    37.47    40.17 1.00      457      312
y0_Intercept    47.99      7.04    35.35    62.31 1.02      251      344
y0_y0_group2   142.41      5.86   131.58   154.39 1.00      753      667

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     3.12      0.08     2.97     3.26 1.02     1448      722

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
> save(file = file.path(output_dir, paste0("fit_tbl_data_", x_flag_data, "_", y_flag_data, "_n3.Rda")), fit_tbl)
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 400 #2000
> flags <- c("groups_2")
> models <- c("brms")
> flags_x <- c("groups_1")
> flags_y <- c("groups_2")
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     x0 = flags_x, y0 = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                    .... [TRUNCATED] 
[1] "brms: groups_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.004628 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 46.28 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.004401 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 44.01 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.004596 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 45.96 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 1: Iteration:   1 / 400 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.004407 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 44.07 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 2: Iteration:   1 / 400 [  0%]  (Warmup)
Chain 3: Iteration:   1 / 400 [  0%]  (Warmup)
Chain 4: Iteration:   1 / 400 [  0%]  (Warmup)
Chain 2: Iteration:  40 / 400 [ 10%]  (Warmup)
Chain 3: Iteration:  40 / 400 [ 10%]  (Warmup)
Chain 1: Iteration:  40 / 400 [ 10%]  (Warmup)
Chain 4: Iteration:  40 / 400 [ 10%]  (Warmup)
Chain 2: Iteration:  80 / 400 [ 20%]  (Warmup)
Chain 1: Iteration:  80 / 400 [ 20%]  (Warmup)
Chain 4: Iteration:  80 / 400 [ 20%]  (Warmup)
Chain 3: Iteration:  80 / 400 [ 20%]  (Warmup)
Chain 2: Iteration: 120 / 400 [ 30%]  (Warmup)
Chain 1: Iteration: 120 / 400 [ 30%]  (Warmup)
Chain 3: Iteration: 120 / 400 [ 30%]  (Warmup)
Chain 4: Iteration: 120 / 400 [ 30%]  (Warmup)
Chain 2: Iteration: 160 / 400 [ 40%]  (Warmup)
Chain 1: Iteration: 160 / 400 [ 40%]  (Warmup)
Chain 3: Iteration: 160 / 400 [ 40%]  (Warmup)
Chain 4: Iteration: 160 / 400 [ 40%]  (Warmup)
Chain 2: Iteration: 200 / 400 [ 50%]  (Warmup)
Chain 2: Iteration: 201 / 400 [ 50%]  (Sampling)
Chain 1: Iteration: 200 / 400 [ 50%]  (Warmup)
Chain 1: Iteration: 201 / 400 [ 50%]  (Sampling)
Chain 3: Iteration: 200 / 400 [ 50%]  (Warmup)
Chain 3: Iteration: 201 / 400 [ 50%]  (Sampling)
Chain 4: Iteration: 200 / 400 [ 50%]  (Warmup)
Chain 4: Iteration: 201 / 400 [ 50%]  (Sampling)
Chain 2: Iteration: 240 / 400 [ 60%]  (Sampling)
Chain 4: Iteration: 240 / 400 [ 60%]  (Sampling)
Chain 3: Iteration: 240 / 400 [ 60%]  (Sampling)
Chain 2: Iteration: 280 / 400 [ 70%]  (Sampling)
Chain 1: Iteration: 240 / 400 [ 60%]  (Sampling)
Chain 4: Iteration: 280 / 400 [ 70%]  (Sampling)
Chain 3: Iteration: 280 / 400 [ 70%]  (Sampling)
Chain 4: Iteration: 320 / 400 [ 80%]  (Sampling)
Chain 2: Iteration: 320 / 400 [ 80%]  (Sampling)
Chain 1: Iteration: 280 / 400 [ 70%]  (Sampling)
Chain 3: Iteration: 320 / 400 [ 80%]  (Sampling)
Chain 4: Iteration: 360 / 400 [ 90%]  (Sampling)
Chain 2: Iteration: 360 / 400 [ 90%]  (Sampling)
Chain 4: Iteration: 400 / 400 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 85.776 seconds (Warm-up)
Chain 4:                45.77 seconds (Sampling)
Chain 4:                131.546 seconds (Total)
Chain 4: 
Chain 3: Iteration: 360 / 400 [ 90%]  (Sampling)
Chain 2: Iteration: 400 / 400 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 77.824 seconds (Warm-up)
Chain 2:                56.13 seconds (Sampling)
Chain 2:                133.954 seconds (Total)
Chain 2: 
Chain 1: Iteration: 320 / 400 [ 80%]  (Sampling)
Chain 3: Iteration: 400 / 400 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 84.491 seconds (Warm-up)
Chain 3:                60.086 seconds (Sampling)
Chain 3:                144.577 seconds (Total)
Chain 3: 
Chain 1: Iteration: 360 / 400 [ 90%]  (Sampling)
Chain 1: Iteration: 400 / 400 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 83.694 seconds (Warm-up)
Chain 1:                79.723 seconds (Sampling)
Chain 1:                163.417 seconds (Total)
Chain 1: 
Warning: There were 1 divergent transitions after warmup. See
https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
to find out why this is a problem and how to eliminate them.
Warning: Examine the pairs() plot to diagnose sampling problems

Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-ess
Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#tail-ess
Warning: There were 1 divergent transitions after warmup. Increasing adapt_delta above 0.875 may help. See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male)
         y0 ~ (1 || male) + y0_group
   Data: data (Number of observations: 3840) 
  Draws: 4 chains, each with iter = 400; warmup = 200; thin = 1;
         total post-warmup draws = 800

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)     1.97      0.50     1.21     3.16 1.01      313      415
sd(y0_Intercept)    22.53      5.81    14.42    37.46 1.01      299      418

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    38.84      0.62    37.62    40.02 1.02      224      366
y0_Intercept    46.40      7.45    31.11    61.31 1.00      277      404
y0_y0_group2   143.13      6.54   131.66   157.26 1.02      454      437

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     3.12      0.08     2.96     3.27 1.01     1270      574

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
> save(file = file.path(output_dir, paste0("fit_tbl_data_", x_flag_data, "_", y_flag_data, "_n3.Rda")), fit_tbl)
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + Error in ss(file, echo = visibly, local = local, print.eval = output,  : 
  /tmp/brms_two.piece_create.and.fit.simulated.data.Rmd!IhYzf3:110:104: unexpected symbol
109: 
110: save(file = file.path(output_dir, paste0("fit_tbl_data_", x_flag_data, "_", y_flag_data, "_n_reps_", n)reps
                                                                                                            ^
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 1000
> flags <- c("uniform_1", "uniform_2", "groups_1", "groups_2")
> models <- c("brms")
> flags_x <- flags
> flags_y <- flags
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     x0 = flags_x, y0 = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0 == x_flag &
+                    .... [TRUNCATED] 
[1] "brms: uniform_1, uniform_1"
             prior class   coef group resp dpar nlpar lb ub       source
 gamma(0.01, 0.01) shape                               0         default
            (flat)     b                           x0            default
            (flat)     b  male1                    x0       (vectorized)
            (flat)     b male10                    x0       (vectorized)
            (flat)     b male11                    x0       (vectorized)
            (flat)     b male12                    x0       (vectorized)
            (flat)     b  male2                    x0       (vectorized)
            (flat)     b  male3                    x0       (vectorized)
            (flat)     b  male4                    x0       (vectorized)
            (flat)     b  male5                    x0       (vectorized)
            (flat)     b  male6                    x0       (vectorized)
            (flat)     b  male7                    x0       (vectorized)
            (flat)     b  male8                    x0       (vectorized)
            (flat)     b  male9                    x0       (vectorized)
            (flat)     b                           y0            default
            (flat)     b  male1                    y0       (vectorized)
            (flat)     b male10                    y0       (vectorized)
            (flat)     b male11                    y0       (vectorized)
            (flat)     b male12                    y0       (vectorized)
            (flat)     b  male2                    y0       (vectorized)
            (flat)     b  male3                    y0       (vectorized)
            (flat)     b  male4                    y0       (vectorized)
            (flat)     b  male5                    y0       (vectorized)
            (flat)     b  male6                    y0       (vectorized)
            (flat)     b  male7                    y0       (vectorized)
            (flat)     b  male8                    y0       (vectorized)
            (flat)     b  male9                    y0       (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.004176 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 41.76 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.004396 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 43.96 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.004368 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 43.68 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.003773 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 37.73 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 28.599 seconds (Warm-up)
Chain 1:                28.608 seconds (Sampling)
Chain 1:                57.207 seconds (Total)
Chain 1: 
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 30.084 seconds (Warm-up)
Chain 4:                28.787 seconds (Sampling)
Chain 4:                58.871 seconds (Total)
Chain 4: 
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 30.577 seconds (Warm-up)
Chain 3:                28.661 seconds (Sampling)
Chain 3:                59.238 seconds (Total)
Chain 3: 
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 30.928 seconds (Warm-up)
Chain 2:                30.867 seconds (Sampling)
Chain 2:                61.795 seconds (Total)
Chain 2: 
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ -1 + male
         y0 ~ -1 + male
   Data: data (Number of observations: 3840) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Population-Level Effects: 
          Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_male1     39.94      0.49    38.98    40.95 1.00     2061     1340
x0_male2     40.51      0.45    39.58    41.38 1.00     2453     1522
x0_male3     40.74      0.47    39.83    41.63 1.00     2023     1431
x0_male4     39.93      0.51    38.89    40.88 1.00     2095     1629
x0_male5     41.02      0.41    40.12    41.76 1.00     1973     1283
x0_male6     38.33      0.76    36.73    39.70 1.00     1615      989
x0_male7     38.32      0.58    37.06    39.40 1.00     2374     1423
x0_male8     36.59      0.82    34.78    38.12 1.01     2369     1293
x0_male9     35.97      1.04    33.75    37.93 1.00     2357     1275
x0_male10    35.93      0.99    33.82    37.63 1.00     1928     1156
x0_male11    36.76      0.76    35.11    38.17 1.00     2042     1110
x0_male12    40.87      0.32    40.24    41.47 1.00     2239     1459
y0_male1     31.18      1.72    27.93    34.63 1.00     2269     1228
y0_male2     57.51      2.93    52.13    63.74 1.00     2580     1518
y0_male3    171.30      9.36   154.19   191.05 1.00     2455     1593
y0_male4    176.92      9.78   159.48   197.48 1.00     2287     1401
y0_male5     99.03      4.93    90.33   109.45 1.00     2135     1535
y0_male6     77.81      5.91    67.79    91.17 1.00     1747     1223
y0_male7    173.01     10.80   153.98   197.51 1.00     2460     1476
y0_male8     63.77      4.94    54.85    74.40 1.00     2338     1480
y0_male9     82.91      7.42    69.28    99.29 1.00     2283     1203
y0_male10   194.34     16.48   165.24   229.13 1.00     1835      975
y0_male11   189.66     13.96   164.33   219.38 1.00     2083     1375
y0_male12   115.45      5.09   106.05   125.84 1.00     2299     1418

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.33      0.05     2.23     2.43 1.00     2643     1298

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: uniform_1, uniform_2"
             prior class      coef group resp dpar nlpar lb ub       source
 gamma(0.01, 0.01) shape                                  0         default
            (flat)     b                              x0            default
            (flat)     b     male1                    x0       (vectorized)
            (flat)     b    male10                    x0       (vectorized)
            (flat)     b    male11                    x0       (vectorized)
            (flat)     b    male12                    x0       (vectorized)
            (flat)     b     male2                    x0       (vectorized)
            (flat)     b     male3                    x0       (vectorized)
            (flat)     b     male4                    x0       (vectorized)
            (flat)     b     male5                    x0       (vectorized)
            (flat)     b     male6                    x0       (vectorized)
            (flat)     b     male7                    x0       (vectorized)
            (flat)     b     male8                    x0       (vectorized)
            (flat)     b     male9                    x0       (vectorized)
            (flat)     b                              y0            default
            (flat)     b     male1                    y0       (vectorized)
            (flat)     b    male10                    y0       (vectorized)
            (flat)     b    male11                    y0       (vectorized)
            (flat)     b    male12                    y0       (vectorized)
            (flat)     b     male2                    y0       (vectorized)
            (flat)     b     male3                    y0       (vectorized)
            (flat)     b     male4                    y0       (vectorized)
            (flat)     b     male5                    y0       (vectorized)
            (flat)     b     male6                    y0       (vectorized)
            (flat)     b     male7                    y0       (vectorized)
            (flat)     b     male8                    y0       (vectorized)
            (flat)     b     male9                    y0       (vectorized)
            (flat)     b y0_group2                    y0       (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.005261 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 52.61 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.005435 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 54.35 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.004318 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 43.18 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.004903 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 49.03 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 45.279 seconds (Warm-up)
Chain 3:                32.998 seconds (Sampling)
Chain 3:                78.277 seconds (Total)
Chain 3: 
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 50.978 seconds (Warm-up)
Chain 1:                37.811 seconds (Sampling)
Chain 1:                88.789 seconds (Total)
Chain 1: 
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 70.233 seconds (Warm-up)
Chain 2:                34.756 seconds (Sampling)
Chain 2:                104.989 seconds (Total)
Chain 2: 
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 117.12 seconds (Warm-up)
Chain 4:                30.68 seconds (Sampling)
Chain 4:                147.8 seconds (Total)
Chain 4: 
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ -1 + male
         y0 ~ -1 + male + y0_group
   Data: data (Number of observations: 3840) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_male1        39.94      0.41    39.18    40.87 1.00     2196     1330
x0_male2        40.52      0.38    39.71    41.24 1.00     2525     1408
x0_male3        40.69      0.41    39.88    41.43 1.00     2921     1540
x0_male4        39.93      0.46    38.99    40.72 1.00     2636     1561
x0_male5        40.86      0.34    40.13    41.51 1.00     1914     1464
x0_male6        38.40      0.64    37.06    39.54 1.00     1906     1082
x0_male7        38.29      0.45    37.38    39.09 1.00     2725     1624
x0_male8        36.62      0.67    35.19    37.81 1.00     2378     1320
x0_male9        36.00      0.87    34.13    37.71 1.00     1922     1385
x0_male10       36.02      0.86    34.28    37.61 1.00     1488     1121
x0_male11       36.81      0.68    35.42    38.04 1.00     2181     1347
x0_male12       40.36      0.44    39.40    41.11 1.00     2232     1425
y0_male1        31.17      1.47    28.34    34.04 1.01     2736     1419
y0_male2        57.37      2.46    53.01    62.66 1.00     2459     1589
y0_male3        27.31      9.21    12.06    45.90 1.00     1133     1041
y0_male4        32.87     10.26    14.96    55.30 1.00     1420     1134
y0_male5        18.73      1.03    16.78    20.85 1.00     3218     1594
y0_male6        77.11      4.90    68.25    87.65 1.00     1905     1192
y0_male7        27.93      9.69    12.15    49.39 1.00     1104     1087
y0_male8        63.39      4.01    56.31    71.84 1.00     2370     1476
y0_male9        82.77      6.24    70.98    96.11 1.00     2023     1169
y0_male10       48.62     15.64    20.06    79.83 1.00     1148      830
y0_male11       43.85     14.03    18.07    72.42 1.00     1244      828
y0_male12       58.25      3.50    51.99    65.88 1.00     2496     1474
y0_y0_group2   144.71      6.03   133.09   156.46 1.00      953     1354

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     3.12      0.08     2.97     3.27 1.00     3553     1326

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: uniform_1, groups_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b     male1                    x0       (vectorized)
                (flat)     b    male10                    x0       (vectorized)
                (flat)     b    male11                    x0       (vectorized)
                (flat)     b    male12                    x0       (vectorized)
                (flat)     b     male2                    x0       (vectorized)
                (flat)     b     male3                    x0       (vectorized)
                (flat)     b     male4                    x0       (vectorized)
                (flat)     b     male5                    x0       (vectorized)
                (flat)     b     male6                    x0       (vectorized)
                (flat)     b     male7                    x0       (vectorized)
                (flat)     b     male8                    x0       (vectorized)
                (flat)     b     male9                    x0       (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.005455 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 54.55 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.004851 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 48.51 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.005338 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 53.38 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: 
Chain 4: Gradient evaluation took 0.00457 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 45.7 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 249.774 seconds (Warm-up)
Chain 4:                178.751 seconds (Sampling)
Chain 4:                428.525 seconds (Total)
Chain 4: 
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 225.563 seconds (Warm-up)
Chain 2:                278.504 seconds (Sampling)
Chain 2:                504.067 seconds (Total)
Chain 2: 
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 237.565 seconds (Warm-up)
Chain 3:                271.779 seconds (Sampling)
Chain 3:                509.344 seconds (Total)
Chain 3: 
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 236.942 seconds (Warm-up)
Chain 1:                284.892 seconds (Sampling)
Chain 1:                521.834 seconds (Total)
Chain 1: 
Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-ess
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ -1 + male
         y0 ~ (1 || male)
   Data: data (Number of observations: 3840) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(y0_Intercept)    61.05     13.93    41.18    93.35 1.02      651      888

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_male1        39.93      0.49    38.99    40.99 1.01     2165     1619
x0_male2        40.50      0.43    39.64    41.32 1.00     2703     1519
x0_male3        40.79      0.47    39.84    41.66 1.00     2847     1513
x0_male4        39.99      0.51    38.91    40.86 1.00     2401     1290
x0_male5        41.01      0.41    40.16    41.74 1.01     2616      958
x0_male6        38.33      0.74    36.79    39.62 1.00     2416     1259
x0_male7        38.40      0.57    37.24    39.51 1.00     2474     1465
x0_male8        36.54      0.82    34.84    37.99 1.00     2611     1220
x0_male9        35.93      0.96    33.96    37.80 1.01     2238     1252
x0_male10       36.24      0.99    34.18    37.92 1.00     1755      765
x0_male11       36.94      0.73    35.43    38.23 1.01     2631     1554
x0_male12       40.88      0.31    40.24    41.47 1.00     2561     1436
y0_Intercept   118.28     17.99    83.75   154.57 1.00      389      753

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.33      0.05     2.23     2.44 1.00     3454     1452

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: uniform_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b     male1                    x0       (vectorized)
                (flat)     b    male10                    x0       (vectorized)
                (flat)     b    male11                    x0       (vectorized)
                (flat)     b    male12                    x0       (vectorized)
                (flat)     b     male2                    x0       (vectorized)
                (flat)     b     male3                    x0       (vectorized)
                (flat)     b     male4                    x0       (vectorized)
                (flat)     b     male5                    x0       (vectorized)
                (flat)     b     male6                    x0       (vectorized)
                (flat)     b     male7                    x0       (vectorized)
                (flat)     b     male8                    x0       (vectorized)
                (flat)     b     male9                    x0       (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.004679 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 46.79 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.004798 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 47.98 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.004544 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 45.44 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: 
Chain 4: Gradient evaluation took 0.003906 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 39.06 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 126.159 seconds (Warm-up)
Chain 4:                132.071 seconds (Sampling)
Chain 4:                258.23 seconds (Total)
Chain 4: 
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 148.823 seconds (Warm-up)
Chain 2:                147.158 seconds (Sampling)
Chain 2:                295.981 seconds (Total)
Chain 2: 
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 160.118 seconds (Warm-up)
Chain 3:                138.644 seconds (Sampling)
Chain 3:                298.762 seconds (Total)
Chain 3: 
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 149.102 seconds (Warm-up)
Chain 1:                158.896 seconds (Sampling)
Chain 1:                307.998 seconds (Total)
Chain 1: 
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ -1 + male
         y0 ~ (1 || male) + y0_group
   Data: data (Number of observations: 3840) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(y0_Intercept)    22.65      5.91    13.91    36.92 1.00      780     1055

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_male1        39.91      0.39    39.16    40.85 1.01     2723     1263
x0_male2        40.54      0.40    39.73    41.29 1.00     2505     1257
x0_male3        40.63      0.42    39.79    41.41 1.00     2863     1445
x0_male4        39.89      0.44    39.00    40.70 1.00     2225     1270
x0_male5        40.91      0.34    40.17    41.57 1.00     2208     1294
x0_male6        38.57      0.60    37.37    39.64 1.00     2643     1452
x0_male7        38.20      0.48    37.23    39.08 1.00     2815     1448
x0_male8        36.71      0.68    35.20    38.00 1.00     2565     1230
x0_male9        36.36      0.81    34.72    37.86 1.00     2698     1182
x0_male10       36.11      0.73    34.66    37.51 1.00     1841     1364
x0_male11       36.79      0.59    35.55    37.93 1.00     2016     1116
x0_male12       40.45      0.41    39.54    41.16 1.00     2041     1535
y0_Intercept    48.20      7.19    33.47    62.47 1.01      639      770
y0_y0_group2   142.20      6.16   130.28   155.11 1.00     1470     1337

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     3.11      0.07     2.96     3.26 1.00     2998     1199

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: uniform_2, uniform_1"
             prior class      coef group resp dpar nlpar lb ub       source
 gamma(0.01, 0.01) shape                                  0         default
            (flat)     b                              x0            default
            (flat)     b     male1                    x0       (vectorized)
            (flat)     b    male10                    x0       (vectorized)
            (flat)     b    male11                    x0       (vectorized)
            (flat)     b    male12                    x0       (vectorized)
            (flat)     b     male2                    x0       (vectorized)
            (flat)     b     male3                    x0       (vectorized)
            (flat)     b     male4                    x0       (vectorized)
            (flat)     b     male5                    x0       (vectorized)
            (flat)     b     male6                    x0       (vectorized)
            (flat)     b     male7                    x0       (vectorized)
            (flat)     b     male8                    x0       (vectorized)
            (flat)     b     male9                    x0       (vectorized)
            (flat)     b x0_group2                    x0       (vectorized)
            (flat)     b                              y0            default
            (flat)     b     male1                    y0       (vectorized)
            (flat)     b    male10                    y0       (vectorized)
            (flat)     b    male11                    y0       (vectorized)
            (flat)     b    male12                    y0       (vectorized)
            (flat)     b     male2                    y0       (vectorized)
            (flat)     b     male3                    y0       (vectorized)
            (flat)     b     male4                    y0       (vectorized)
            (flat)     b     male5                    y0       (vectorized)
            (flat)     b     male6                    y0       (vectorized)
            (flat)     b     male7                    y0       (vectorized)
            (flat)     b     male8                    y0       (vectorized)
            (flat)     b     male9                    y0       (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.004467 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 44.67 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.004207 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 42.07 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.004146 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 41.46 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.004026 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 40.26 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 45.632 seconds (Warm-up)
Chain 4:                17.374 seconds (Sampling)
Chain 4:                63.006 seconds (Total)
Chain 4: 
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 46.595 seconds (Warm-up)
Chain 3:                17.602 seconds (Sampling)
Chain 3:                64.197 seconds (Total)
Chain 3: 
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 49.926 seconds (Warm-up)
Chain 2:                17.295 seconds (Sampling)
Chain 2:                67.221 seconds (Total)
Chain 2: 
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 55.141 seconds (Warm-up)
Chain 1:                19.159 seconds (Sampling)
Chain 1:                74.3 seconds (Total)
Chain 1: 
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ -1 + male + x0_group
         y0 ~ -1 + male
   Data: data (Number of observations: 3840) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_male1        31.11      0.85    30.05    33.06 1.00     1503     1202
x0_male2        37.67      4.57    30.33    45.08 1.00     2656     1138
x0_male3        37.77      4.41    30.41    45.08 1.00     3381     1016
x0_male4        36.43      0.80    34.71    37.95 1.00     2060     1327
x0_male5        30.10      0.10    30.00    30.36 1.00     1899      962
x0_male6        38.68      0.63    37.35    39.87 1.00     2105     1451
x0_male7        38.16      0.63    36.88    39.36 1.00     2008     1524
x0_male8        36.55      0.86    34.68    38.12 1.00     1566     1426
x0_male9        37.57      0.72    36.11    38.92 1.00     2035     1456
x0_male10       35.92      1.04    33.80    37.75 1.00     1439     1273
x0_male11       36.74      0.79    35.04    38.21 1.00     1727     1425
x0_male12       37.73      4.40    30.42    45.10 1.00     4185     1021
x0_x0_group2    37.74      4.49    30.40    45.06 1.00     3748     1205
y0_male1        32.59      1.45    29.82    35.47 1.00     2578     1702
y0_male2        46.66      1.82    43.18    50.38 1.01     3062     1212
y0_male3       137.54      5.66   126.72   149.62 1.00     3151     1342
y0_male4       172.78      8.74   156.86   191.22 1.00     2301     1607
y0_male5        96.20      3.65    89.26   103.79 1.00     4080     1371
y0_male6        62.12      2.92    56.72    67.92 1.00     2234     1692
y0_male7       142.40      6.55   130.61   155.62 1.00     1936     1589
y0_male8        63.91      5.09    54.81    74.70 1.00     1650     1568
y0_male9        59.75      2.96    54.21    65.84 1.00     2073     1304
y0_male10      194.65     17.61   163.59   231.46 1.00     1517     1398
y0_male11      189.51     14.30   163.90   219.80 1.00     1677     1470
y0_male12       95.13      3.78    88.19   102.89 1.00     4210     1210

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.14      0.05     2.04     2.24 1.00     3510     1448

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: uniform_2, uniform_2"
             prior class      coef group resp dpar nlpar lb ub       source
 gamma(0.01, 0.01) shape                                  0         default
            (flat)     b                              x0            default
            (flat)     b     male1                    x0       (vectorized)
            (flat)     b    male10                    x0       (vectorized)
            (flat)     b    male11                    x0       (vectorized)
            (flat)     b    male12                    x0       (vectorized)
            (flat)     b     male2                    x0       (vectorized)
            (flat)     b     male3                    x0       (vectorized)
            (flat)     b     male4                    x0       (vectorized)
            (flat)     b     male5                    x0       (vectorized)
            (flat)     b     male6                    x0       (vectorized)
            (flat)     b     male7                    x0       (vectorized)
            (flat)     b     male8                    x0       (vectorized)
            (flat)     b     male9                    x0       (vectorized)
            (flat)     b x0_group2                    x0       (vectorized)
            (flat)     b                              y0            default
            (flat)     b     male1                    y0       (vectorized)
            (flat)     b    male10                    y0       (vectorized)
            (flat)     b    male11                    y0       (vectorized)
            (flat)     b    male12                    y0       (vectorized)
            (flat)     b     male2                    y0       (vectorized)
            (flat)     b     male3                    y0       (vectorized)
            (flat)     b     male4                    y0       (vectorized)
            (flat)     b     male5                    y0       (vectorized)
            (flat)     b     male6                    y0       (vectorized)
            (flat)     b     male7                    y0       (vectorized)
            (flat)     b     male8                    y0       (vectorized)
            (flat)     b     male9                    y0       (vectorized)
            (flat)     b y0_group2                    y0       (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.004606 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 46.06 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.005508 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 55.08 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.005072 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 50.72 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: 
Chain 4: Gradient evaluation took 0.004993 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 49.93 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 65.88 seconds (Warm-up)
Chain 1:                24.724 seconds (Sampling)
Chain 1:                90.604 seconds (Total)
Chain 1: 
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 62.316 seconds (Warm-up)
Chain 4:                29.661 seconds (Sampling)
Chain 4:                91.977 seconds (Total)
Chain 4: 
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 62.107 seconds (Warm-up)
Chain 2:                33.097 seconds (Sampling)
Chain 2:                95.204 seconds (Total)
Chain 2: 
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 71.757 seconds (Warm-up)
Chain 3:                26.868 seconds (Sampling)
Chain 3:                98.625 seconds (Total)
Chain 3: 
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ -1 + male + x0_group
         y0 ~ -1 + male + y0_group
   Data: data (Number of observations: 3840) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_male1        31.07      0.81    30.04    33.03 1.00     1913     1082
x0_male2        37.80      4.70    30.35    45.21 1.00     3190     1281
x0_male3        37.74      4.53    30.31    45.14 1.00     3334     1029
x0_male4        36.42      0.74    34.93    37.89 1.00     2574     1497
x0_male5        34.48      1.63    31.17    37.64 1.00     1290      916
x0_male6        38.70      0.61    37.39    39.83 1.00     2022     1425
x0_male7        38.11      0.61    36.89    39.31 1.00     2495     1567
x0_male8        36.56      0.81    34.76    38.04 1.00     1837     1259
x0_male9        37.59      0.69    36.16    38.88 1.00     2123     1369
x0_male10       35.87      1.02    33.75    37.74 1.00     1612     1128
x0_male11       36.76      0.76    35.15    38.12 1.00     2268     1394
x0_male12       37.65      4.55    30.33    45.20 1.00     2695     1213
x0_x0_group2    37.72      4.39    30.52    44.98 1.00     2845     1352
y0_male1        32.65      1.45    29.89    35.53 1.00     2877     1473
y0_male2        46.63      1.75    43.32    50.02 1.00     2638     1362
y0_male3        29.27      7.48    14.59    44.04 1.00      939      569
y0_male4        65.09      9.91    45.52    84.88 1.00     1297     1200
y0_male5        30.22      3.81    22.97    37.89 1.00     1272     1275
y0_male6        62.01      2.83    56.56    67.71 1.00     1850     1488
y0_male7        34.43      8.30    18.80    51.04 1.00     1068     1063
y0_male8        63.78      4.84    55.52    74.39 1.00     1974     1090
y0_male9        59.79      2.83    54.71    65.58 1.00     1911     1321
y0_male10       87.53     18.03    54.78   125.48 1.00     1163     1201
y0_male11       81.63     14.98    54.57   113.11 1.00     1588     1391
y0_male12       46.66      2.33    42.35    51.36 1.00     2781     1562
y0_y0_group2   108.06      5.59    96.99   119.00 1.00      882      742

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.42      0.06     2.31     2.54 1.00     2915     1521

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: uniform_2, groups_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b     male1                    x0       (vectorized)
                (flat)     b    male10                    x0       (vectorized)
                (flat)     b    male11                    x0       (vectorized)
                (flat)     b    male12                    x0       (vectorized)
                (flat)     b     male2                    x0       (vectorized)
                (flat)     b     male3                    x0       (vectorized)
                (flat)     b     male4                    x0       (vectorized)
                (flat)     b     male5                    x0       (vectorized)
                (flat)     b     male6                    x0       (vectorized)
                (flat)     b     male7                    x0       (vectorized)
                (flat)     b     male8                    x0       (vectorized)
                (flat)     b     male9                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.004566 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 45.66 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.004385 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 43.85 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.004292 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 42.92 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.004289 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 42.89 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 275.804 seconds (Warm-up)
Chain 2:                219.12 seconds (Sampling)
Chain 2:                494.924 seconds (Total)
Chain 2: 
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 339.763 seconds (Warm-up)
Chain 4:                192.518 seconds (Sampling)
Chain 4:                532.281 seconds (Total)
Chain 4: 
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 308.556 seconds (Warm-up)
Chain 3:                233.663 seconds (Sampling)
Chain 3:                542.219 seconds (Total)
Chain 3: 
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 322.633 seconds (Warm-up)
Chain 1:                253.218 seconds (Sampling)
Chain 1:                575.851 seconds (Total)
Chain 1: 
Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-ess
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ -1 + male + x0_group
         y0 ~ (1 || male)
   Data: data (Number of observations: 3840) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(y0_Intercept)    59.16     14.03    38.73    91.96 1.01      266      617

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_male1        31.07      0.87    30.03    33.18 1.00     1768      858
x0_male2        37.79      4.60    30.25    45.24 1.00     2425     1188
x0_male3        37.65      4.39    30.47    45.04 1.01     2780     1128
x0_male4        36.51      0.79    34.92    38.02 1.00     2335     1370
x0_male5        30.10      0.10    30.00    30.37 1.00     1587      944
x0_male6        38.66      0.61    37.42    39.82 1.00     2820     1747
x0_male7        38.15      0.64    36.84    39.40 1.00     2506     1461
x0_male8        36.45      0.92    34.56    38.17 1.00     2055      879
x0_male9        37.55      0.73    36.03    38.87 1.00     1911     1284
x0_male10       36.33      0.96    34.34    38.06 1.00     2083     1622
x0_male11       36.98      0.77    35.43    38.37 1.00     2063     1312
x0_male12       37.68      4.36    30.45    45.06 1.00     2048     1087
x0_x0_group2    37.72      4.41    30.40    45.17 1.01     2842      909
y0_Intercept   107.90     17.10    73.14   141.89 1.01      445      527

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.14      0.05     2.04     2.24 1.00     2742     1484

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: uniform_2, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b     male1                    x0       (vectorized)
                (flat)     b    male10                    x0       (vectorized)
                (flat)     b    male11                    x0       (vectorized)
                (flat)     b    male12                    x0       (vectorized)
                (flat)     b     male2                    x0       (vectorized)
                (flat)     b     male3                    x0       (vectorized)
                (flat)     b     male4                    x0       (vectorized)
                (flat)     b     male5                    x0       (vectorized)
                (flat)     b     male6                    x0       (vectorized)
                (flat)     b     male7                    x0       (vectorized)
                (flat)     b     male8                    x0       (vectorized)
                (flat)     b     male9                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.004729 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 47.29 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.005022 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 50.22 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.004272 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 42.72 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.004045 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 40.45 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 132.158 seconds (Warm-up)
Chain 2:                67.657 seconds (Sampling)
Chain 2:                199.815 seconds (Total)
Chain 2: 
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 144.467 seconds (Warm-up)
Chain 3:                74.273 seconds (Sampling)
Chain 3:                218.74 seconds (Total)
Chain 3: 
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 147.499 seconds (Warm-up)
Chain 4:                72.146 seconds (Sampling)
Chain 4:                219.645 seconds (Total)
Chain 4: 
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 153.4 seconds (Warm-up)
Chain 1:                87.917 seconds (Sampling)
Chain 1:                241.317 seconds (Total)
Chain 1: 
Warning: There were 1 divergent transitions after warmup. See
https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
to find out why this is a problem and how to eliminate them.
Warning: Examine the pairs() plot to diagnose sampling problems

Warning: There were 1 divergent transitions after warmup. Increasing adapt_delta above 0.875 may help. See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ -1 + male + x0_group
         y0 ~ (1 || male) + y0_group
   Data: data (Number of observations: 3840) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(y0_Intercept)    18.22      5.03    11.18    31.11 1.01      625     1040

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_male1        30.99      0.78    30.03    32.81 1.00     1771      909
x0_male2        37.81      4.46    30.52    45.06 1.01     2613     1136
x0_male3        37.64      4.57    30.33    45.07 1.00     3448     1175
x0_male4        36.57      0.70    35.13    37.89 1.00     2420     1615
x0_male5        34.29      1.67    31.00    37.54 1.00     1399      967
x0_male6        38.73      0.60    37.51    39.86 1.00     3036     1463
x0_male7        38.00      0.61    36.72    39.18 1.00     2655     1648
x0_male8        36.74      0.76    35.05    38.12 1.00     2196     1466
x0_male9        37.62      0.68    36.28    38.90 1.01     2764     1331
x0_male10       36.83      0.73    35.23    38.12 1.00     1416     1198
x0_male11       37.27      0.61    35.96    38.39 1.00     1951     1387
x0_male12       37.80      4.37    30.41    45.09 1.00     2845     1029
x0_x0_group2    37.68      4.63    30.34    45.12 1.01     3672     1307
y0_Intercept    50.81      6.15    38.92    63.01 1.01      579      886
y0_y0_group2   109.03      5.40    99.02   119.58 1.00     1258     1395

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.42      0.06     2.32     2.54 1.00     4458     1586

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_1, uniform_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b     male1                    y0       (vectorized)
                (flat)     b    male10                    y0       (vectorized)
                (flat)     b    male11                    y0       (vectorized)
                (flat)     b    male12                    y0       (vectorized)
                (flat)     b     male2                    y0       (vectorized)
                (flat)     b     male3                    y0       (vectorized)
                (flat)     b     male4                    y0       (vectorized)
                (flat)     b     male5                    y0       (vectorized)
                (flat)     b     male6                    y0       (vectorized)
                (flat)     b     male7                    y0       (vectorized)
                (flat)     b     male8                    y0       (vectorized)
                (flat)     b     male9                    y0       (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.004544 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 45.44 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.005354 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 53.54 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 3: 
Chain 3: Gradient evaluation took 0.005279 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 52.79 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: 
Chain 4: Gradient evaluation took 0.005117 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 51.17 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 74.851 seconds (Warm-up)
Chain 2:                59.981 seconds (Sampling)
Chain 2:                134.832 seconds (Total)
Chain 2: 
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 73.465 seconds (Warm-up)
Chain 3:                71.659 seconds (Sampling)
Chain 3:                145.124 seconds (Total)
Chain 3: 
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 86.849 seconds (Warm-up)
Chain 1:                65.948 seconds (Sampling)
Chain 1:                152.797 seconds (Total)
Chain 1: 
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 86.578 seconds (Warm-up)
Chain 4:                72.914 seconds (Sampling)
Chain 4:                159.492 seconds (Total)
Chain 4: 
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male)
         y0 ~ -1 + male
   Data: data (Number of observations: 3840) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)     2.09      0.56     1.26     3.44 1.00      807     1069

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    38.87      0.66    37.62    40.17 1.01      690      987
y0_male1        31.31      1.71    28.02    34.95 1.00     2716     1341
y0_male2        57.79      2.82    52.70    63.68 1.00     3029     1512
y0_male3       172.89      9.28   156.68   192.54 1.00     2604     1355
y0_male4       177.58      9.98   159.64   198.69 1.00     2487     1273
y0_male5        99.51      4.95    90.58   109.66 1.01     2899     1344
y0_male6        76.90      5.34    67.14    88.06 1.01     2064     1272
y0_male7       171.97      9.55   154.78   191.85 1.00     2619     1388
y0_male8        62.17      4.57    54.19    72.10 1.00     2252     1370
y0_male9        79.37      6.38    67.87    92.59 1.01     2470     1453
y0_male10      185.13     15.02   159.43   217.67 1.00     2322     1492
y0_male11      184.89     12.95   161.79   211.94 1.00     2507     1351
y0_male12      115.76      5.30   105.94   126.92 1.01     2652     1350

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.33      0.05     2.23     2.43 1.00     3698     1466

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_1, uniform_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b     male1                    y0       (vectorized)
                (flat)     b    male10                    y0       (vectorized)
                (flat)     b    male11                    y0       (vectorized)
                (flat)     b    male12                    y0       (vectorized)
                (flat)     b     male2                    y0       (vectorized)
                (flat)     b     male3                    y0       (vectorized)
                (flat)     b     male4                    y0       (vectorized)
                (flat)     b     male5                    y0       (vectorized)
                (flat)     b     male6                    y0       (vectorized)
                (flat)     b     male7                    y0       (vectorized)
                (flat)     b     male8                    y0       (vectorized)
                (flat)     b     male9                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.003622 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 36.22 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.004525 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 45.25 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.004048 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 40.48 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.004394 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 43.94 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 88.397 seconds (Warm-up)
Chain 1:                59.06 seconds (Sampling)
Chain 1:                147.457 seconds (Total)
Chain 1: 
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 79.658 seconds (Warm-up)
Chain 4:                69.119 seconds (Sampling)
Chain 4:                148.777 seconds (Total)
Chain 4: 
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 84.116 seconds (Warm-up)
Chain 3:                66.473 seconds (Sampling)
Chain 3:                150.589 seconds (Total)
Chain 3: 
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 124.1 seconds (Warm-up)
Chain 2:                72.904 seconds (Sampling)
Chain 2:                197.004 seconds (Total)
Chain 2: 
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male)
         y0 ~ -1 + male + y0_group
   Data: data (Number of observations: 3840) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)     2.01      0.55     1.25     3.29 1.01      651      775

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    38.83      0.62    37.64    40.08 1.00      588      632
y0_male1        31.31      1.55    28.47    34.40 1.00     2342     1285
y0_male2        57.68      2.60    52.76    63.20 1.00     2520     1428
y0_male3        27.07      9.52    11.51    47.92 1.00     1014      675
y0_male4        32.12     10.09    13.77    53.21 1.00     1037      779
y0_male5        18.83      1.05    16.82    21.05 1.00     2689     1399
y0_male6        76.66      4.43    68.51    86.04 1.00     1807     1342
y0_male7        26.81      9.55    10.94    46.91 1.00      855      407
y0_male8        62.02      3.75    54.99    69.54 1.00     2416     1306
y0_male9        79.62      5.35    69.78    90.36 1.00     1932     1571
y0_male10       40.87     14.45    17.43    73.21 1.00     1425      889
y0_male11       40.07     12.25    18.56    65.36 1.00     1216     1098
y0_male12       58.73      3.53    52.39    66.38 1.00     2126     1384
y0_y0_group2   145.82      5.99   134.18   157.47 1.00      893     1194

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     3.12      0.07     2.98     3.26 1.00     2968     1611

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_1, groups_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.004856 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 48.56 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.004633 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 46.33 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 3: 
Chain 3: Gradient evaluation took 0.004655 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 46.55 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: 
Chain 4: Gradient evaluation took 0.004517 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 45.17 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 257.408 seconds (Warm-up)
Chain 4:                227.125 seconds (Sampling)
Chain 4:                484.533 seconds (Total)
Chain 4: 
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 264.806 seconds (Warm-up)
Chain 1:                295.891 seconds (Sampling)
Chain 1:                560.697 seconds (Total)
Chain 1: 
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 286.869 seconds (Warm-up)
Chain 3:                278.724 seconds (Sampling)
Chain 3:                565.593 seconds (Total)
Chain 3: 
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 270.025 seconds (Warm-up)
Chain 2:                316.319 seconds (Sampling)
Chain 2:                586.344 seconds (Total)
Chain 2: 
Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-ess
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male)
         y0 ~ (1 || male)
   Data: data (Number of observations: 3840) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)     2.04      0.60     1.19     3.53 1.01      487      781
sd(y0_Intercept)    60.51     14.02    40.15    94.75 1.00      462      713

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    38.90      0.63    37.59    40.14 1.00      482      411
y0_Intercept   117.58     17.29    82.85   151.61 1.01      429      869

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.33      0.05     2.22     2.44 1.00     1846     1250

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.0052 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 52 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.005426 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 54.26 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.004738 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 47.38 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.005058 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 50.58 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 165.406 seconds (Warm-up)
Chain 2:                130.076 seconds (Sampling)
Chain 2:                295.482 seconds (Total)
Chain 2: 
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 170.192 seconds (Warm-up)
Chain 3:                131.768 seconds (Sampling)
Chain 3:                301.96 seconds (Total)
Chain 3: 
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 189.846 seconds (Warm-up)
Chain 4:                146.571 seconds (Sampling)
Chain 4:                336.417 seconds (Total)
Chain 4: 
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 207.245 seconds (Warm-up)
Chain 1:                143.356 seconds (Sampling)
Chain 1:                350.601 seconds (Total)
Chain 1: 
Warning: There were 1 divergent transitions after warmup. See
https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
to find out why this is a problem and how to eliminate them.
Warning: Examine the pairs() plot to diagnose sampling problems

Warning: There were 1 divergent transitions after warmup. Increasing adapt_delta above 0.875 may help. See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male)
         y0 ~ (1 || male) + y0_group
   Data: data (Number of observations: 3840) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)     1.98      0.56     1.20     3.29 1.00      614      969
sd(y0_Intercept)    22.19      5.87    13.79    36.40 1.01      599      904

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    38.83      0.56    37.61    39.93 1.00      723      995
y0_Intercept    47.50      7.34    32.29    61.42 1.01      589      482
y0_y0_group2   142.52      5.95   131.11   154.62 1.00     1416     1490

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     3.12      0.07     2.97     3.26 1.00     2310     1510

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_2, uniform_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b     male1                    y0       (vectorized)
                (flat)     b    male10                    y0       (vectorized)
                (flat)     b    male11                    y0       (vectorized)
                (flat)     b    male12                    y0       (vectorized)
                (flat)     b     male2                    y0       (vectorized)
                (flat)     b     male3                    y0       (vectorized)
                (flat)     b     male4                    y0       (vectorized)
                (flat)     b     male5                    y0       (vectorized)
                (flat)     b     male6                    y0       (vectorized)
                (flat)     b     male7                    y0       (vectorized)
                (flat)     b     male8                    y0       (vectorized)
                (flat)     b     male9                    y0       (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.004271 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 42.71 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.003624 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 36.24 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.004077 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 40.77 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.004407 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 44.07 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 1229.03 seconds (Warm-up)
Chain 2:                1155.21 seconds (Sampling)
Chain 2:                2384.24 seconds (Total)
Chain 2: 
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 1327.97 seconds (Warm-up)
Chain 1:                1173.35 seconds (Sampling)
Chain 1:                2501.32 seconds (Total)
Chain 1: 
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 1641.26 seconds (Warm-up)
Chain 4:                1178.62 seconds (Sampling)
Chain 4:                2819.88 seconds (Total)
Chain 4: 
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 1160.61 seconds (Warm-up)
Chain 3:                2252.91 seconds (Sampling)
Chain 3:                3413.52 seconds (Total)
Chain 3: 
Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-ess
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male) + x0_group
         y0 ~ -1 + male
   Data: data (Number of observations: 3840) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)    24.21      5.82    15.37    37.36 1.01      333      572

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    33.58      3.21    30.08    41.81 1.01      350      499
x0_x0_group2    44.64      0.82    42.49    45.48 1.00     1954     1226
y0_male1        35.73      2.04    31.67    39.88 1.00     3172     1337
y0_male2        57.44      2.77    52.37    63.40 1.00     3147     1379
y0_male3       171.06      8.56   155.30   188.64 1.00     2570     1375
y0_male4       172.83      7.60   158.31   187.88 1.00     2762     1415
y0_male5       146.59      6.29   135.09   159.67 1.00     2874     1037
y0_male6        62.01      2.56    57.25    67.45 1.00     3349     1301
y0_male7       142.45      6.01   131.14   154.61 1.00     3232     1527
y0_male8        63.57      4.77    55.27    74.24 1.01     2736     1209
y0_male9        59.72      2.65    54.87    65.26 1.00     2883     1298
y0_male10      193.63     15.33   166.45   226.49 1.00     2583     1269
y0_male11      189.03     13.74   165.00   217.44 1.00     2728     1388
y0_male12      115.18      5.06   105.80   125.25 1.00     2331     1319

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.69      0.06     2.56     2.81 1.00     3036     1496

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_2, uniform_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b     male1                    y0       (vectorized)
                (flat)     b    male10                    y0       (vectorized)
                (flat)     b    male11                    y0       (vectorized)
                (flat)     b    male12                    y0       (vectorized)
                (flat)     b     male2                    y0       (vectorized)
                (flat)     b     male3                    y0       (vectorized)
                (flat)     b     male4                    y0       (vectorized)
                (flat)     b     male5                    y0       (vectorized)
                (flat)     b     male6                    y0       (vectorized)
                (flat)     b     male7                    y0       (vectorized)
                (flat)     b     male8                    y0       (vectorized)
                (flat)     b     male9                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.005056 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 50.56 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.005041 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 50.41 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.004982 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 49.82 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.005144 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 51.44 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 82.656 seconds (Warm-up)
Chain 3:                66.541 seconds (Sampling)
Chain 3:                149.197 seconds (Total)
Chain 3: 
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 84.011 seconds (Warm-up)
Chain 4:                72.441 seconds (Sampling)
Chain 4:                156.452 seconds (Total)
Chain 4: 
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 100.948 seconds (Warm-up)
Chain 2:                61.177 seconds (Sampling)
Chain 2:                162.125 seconds (Total)
Chain 2: 
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 1003.97 seconds (Warm-up)
Chain 1:                671.139 seconds (Sampling)
Chain 1:                1675.11 seconds (Total)
Chain 1: 
Warning: There were 2 divergent transitions after warmup. See
https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
to find out why this is a problem and how to eliminate them.
Warning: Examine the pairs() plot to diagnose sampling problems

Warning: The largest R-hat is 1.54, indicating chains have not mixed.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#r-hat
Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-ess
Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#tail-ess
Warning: Parts of the model have not converged (some Rhats are > 1.05). Be careful when analysing the results! We recommend running more iterations and/or setting stronger priors.
Warning: There were 2 divergent transitions after warmup. Increasing adapt_delta above 0.875 may help. See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male) + x0_group
         y0 ~ -1 + male + y0_group
   Data: data (Number of observations: 3840) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)     6.03      5.47     1.51    19.11 1.53        7       35

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    35.42      2.11    30.66    38.65 1.24       17       36
x0_x0_group2    36.54      4.58    30.20    45.04 1.18       15      108
y0_male1        33.86      2.35    29.76    38.52 1.13       21      147
y0_male2        49.30      4.95    43.71    60.51 1.53        7       34
y0_male3        35.02     13.42    15.18    67.53 1.45        8       44
y0_male4        62.27     10.55    42.28    82.54 1.11       26      259
y0_male5        29.01      3.55    22.96    36.24 1.03      141      897
y0_male6        62.21      2.68    57.17    67.67 1.00     2385     1496
y0_male7        32.08      9.51    13.21    50.49 1.15       19       69
y0_male8        63.78      4.75    55.40    73.90 1.00     2356     1239
y0_male9        59.90      2.67    54.99    65.38 1.00     2804     1651
y0_male10       82.71     17.32    51.05   118.59 1.03      132     1109
y0_male11       79.24     15.21    50.33   110.26 1.06       51      191
y0_male12       49.56      5.48    42.60    61.84 1.52        7       29
y0_y0_group2   110.87      7.03    98.06   125.75 1.25       12       38

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.52      0.17     2.32     2.87 1.53        7       29

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_2, groups_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.005101 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 51.01 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.004977 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 49.77 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.004927 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 49.27 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.004943 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 49.43 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 1855.68 seconds (Warm-up)
Chain 1:                1288.65 seconds (Sampling)
Chain 1:                3144.33 seconds (Total)
Chain 1: 
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 1999.19 seconds (Warm-up)
Chain 3:                1255.06 seconds (Sampling)
Chain 3:                3254.24 seconds (Total)
Chain 3: 
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 1806.91 seconds (Warm-up)
Chain 4:                1714.43 seconds (Sampling)
Chain 4:                3521.34 seconds (Total)
Chain 4: 
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 2230.32 seconds (Warm-up)
Chain 2:                1363.52 seconds (Sampling)
Chain 2:                3593.84 seconds (Total)
Chain 2: 
Warning: There were 2 transitions after warmup that exceeded the maximum treedepth. Increase max_treedepth above 12. See
https://mc-stan.org/misc/warnings.html#maximum-treedepth-exceeded
Warning: Examine the pairs() plot to diagnose sampling problems

Warning: The largest R-hat is 1.54, indicating chains have not mixed.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#r-hat
Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-ess
Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#tail-ess
Warning: Parts of the model have not converged (some Rhats are > 1.05). Be careful when analysing the results! We recommend running more iterations and/or setting stronger priors.
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male) + x0_group
         y0 ~ (1 || male)
   Data: data (Number of observations: 3840) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)    25.61      6.27    16.06    39.17 1.02      437      526
sd(y0_Intercept)    58.81     13.40    38.22    90.02 1.03      277      769

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    33.39      3.10    30.09    41.80 1.01      448      537
x0_x0_group2    43.41      1.83    38.81    45.43 1.11       27     1001
y0_Intercept   120.27     17.57    85.01   154.67 1.02      419      621

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.70      0.07     2.57     2.83 1.02     1088      877

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_2, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
 student_t(3, 0, 62.3)    sd                              x0  0         default
 student_t(3, 0, 62.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
 student_t(3, 0, 62.3)    sd                              y0  0         default
 student_t(3, 0, 62.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 62.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.004521 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 45.21 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 2: 
Chain 2: Gradient evaluation took 0.005124 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 51.24 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.004743 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 47.43 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.004413 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 44.13 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 127.923 seconds (Warm-up)
Chain 4:                80.461 seconds (Sampling)
Chain 4:                208.384 seconds (Total)
Chain 4: 
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 119.212 seconds (Warm-up)
Chain 3:                98.357 seconds (Sampling)
Chain 3:                217.569 seconds (Total)
Chain 3: 
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 137.162 seconds (Warm-up)
Chain 2:                84.585 seconds (Sampling)
Chain 2:                221.747 seconds (Total)
Chain 2: 
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 193.896 seconds (Warm-up)
Chain 1:                83.939 seconds (Sampling)
Chain 1:                277.835 seconds (Total)
Chain 1: 
Warning: There were 2 divergent transitions after warmup. See
https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
to find out why this is a problem and how to eliminate them.
Warning: Examine the pairs() plot to diagnose sampling problems

Warning: There were 2 divergent transitions after warmup. Increasing adapt_delta above 0.875 may help. See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male) + x0_group
         y0 ~ (1 || male) + y0_group
   Data: data (Number of observations: 3840) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)     3.19      1.32     1.46     6.57 1.00      814      898
sd(y0_Intercept)    18.64      5.43    10.80    32.12 1.01      756      965

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    36.25      1.29    33.51    38.73 1.01      436      576
x0_x0_group2    37.87      4.52    30.36    45.10 1.01     2371     1086
y0_Intercept    50.57      6.19    38.56    63.70 1.01      468      578
y0_y0_group2   109.61      5.22    99.47   120.00 1.00     1320     1483

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.42      0.06     2.31     2.54 1.00     2793     1445

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
> save(file = file.path(output_dir, paste0("fit_tbl_data_", x_flag_data, "_", y_flag_data, "_n_reps_", n_reps, ".Rda")), fit_tbl)
> 


> warnings()
> fit_tbl_bkup <- fit_tbl
> tmp<- fit_tbl
> names(tmp)
 [1] "model"         "x0"            "y0"            "desc"         
 [5] "y0_group_list" "x0_group_list" "fit"           "llik"         
 [9] "r_eff"         "loo"          
> rownames(tmp)
 [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15"
[16] "16"
> tmp$y0_group_list
[[1]]
[1] NA

[[2]]
[1] NA

[[3]]
[1] NA

[[4]]
[1] NA

[[5]]
[1] NA

[[6]]
[1] NA

[[7]]
[1] NA

[[8]]
[1] NA

[[9]]
[1] NA

[[10]]
[1] NA

[[11]]
[1] NA

[[12]]
[1] NA

[[13]]
[1] NA

[[14]]
[1] NA

[[15]]
[1] NA

[[16]]
[1] NA

> head(tmp)
# A tibble: 6 × 10
  model x0       y0        desc      y0_gr…¹ x0_gr…² fit       llik  r_eff loo  
  <chr> <chr>    <chr>     <chr>     <list>  <list>  <list>    <lis> <lis> <lis>
1 brms  groups_1 groups_1  brms: gr… <lgl>   <lgl>   <brmsfit> <lgl> <lgl> <lgl>
2 brms  groups_1 groups_2  brms: gr… <lgl>   <lgl>   <brmsfit> <lgl> <lgl> <lgl>
3 brms  groups_1 uniform_1 brms: gr… <lgl>   <lgl>   <brmsfit> <lgl> <lgl> <lgl>
4 brms  groups_1 uniform_2 brms: gr… <lgl>   <lgl>   <brmsfit> <lgl> <lgl> <lgl>
5 brms  groups_2 groups_1  brms: gr… <lgl>   <lgl>   <brmsfit> <lgl> <lgl> <lgl>
6 brms  groups_2 groups_2  brms: gr… <lgl>   <lgl>   <brmsfit> <lgl> <lgl> <lgl>
# … with abbreviated variable names ¹​y0_group_list, ²​x0_group_list
> head(tmp$x0_group_list)
[[1]]
[1] NA

[[2]]
[1] NA

[[3]]
[1] NA

[[4]]
[1] NA

[[5]]
[1] NA

[[6]]
[1] NA

> head(data_tmp)
# A tibble: 6 × 17
  sampling…¹ index    x0 x0_gr…² x0_bar x0_sd    y0 y0_gr…³ y0_bar y0_sd temp_…⁴
  <chr>      <fct> <dbl> <fct>    <dbl> <dbl> <dbl> <fct>    <dbl> <dbl>   <dbl>
1 nb         1        39 1           39     1  113. 1         113.  21.5      30
2 nb         1        39 1           39     1  113. 1         113.  21.5      30
3 nb         1        39 1           39     1  113. 1         113.  21.5      30
4 nb         1        39 1           39     1  113. 1         113.  21.5      30
5 nb         1        39 1           39     1  113. 1         113.  21.5      30
6 nb         1        39 1           39     1  113. 1         113.  21.5      30
# … with 6 more variables: n_reps <dbl>, rep <int>, x_flag <chr>, y_flag <chr>,
#   temp_mean <dbl>, motif_count <dbl>, and abbreviated variable names
#   ¹​sampling_dist, ²​x0_group, ³​y0_group, ⁴​temp_target
# ℹ Use `colnames()` to see all variable names
> summary(data_tmp)
 sampling_dist          index            x0       x0_group     x0_bar     
 Length:7680        1      : 640   Min.   :35.8   1:5760   Min.   :35.85  
 Class :character   2      : 640   1st Qu.:37.8   2:1920   1st Qu.:37.82  
 Mode  :character   3      : 640   Median :39.0            Median :39.00  
                    4      : 640   Mean   :39.0            Mean   :39.01  
                    5      : 640   3rd Qu.:40.2            3rd Qu.:40.24  
                    6      : 640   Max.   :43.5            Max.   :43.53  
                    (Other):3840                                          
     x0_sd         y0         y0_group     y0_bar           y0_sd      
 Min.   :1   Min.   : 15.80   1:5760   Min.   : 15.81   Min.   :21.48  
 1st Qu.:1   1st Qu.: 78.17   2:1920   1st Qu.: 78.17   1st Qu.:21.48  
 Median :1   Median :112.90            Median :112.89   Median :21.48  
 Mean   :1   Mean   :110.77            Mean   :110.77   Mean   :21.48  
 3rd Qu.:1   3rd Qu.:140.72            3rd Qu.:140.70   3rd Qu.:21.48  
 Max.   :1   Max.   :215.40            Max.   :215.36   Max.   :21.48  
                                                                       
  temp_target       n_reps       rep          x_flag         
 Min.   :30.0   Min.   :8   Min.   :1.00   Length:7680       
 1st Qu.:38.0   1st Qu.:8   1st Qu.:2.75   Class :character  
 Median :40.0   Median :8   Median :4.50   Mode  :character  
 Mean   :38.8   Mean   :8   Mean   :4.50                     
 3rd Qu.:42.0   3rd Qu.:8   3rd Qu.:6.25                     
 Max.   :44.0   Max.   :8   Max.   :8.00                     
                                                             
    y_flag            temp_mean      motif_count   
 Length:7680        Min.   :27.05   Min.   :  0.0  
 Class :character   1st Qu.:37.20   1st Qu.: 28.0  
 Mode  :character   Median :39.92   Median : 60.0  
                    Mean   :38.80   Mean   : 81.5  
                    3rd Qu.:42.45   3rd Qu.:114.0  
                    Max.   :45.90   Max.   :707.0  
                                                   
> head(tmp)
# A tibble: 6 × 10
  model x0       y0        desc      y0_gr…¹ x0_gr…² fit       llik  r_eff loo  
  <chr> <chr>    <chr>     <chr>     <list>  <list>  <list>    <lis> <lis> <lis>
1 brms  groups_1 groups_1  brms: gr… <lgl>   <lgl>   <brmsfit> <lgl> <lgl> <lgl>
2 brms  groups_1 groups_2  brms: gr… <lgl>   <lgl>   <brmsfit> <lgl> <lgl> <lgl>
3 brms  groups_1 uniform_1 brms: gr… <lgl>   <lgl>   <brmsfit> <lgl> <lgl> <lgl>
4 brms  groups_1 uniform_2 brms: gr… <lgl>   <lgl>   <brmsfit> <lgl> <lgl> <lgl>
5 brms  groups_2 groups_1  brms: gr… <lgl>   <lgl>   <brmsfit> <lgl> <lgl> <lgl>
6 brms  groups_2 groups_2  brms: gr… <lgl>   <lgl>   <brmsfit> <lgl> <lgl> <lgl>
# … with abbreviated variable names ¹​y0_group_list, ²​x0_group_list
> 
> fit_tbl[ curr_row, x0_group_list]
Error in `[.tbl_df`(fit_tbl, curr_row, x0_group_list) : 
  object 'x0_group_list' not found
> fit_tbl[ curr_row, "x0_group_list"]
# A tibble: 1 × 1
  x0_group_list
  <list>       
1 <lgl [1]>    
> data$x0_group
   [1] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
  [38] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
  [75] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [112] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [149] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [186] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [223] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [260] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [297] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [334] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [371] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [408] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [445] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1
 [482] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [519] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [556] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [593] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [630] 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [667] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [704] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [741] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [778] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [815] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [852] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [889] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [926] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [963] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1000] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1037] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1074] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1111] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1148] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1185] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1222] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1259] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[1296] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[1333] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[1370] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[1407] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1
[1444] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1481] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1518] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1555] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1592] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1629] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1666] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1703] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1740] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[1777] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[1814] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[1851] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[1888] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1
[1925] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1962] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1999] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[2036] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[2073] 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[2110] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[2147] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[2184] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[2221] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[2258] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[2295] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[2332] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[2369] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[2406] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[2443] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[2480] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[2517] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[2554] 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[2591] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[2628] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[2665] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[2702] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[2739] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[2776] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[2813] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[2850] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[2887] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[2924] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[2961] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[2998] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[3035] 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[3072] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[3109] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[3146] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[3183] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[3220] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[3257] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[3294] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[3331] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[3368] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[3405] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[3442] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[3479] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[3516] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[3553] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[3590] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[3627] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[3664] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[3701] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[3738] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[3775] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[3812] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
Levels: 1 2
> dim(data$x0_group)
NULL
> str(data$x0_group)
 Factor w/ 2 levels "1","2": 2 2 2 2 2 2 2 2 2 2 ...
> str(fit_tbl[ curr_row, "x0_group_list"])
tibble [1 × 1] (S3: tbl_df/tbl/data.frame)
 $ x0_group_list:List of 1
  ..$ : logi NA
>       fit_tbl[[ curr_row, x0_group_list]] <- data$x0_group
Error in `[[<-.tbl_df`(`*tmp*`, curr_row, x0_group_list, value = c(2L,  : 
  object 'x0_group_list' not found
> x0_group_list
Error: object 'x0_group_list' not found
> x_flag
[1] "groups_2"
> x_flag
[1] "groups_2"
> str(fit_tbl[ curr_row, x_flag])
Error in `fit_tbl[curr_row, x_flag]`:
! Can't subset columns that don't exist.
✖ Column `groups_2` doesn't exist.
Run `rlang::last_error()` to see where the error occurred.
> x_flag
[1] "groups_2"
> names(fit_tbl)
 [1] "model"         "x0"            "y0"            "desc"         
 [5] "y0_group_list" "x0_group_list" "fit"           "llik"         
 [9] "r_eff"         "loo"          
> fit_tbl[ curr_row, "x0_group_list"]
# A tibble: 1 × 1
  x0_group_list
  <list>       
1 <lgl [1]>    
> fit_tbl[[ curr_row, "x0_group_list"]]
[[1]]
[1] NA

> parms_sim
# A tibble: 82,560 × 16
# Rowwise: 
   samplin…¹ index    x0 x0_gr…² x0_bar x0_sd    y0 y0_gr…³ y0_bar y0_sd temp_…⁴
   <chr>     <fct> <dbl> <fct>    <dbl> <dbl> <dbl> <fct>    <dbl> <dbl>   <dbl>
 1 qpoisson  1        39 1           39     1  113. 1         113.  21.5      30
 2 qpoisson  1        39 1           39     1  113. 1         113.  21.5      30
 3 qpoisson  1        39 1           39     1  113. 1         113.  21.5      30
 4 qpoisson  1        39 1           39     1  113. 1         113.  21.5      38
 5 qpoisson  1        39 1           39     1  113. 1         113.  21.5      38
 6 qpoisson  1        39 1           39     1  113. 1         113.  21.5      38
 7 qpoisson  1        39 1           39     1  113. 1         113.  21.5      40
 8 qpoisson  1        39 1           39     1  113. 1         113.  21.5      40
 9 qpoisson  1        39 1           39     1  113. 1         113.  21.5      40
10 qpoisson  1        39 1           39     1  113. 1         113.  21.5      42
# … with 82,550 more rows, 5 more variables: n_reps <dbl>, rep <int>,
#   x_flag <chr>, y_flag <chr>, temp_mean <dbl>, and abbreviated variable names
#   ¹​sampling_dist, ²​x0_group, ³​y0_group, ⁴​temp_target
# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names
> fit_tbl[ curr_row, "x0_group_list"]
# A tibble: 1 × 1
  x0_group_list
  <list>       
1 <lgl [1]>    
> fit_tbl[[ curr_row, "x0_group_list"]]
[[1]]
[1] NA

> head(data)
# A tibble: 6 × 17
  sampling…¹ male     x0 x0_gr…² x0_bar x0_sd    y0 y0_gr…³ y0_bar y0_sd temp_…⁴
  <chr>      <fct> <dbl> <fct>    <dbl> <dbl> <dbl> <fct>    <dbl> <dbl>   <dbl>
1 qpoisson   1      41.1 2         41.1     1  43.6 1         43.6  21.5      30
2 qpoisson   1      41.1 2         41.1     1  43.6 1         43.6  21.5      30
3 qpoisson   1      41.1 2         41.1     1  43.6 1         43.6  21.5      30
4 qpoisson   1      41.1 2         41.1     1  43.6 1         43.6  21.5      30
5 qpoisson   1      41.1 2         41.1     1  43.6 1         43.6  21.5      30
6 qpoisson   1      41.1 2         41.1     1  43.6 1         43.6  21.5      30
# … with 6 more variables: n_reps <dbl>, rep <int>, x_flag <chr>, y_flag <chr>,
#   x <dbl>, y <dbl>, and abbreviated variable names ¹​sampling_dist, ²​x0_group,
#   ³​y0_group, ⁴​temp_target
# ℹ Use `colnames()` to see all variable names
> dim(data)
[1] 3840   17
> summary(data$sampling)
Warning: Unknown or uninitialised column: `sampling`.
Length  Class   Mode 
     0   NULL   NULL 
> summary(data$sampling_dist)
   Length     Class      Mode 
     3840 character character 
> unique(data$sampling_dist)
[1] "qpoisson" "nb"      
> + + + + + + + + + + > x_flag_data <- "groups_2"
> y_flag_data <- "groups_2"
> sampling_dist <- "nb"
> n_r <- 32
> data_base <- data_sim %>% filter(x_flag == x_flag_data,
+                             y_flag == y_flag_data,
+                             sampling_dist == sampling_dist,
+                             n_reps == n_r) %>%
+     rename(temp = temp_mean, male = index) %>%
+     rename(y = motif_count, .... [TRUNCATED] 
> unique(data_base$sampling_dist)
[1] "qpoisson" "nb"      
> dim(data_base$sampling_dist)
NULL
> dim(data_base)
[1] 3840   17
> dim(data_base %>% filter(sampling_dist == "nb"))
[1] 1920   17
> 
> data_base <- data_sim %>% filter(x_flag == x_flag_data,
+                             y_flag == y_flag_data,
+                             sampling_dist == !!sampling_dist,
+                             n_reps == n_r) %>%
+     rename(temp = temp_mean, male = index) %>%
+     rename(y = motif_count, x = temp) 
> dim(data_base)
[1] 1920   17
> 
> data_base <- data_sim %>% filter(x_flag == x_flag_data,
+                             y_flag == y_flag_data,
+                             sampling_dist == sampling_dist_data,
+                             n_reps == !!n_reps) %>%
+     rename(temp = temp_mean, male = index) %>%
+     rename(y = motif_count, x = temp) 
Error in `filter()`:
ℹ In argument: `sampling_dist == sampling_dist_data`.
Caused by error:
! object 'sampling_dist_data' not found
Run `rlang::last_error()` to see where the error occurred.
> 
> x_flag_data <- "groups_2"
> y_flag_data <- "groups_2"
> sampling_dist_data <- "nb"
> n_reps <- 32
> 
> data_base <- data_sim %>% filter(x_flag == x_flag_data,
+                             y_flag == y_flag_data,
+                             sampling_dist == sampling_dist_data,
+                             n_reps == !!n_reps) %>%
+     rename(temp = temp_mean, male = index) %>%
+     rename(y = motif_count, x = temp) 
> dim(data_base)
[1] 1920   17
> unique(data_base[index, x_flag])
Error in `[.tbl_df`(data_base, index, x_flag) : object 'index' not found
> unique(data_base[male, x_flag])
Error in `[.tbl_df`(data_base, male, x_flag) : object 'male' not found
> names(data_base)
 [1] "sampling_dist" "male"          "x0"            "x0_group"     
 [5] "x0_bar"        "x0_sd"         "y0"            "y0_group"     
 [9] "y0_bar"        "y0_sd"         "temp_target"   "n_reps"       
[13] "rep"           "x_flag"        "y_flag"        "x"            
[17] "y"            
> unique(data_base["male", "x_flag"])
# A tibble: 1 × 1
  x_flag
  <chr> 
1 NA    
> unique(data_base[, c("male", "x_flag")])
# A tibble: 12 × 2
   male  x_flag  
   <fct> <chr>   
 1 1     groups_2
 2 2     groups_2
 3 3     groups_2
 4 4     groups_2
 5 5     groups_2
 6 6     groups_2
 7 7     groups_2
 8 8     groups_2
 9 9     groups_2
10 10    groups_2
11 11    groups_2
12 12    groups_2
> unique(data_base[, c("male", "x")])
# A tibble: 1,899 × 2
   male      x
   <fct> <dbl>
 1 1      28.8
 2 1      29.3
 3 1      29.1
 4 1      30.4
 5 1      29.7
 6 1      29.9
 7 1      27.8
 8 1      28.9
 9 1      30.0
10 1      31.6
# … with 1,889 more rows
# ℹ Use `print(n = ...)` to see more rows
> names(data_base)
 [1] "sampling_dist" "male"          "x0"            "x0_group"     
 [5] "x0_bar"        "x0_sd"         "y0"            "y0_group"     
 [9] "y0_bar"        "y0_sd"         "temp_target"   "n_reps"       
[13] "rep"           "x_flag"        "y_flag"        "x"            
[17] "y"            
> unique(data_base[, c("male", "x0_group")])
# A tibble: 12 × 2
   male  x0_group
   <fct> <fct>   
 1 1     1       
 2 2     2       
 3 3     2       
 4 4     2       
 5 5     1       
 6 6     2       
 7 7     2       
 8 8     1       
 9 9     1       
10 10    1       
11 11    1       
12 12    2       
> unique(data_base[, c("male", "y0_group")])
# A tibble: 12 × 2
   male  y0_group
   <fct> <fct>   
 1 1     1       
 2 2     1       
 3 3     2       
 4 4     2       
 5 5     1       
 6 6     1       
 7 7     2       
 8 8     1       
 9 9     1       
10 10    2       
11 11    2       
12 12    2       
> unique(data[, c("male", "y0_group")])
# A tibble: 14 × 2
   male  y0_group
   <fct> <fct>   
 1 1     1       
 2 2     1       
 3 3     2       
 4 4     2       
 5 5     2       
 6 6     1       
 7 7     2       
 8 8     1       
 9 9     1       
10 10    2       
11 11    2       
12 12    1       
13 5     1       
14 12    2       
> 
> x_flag_data <- "groups_2"
> y_flag_data <- "groups_2"
> sampling_dist_data <- "nb"
> n_reps <- 32
> 
> data_base <- data_sim %>% filter(x_flag == x_flag_data,
+                             y_flag == y_flag_data,
+                             sampling_dist == sampling_dist_data,
+                             n_reps == !!n_reps) %>%
+     rename(temp = temp_mean, male = index) %>%
+     rename(y = motif_count, x = temp) 
> unique(data_base[, c("male", "y0_group")])
# A tibble: 12 × 2
   male  y0_group
   <fct> <fct>   
 1 1     1       
 2 2     1       
 3 3     2       
 4 4     2       
 5 5     1       
 6 6     1       
 7 7     2       
 8 8     1       
 9 9     1       
10 10    2       
11 11    2       
12 12    2       
> unique(data_base[, c("male", "x_group")])
Error in `data_base[, c("male", "yx_group")]`:
! Can't subset columns that don't exist.
✖ Column `yx_group` doesn't exist.
Run `rlang::last_error()` to see where the error occurred.
> unique(data_base[, c("male", "x0_group")])
# A tibble: 12 × 2
   male  x0_group
   <fct> <fct>   
 1 1     1       
 2 2     2       
 3 3     2       
 4 4     2       
 5 5     1       
 6 6     2       
 7 7     2       
 8 8     1       
 9 9     1       
10 10    1       
11 11    1       
12 12    2       
> unique(data_base[, c("male", "x_group")])
Error in `data_base[, c("male", "x_group")]`:
! Can't subset columns that don't exist.
✖ Column `x_group` doesn't exist.
Run `rlang::last_error()` to see where the error occurred.
> + + + + + + + + + + > x_flag_data <- "groups_2"
> y_flag_data <- "groups_2"
> sampling_dist_data <- "nb"
> n_reps <- 32
> data_base <- data_sim %>% filter(x_flag == x_flag_data,
+                             y_flag == y_flag_data,
+                             sampling_dist == sampling_dist_data,
+                             n_reps == !!n_reps) %>%
+     rename(temp = temp_mean, male = index) %>%
+     rename(y = mo .... [TRUNCATED] 
> + + + + + + + + + + > x_flag_data <- "groups_2"
> y_flag_data <- "groups_2"
> sampling_dist_data <- "nb"
> n_reps <- 32
> data_base <- data_sim %>% filter(x_flag == x_flag_data,
+                             y_flag == y_flag_data,
+                             sampling_dist == sampling_dist_data,
+                             n_reps == !!n_reps) %>%
+     rename(temp = temp_mean, male = index) %>%
+     rename(y = mo .... [TRUNCATED] 
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 1000
> ## could include "individual"
> flags <- c("uniform_1", "uniform_2", "groups_1", "groups_2")
> models <- c("brms")
> sampling_dist_fit <= "nb"  #not used... yet.
Error in eval(ei, envir) (from brms_two.piece_create.and.fit.simulated.data.Rmd!h1FIx7#6) : object 'sampling_dist_fit' not found
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 1000
> ## could include "individual"
> flags <- c("uniform_1", "uniform_2", "groups_1", "groups_2")
> models <- c("brms")
> sampling_dist_fit <- "nb"
> flags_x <- flags
> flags_y <- flags
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     sampling_dist = sampling_dist_fit,
+                     x0_flag = flags_x, y0_flag = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+    .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0_flag == x_flag &
+               .... [TRUNCATED] 
[1] "brms: uniform_1, uniform_1"
Error in `[[<-.tbl_df`(`*tmp*`, curr_row, x0_group_list, value = list( : 
  object 'x0_group_list' not found
> 
>       fit_tbl[[curr_row, "x0_group_list"]] <- unique(data[, c("male", "x0_group")])
Error:
! Assigned data `unique(data[, c("male", "x0_group")])` must be compatible with row subscript `curr_row`.
✖ 1 row must be assigned.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
>       fit_tbl[[curr_row, "y0_group_list"]] <- unique(data[, c("male", "y0_group")])
Error:
! Assigned data `unique(data[, c("male", "y0_group")])` must be compatible with row subscript `curr_row`.
✖ 1 row must be assigned.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> 
>       fit_tbl[curr_row, "x0_group_list"] <- unique(data[, c("male", "x0_group")])
Error in `vectbl_recycle_rhs_cols()`:
! Can't recycle input of size 2 to size 1.
Run `rlang::last_error()` to see where the error occurred.
>       fit_tbl[curr_row, "y0_group_list"] <- unique(data[, c("male", "y0_group")])
Error in `vectbl_recycle_rhs_cols()`:
! Can't recycle input of size 2 to size 1.
Run `rlang::last_error()` to see where the error occurred.
> 
> fit_tbl <- crossing(model = models,
+                     sampling_dist = sampling_dist_fit,
+                     x0_flag = flags_x, y0_flag = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = array(NA),
+                     llik = list(NA),
+                     r_eff = list(NA),
+                     loo = list(NA)
+                     )
> str(fit_tbl)
tibble [16 × 11] (S3: tbl_df/tbl/data.frame)
 $ model        : chr [1:16] "brms" "brms" "brms" "brms" ...
 $ sampling_dist: chr [1:16] "nb" "nb" "nb" "nb" ...
 $ x0_flag      : chr [1:16] "groups_1" "groups_1" "groups_1" "groups_1" ...
 $ y0_flag      : chr [1:16] "groups_1" "groups_2" "uniform_1" "uniform_2" ...
 $ desc         : chr [1:16] "NA_character" "NA_character" "NA_character" "NA_character" ...
 $ y0_group_list:List of 16
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
 $ x0_group_list:List of 16
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
 $ fit          : logi [1:16(1d)] NA NA NA NA NA NA ...
 $ llik         :List of 16
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
 $ r_eff        :List of 16
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
 $ loo          :List of 16
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
> 
> fit_tbl <- crossing(model = models,
+                     sampling_dist = sampling_dist_fit,
+                     x0_flag = flags_x, y0_flag = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = tibble(NA),
+                     x0_group_list = tibble(NA),
+                     fit = list(NA),
+                     llik = list(NA),
+                     r_eff = list(NA),
+                     loo = list(NA)
+                     )
> str(fit_tbl)
tibble [16 × 11] (S3: tbl_df/tbl/data.frame)
 $ model        : chr [1:16] "brms" "brms" "brms" "brms" ...
 $ sampling_dist: chr [1:16] "nb" "nb" "nb" "nb" ...
 $ x0_flag      : chr [1:16] "groups_1" "groups_1" "groups_1" "groups_1" ...
 $ y0_flag      : chr [1:16] "groups_1" "groups_2" "uniform_1" "uniform_2" ...
 $ desc         : chr [1:16] "NA_character" "NA_character" "NA_character" "NA_character" ...
 $ y0_group_list: tibble [16 × 1] (S3: tbl_df/tbl/data.frame)
  ..$ NA: logi [1:16] NA NA NA NA NA NA ...
 $ x0_group_list: tibble [16 × 1] (S3: tbl_df/tbl/data.frame)
  ..$ NA: logi [1:16] NA NA NA NA NA NA ...
 $ fit          :List of 16
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
 $ llik         :List of 16
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
 $ r_eff        :List of 16
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
 $ loo          :List of 16
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
  ..$ : logi NA
> str(fit_tbl$x0_group_list)
tibble [16 × 1] (S3: tbl_df/tbl/data.frame)
 $ NA: logi [1:16] NA NA NA NA NA NA ...
> class(fit_tbl)
[1] "tbl_df"     "tbl"        "data.frame"
> 
> fit_tbl <- crossing(model = models,
+                     sampling_dist = sampling_dist_fit,
+                     x0_flag = flags_x, y0_flag = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list(NA),
+                     r_eff = list(NA),
+                     loo = list(NA)
+                     )
> unique(data_base[, c("male", "y0_group")])
# A tibble: 12 × 2
   male  y0_group
   <fct> <fct>   
 1 1     1       
 2 2     1       
 3 3     2       
 4 4     2       
 5 5     1       
 6 6     1       
 7 7     2       
 8 8     1       
 9 9     1       
10 10    2       
11 11    2       
12 12    2       
> tbl_tmp <- unique(data_base[, c("male", "y0_group")])
> str(fit_tbl$x0_group_list)
List of 16
 $ : logi NA
 $ : logi NA
 $ : logi NA
 $ : logi NA
 $ : logi NA
 $ : logi NA
 $ : logi NA
 $ : logi NA
 $ : logi NA
 $ : logi NA
 $ : logi NA
 $ : logi NA
 $ : logi NA
 $ : logi NA
 $ : logi NA
 $ : logi NA
> fit_tbl$x0_group_list
[[1]]
[1] NA

[[2]]
[1] NA

[[3]]
[1] NA

[[4]]
[1] NA

[[5]]
[1] NA

[[6]]
[1] NA

[[7]]
[1] NA

[[8]]
[1] NA

[[9]]
[1] NA

[[10]]
[1] NA

[[11]]
[1] NA

[[12]]
[1] NA

[[13]]
[1] NA

[[14]]
[1] NA

[[15]]
[1] NA

[[16]]
[1] NA

> fit_tbl$x0_group_list[[1]]
[1] NA
> fit_tbl$x0_group_list[[1]] <- tbl_tmp
> fit_tbl$x0_group_list
[[1]]
# A tibble: 12 × 2
   male  y0_group
   <fct> <fct>   
 1 1     1       
 2 2     1       
 3 3     2       
 4 4     2       
 5 5     1       
 6 6     1       
 7 7     2       
 8 8     1       
 9 9     1       
10 10    2       
11 11    2       
12 12    2       

[[2]]
[1] NA

[[3]]
[1] NA

[[4]]
[1] NA

[[5]]
[1] NA

[[6]]
[1] NA

[[7]]
[1] NA

[[8]]
[1] NA

[[9]]
[1] NA

[[10]]
[1] NA

[[11]]
[1] NA

[[12]]
[1] NA

[[13]]
[1] NA

[[14]]
[1] NA

[[15]]
[1] NA

[[16]]
[1] NA

> fit_tbl$x0_group_list[[1]]
# A tibble: 12 × 2
   male  y0_group
   <fct> <fct>   
 1 1     1       
 2 2     1       
 3 3     2       
 4 4     2       
 5 5     1       
 6 6     1       
 7 7     2       
 8 8     1       
 9 9     1       
10 10    2       
11 11    2       
12 12    2       
> 
>       fit_tbl[[curr_row, "x0_group_list"]] <- unique(data[, c("male", "x0_group")])
Error:
! Assigned data `unique(data[, c("male", "x0_group")])` must be compatible with row subscript `curr_row`.
✖ 1 row must be assigned.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
>       fit_tbl[[curr_row, "y0_group_list"]] <- unique(data[, c("male", "y0_group")])
Error:
! Assigned data `unique(data[, c("male", "y0_group")])` must be compatible with row subscript `curr_row`.
✖ 1 row must be assigned.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> curr_row
[1] 11
> fit_tbl[[curr_row, "x0_group_list"]]
[[1]]
[1] NA

> unique(data[, c("male", "x0_group")]
+ )
# A tibble: 12 × 2
   male  x0_group
   <fct>    <dbl>
 1 1            1
 2 2            1
 3 3            1
 4 4            1
 5 5            1
 6 6            1
 7 7            1
 8 8            1
 9 9            1
10 10           1
11 11           1
12 12           1
> fit_tbl[[1, "x0_group_list"]] <- tbl_tmp
Error:
! Assigned data `tbl_tmp` must be compatible with row subscript `1`.
✖ 1 row must be assigned.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[1][["x0_group_list"]] <- tbl_tmp
Error:
! Assigned data `tbl_tmp` must be compatible with existing data.
✖ Existing data has 16 rows.
✖ Assigned data has 12 rows.
ℹ Only vectors of size 1 are recycled.
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[1][["x0_group_list"]]
NULL
> fit_tbl[1]["x0_group_list"]
Error in `fit_tbl[1]["x0_group_list"]`:
! Can't subset columns that don't exist.
✖ Column `x0_group_list` doesn't exist.
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[1, ]["x0_group_list"]
# A tibble: 1 × 1
  x0_group_list    
  <list>           
1 <tibble [12 × 2]>
> fit_tbl[1, "x0_group_list"]] <- tbl_tmp
Error: unexpected ']' in "fit_tbl[1, "x0_group_list"]]"
> fit_tbl[[1, "x0_group_list"]] <- tbl_tmp
Error:
! Assigned data `tbl_tmp` must be compatible with row subscript `1`.
✖ 1 row must be assigned.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[1, "x0_group_list"] <- tbl_tmp
Error in `vectbl_recycle_rhs_cols()`:
! Can't recycle input of size 2 to size 1.
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[[1, "x0_group_list"]] <- tibble(tbl_tmp)
Error:
! Assigned data `tibble(tbl_tmp)` must be compatible with row subscript `1`.
✖ 1 row must be assigned.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[[1, "x0_group_list"]] <- tbl_tmp
Error:
! Assigned data `tbl_tmp` must be compatible with row subscript `1`.
✖ 1 row must be assigned.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl$x0_group_list[[1]]
# A tibble: 12 × 2
   male  y0_group
   <fct> <fct>   
 1 1     1       
 2 2     1       
 3 3     2       
 4 4     2       
 5 5     1       
 6 6     1       
 7 7     2       
 8 8     1       
 9 9     1       
10 10    2       
11 11    2       
12 12    2       
> fit_tbl[[1, "x0_group_list"]]
[[1]]
# A tibble: 12 × 2
   male  y0_group
   <fct> <fct>   
 1 1     1       
 2 2     1       
 3 3     2       
 4 4     2       
 5 5     1       
 6 6     1       
 7 7     2       
 8 8     1       
 9 9     1       
10 10    2       
11 11    2       
12 12    2       

> fit_tbl[[1, "x0_group_list"]][[1]]
# A tibble: 12 × 2
   male  y0_group
   <fct> <fct>   
 1 1     1       
 2 2     1       
 3 3     2       
 4 4     2       
 5 5     1       
 6 6     1       
 7 7     2       
 8 8     1       
 9 9     1       
10 10    2       
11 11    2       
12 12    2       
> fit_tbl[[1, "x0_group_list"]][[1]] <- tbl_tmp
> fit_tbl[1, "x0_group_list"][[1]] <- tbl_tmp
Error:
! Assigned data `tbl_tmp` must be compatible with existing data.
✖ Existing data has 1 row.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> 
> fit_tbl <- crossing(model = models,
+                     sampling_dist = sampling_dist_fit,
+                     x0_flag = flags_x, y0_flag = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = tibble(),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list(NA),
+                     r_eff = list(NA),
+                     loo = list(NA)
+                     )
> fit_tbl[1, "x0_group_list"][[1]]
[[1]]
NULL

> fit_tbl[1, "x0_group_list"]
# A tibble: 1 × 1
  x0_group_list
  <list>       
1 <NULL>       
> fit_tbl[[1, "x0_group_list"]]
Error in `vectbl_as_row_location2()`:
! Can't extract rows past the end.
ℹ Location 1 doesn't exist.
ℹ There are only 0 rows.
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[[2, "x0_group_list"]]
Error in `vectbl_as_row_location2()`:
! Can't extract rows past the end.
ℹ Location 2 doesn't exist.
ℹ There are only 0 rows.
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[2, "x0_group_list"]
# A tibble: 1 × 1
  x0_group_list
  <list>       
1 <NULL>       
> fit_tbl[2, "x0_group_list"] <- tbl_tmp
Error in `numtbl_as_row_location_assign()`:
! Can't assign to rows beyond the end with non-consecutive locations.
ℹ Input has size 0.
✖ Subscript `2` contains non-consecutive location 2.
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[2, "x0_group_list"]
# A tibble: 1 × 1
  x0_group_list
  <list>       
1 <NULL>       
> fit_tbl[1, "x0_group_list"]
# A tibble: 1 × 1
  x0_group_list
  <list>       
1 <NULL>       
> fit_tbl[[1, "x0_group_list"]]
Error in `vectbl_as_row_location2()`:
! Can't extract rows past the end.
ℹ Location 1 doesn't exist.
ℹ There are only 0 rows.
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[1, "x0_group_list"]
# A tibble: 1 × 1
  x0_group_list
  <list>       
1 <NULL>       
> fit_tbl[1, "x0_group_list"][[1]]
[[1]]
NULL

> fit_tbl[1, "x0_group_list"][1]
# A tibble: 1 × 1
  x0_group_list
  <list>       
1 <NULL>       
> fit_tbl[1, "y0_group_list"][1]
# A tibble: 1 × 1
  y0_group_list
  <tibble[,0]> 
1              
> fit_tbl[1, "y0_group_list"][[1]]
# A tibble: 1 × 0
> 
> fit_tbl <- crossing(model = models,
+                     sampling_dist = sampling_dist_fit,
+                     x0_flag = flags_x, y0_flag = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list(NA),
+                     r_eff = list(NA),
+                     loo = list(NA)
+                     )
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 1000
> ## could include "individual"
> flags <- c("uniform_1", "uniform_2", "groups_1", "groups_2")
> models <- c("brms")
> sampling_dist_fit <- "nb"
> flags_x <- flags
> flags_y <- flags
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     sampling_dist = sampling_dist_fit,
+                     x0_flag = flags_x, y0_flag = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+    .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0_flag == x_flag &
+               .... [TRUNCATED] 
[1] "brms: uniform_1, uniform_1"
Error:
! Assigned data `unique(data[, c("male", "x0_group")])` must be compatible with existing data.
✖ Existing data has 1 row.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[1, "y0_group_list"][[1]]
[[1]]
[1] NA

> fit_tbl[2, "x0_group_list"]
# A tibble: 1 × 1
  x0_group_list
  <list>       
1 <lgl [1]>    
> fit_tbl[2, "x0_group_list"][[1]]
[[1]]
[1] NA

> unique(data[, c("male", "x0_group")])
# A tibble: 12 × 2
   male  x0_group
   <fct>    <dbl>
 1 1            1
 2 2            1
 3 3            1
 4 4            1
 5 5            1
 6 6            1
 7 7            1
 8 8            1
 9 9            1
10 10           1
11 11           1
12 12           1
> 
>       fit_tbl[curr_row, "x0_group_list"][[1]] <- unique(data[, c("male", "x0_group")])
Error:
! Assigned data `unique(data[, c("male", "x0_group")])` must be compatible with existing data.
✖ Existing data has 1 row.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
>       fit_tbl[curr_row, "y0_group_list"][[1]] <- unique(data[, c("male", "y0_group")])
Error:
! Assigned data `unique(data[, c("male", "y0_group")])` must be compatible with existing data.
✖ Existing data has 1 row.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> unique(data[, c("male", "x0_group")])
# A tibble: 12 × 2
   male  x0_group
   <fct>    <dbl>
 1 1            1
 2 2            1
 3 3            1
 4 4            1
 5 5            1
 6 6            1
 7 7            1
 8 8            1
 9 9            1
10 10           1
11 11           1
12 12           1
>  fit_tbl[curr_row, "x0_group_list"][[1]]
[[1]]
[1] NA

> 
> fit_tbl <- crossing(model = models,
+                     sampling_dist = sampling_dist_fit,
+                     x0_flag = flags_x, y0_flag = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = tibble(NA),
+                     x0_group_list = tibble(NA),
+                     fit = list(NA),
+                     llik = list(NA),
+                     r_eff = list(NA),
+                     loo = list(NA)
+                     )
> curr_row
[1] 11
> 
>       fit_tbl[curr_row, ]$x0_group_list[[1]] <- unique(data[, c("male", "x0_group")])
Error:
! Assigned data `unique(data[, c("male", "x0_group")])` must be compatible with existing data.
✖ Existing data has 1 row.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> 
>       fit_tbl[curr_row, ]$x0_group_list[[1]] <- unique(data[, c("male", "x0_group")]) %>%tibble()
Error:
! Assigned data `unique(data[, c("male", "x0_group")]) %>% tibble()` must be compatible with existing data.
✖ Existing data has 1 row.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[curr_row, "x0_group_list"]
# A tibble: 1 × 1
  x0_group_list$`NA`
  <lgl>             
1 NA                
> fit_tbl[[curr_row, "x0_group_list"]]
# A tibble: 1 × 1
  `NA` 
  <lgl>
1 NA   
> 
> fit_tbl <- crossing(model = models,
+                     sampling_dist = sampling_dist_fit,
+                     x0_flag = flags_x, y0_flag = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = tibble(),
+                     x0_group_list = tibble(),
+                     fit = list(NA),
+                     llik = list(NA),
+                     r_eff = list(NA),
+                     loo = list(NA)
+                     )
> fit_tbl[[curr_row, "x0_group_list"]]
Error in `vectbl_as_row_location2()`:
! Can't extract rows past the end.
ℹ Location 11 doesn't exist.
ℹ There are only 0 rows.
Run `rlang::last_error()` to see where the error occurred.
> 
> dim[[curr_row, "x0_group_list"]]
Error in dim[[curr_row, "x0_group_list"]] : 
  incorrect number of subscripts
> dim(fit_table)
Error: object 'fit_table' not found
> dim(fit_tble)
Error: object 'fit_tble' not found
> dim(fit_tbl)
[1]  0 11
> 
> fit_tbl <- crossing(model = models,
+                     sampling_dist = sampling_dist_fit,
+                     x0_flag = flags_x, y0_flag = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = tibble(),
+                     x0_group_list = tibble(),
+                     fit = list(NA),
+                     llik = list(NA),
+                     r_eff = list(NA),
+                     loo = list(NA)
+                     )
> dim(fit_tbl)
[1]  0 11
> 
> fit_tbl <- crossing(model = models,
+                     sampling_dist = sampling_dist_fit,
+                     x0_flag = flags_x, y0_flag = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = tibble(NA),
+                     x0_group_list = tibble(NA),
+                     fit = list(NA),
+                     llik = list(NA),
+                     r_eff = list(NA),
+                     loo = list(NA)
+                     )
> dim(fit_tbl)
[1] 16 11
> dim[[curr_row, "x0_group_list"]]
Error in dim[[curr_row, "x0_group_list"]] : 
  incorrect number of subscripts
> dim(fit_tbl)
[1] 16 11
> fit_tbl[[curr_row, "x0_group_list"]]
# A tibble: 1 × 1
  `NA` 
  <lgl>
1 NA   
> fit_tbl[[curr_row, "x0_group_list"]] <- tbl_tmp
Error:
! Assigned data `tbl_tmp` must be compatible with row subscript `curr_row`.
✖ 1 row must be assigned.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[[curr_row, "x0_group_list"]] <- list(tbl_tmp)
Error:
! Assigned data `list(tbl_tmp)` must be compatible with existing data.
ℹ Error occurred for column `x0_group_list`.
✖ Can't convert <list> to <tbl_df>.
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[curr_row, "x0_group_list"] <- list(tbl_tmp)
Error:
! Assigned data `list(tbl_tmp)` must be compatible with row subscript `curr_row`.
✖ 1 row must be assigned.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[curr_row, "x0_group_list"][[1]] <- tbl_tmp
Error:
! Assigned data `tbl_tmp` must be compatible with existing data.
✖ Existing data has 1 row.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[curr_row, "x0_group_list"]
# A tibble: 1 × 1
  x0_group_list$`NA`
  <lgl>             
1 NA                
> fit_tbl[ , "x0_group_list"]
# A tibble: 16 × 1
   x0_group_list$`NA`
   <lgl>             
 1 NA                
 2 NA                
 3 NA                
 4 NA                
 5 NA                
 6 NA                
 7 NA                
 8 NA                
 9 NA                
10 NA                
11 NA                
12 NA                
13 NA                
14 NA                
15 NA                
16 NA                
> fit_tbl[ , c("x0_group_list", male)]
Error in `[.tbl_df`(fit_tbl, , c("x0_group_list", male)) : 
  object 'male' not found
> fit_tbl[ , c("x0_group_list", "male")]
Error in `fit_tbl[, c("x0_group_list", "male")]`:
! Can't subset columns that don't exist.
✖ Column `male` doesn't exist.
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[ , c("x0_group_list", "fit")]
# A tibble: 16 × 2
   x0_group_list$`NA` fit      
   <lgl>              <list>   
 1 NA                 <lgl [1]>
 2 NA                 <lgl [1]>
 3 NA                 <lgl [1]>
 4 NA                 <lgl [1]>
 5 NA                 <lgl [1]>
 6 NA                 <lgl [1]>
 7 NA                 <lgl [1]>
 8 NA                 <lgl [1]>
 9 NA                 <lgl [1]>
10 NA                 <lgl [1]>
11 NA                 <lgl [1]>
12 NA                 <lgl [1]>
13 NA                 <lgl [1]>
14 NA                 <lgl [1]>
15 NA                 <lgl [1]>
16 NA                 <lgl [1]>
> 
> fit_tbl <- crossing(model = models,
+                     sampling_dist = sampling_dist_fit,
+                     x0_flag = flags_x, y0_flag = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list(NA),
+                     r_eff = list(NA),
+                     loo = list(NA)
+                     )
> 
> fit_tbl <- crossing(model = models,
+                     sampling_dist = sampling_dist_fit,
+                     x0_flag = flags_x, y0_flag = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = tbl_tmp, #list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list(NA),
+                     r_eff = list(NA),
+                     loo = list(NA)
+                     )
> fit_tbl[ , c("x0_group_list", "male")]
Error in `fit_tbl[, c("x0_group_list", "male")]`:
! Can't subset columns that don't exist.
✖ Column `male` doesn't exist.
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[ , c("x0_group_list", "fit")]
# A tibble: 192 × 2
   x0_group_list fit      
   <list>        <list>   
 1 <lgl [1]>     <lgl [1]>
 2 <lgl [1]>     <lgl [1]>
 3 <lgl [1]>     <lgl [1]>
 4 <lgl [1]>     <lgl [1]>
 5 <lgl [1]>     <lgl [1]>
 6 <lgl [1]>     <lgl [1]>
 7 <lgl [1]>     <lgl [1]>
 8 <lgl [1]>     <lgl [1]>
 9 <lgl [1]>     <lgl [1]>
10 <lgl [1]>     <lgl [1]>
# … with 182 more rows
# ℹ Use `print(n = ...)` to see more rows
> fit_tbl[ , c("x0_group_list", "y0_group_list", "fit")]
# A tibble: 192 × 3
   x0_group_list y0_group_list$male $y0_group fit      
   <list>        <fct>              <fct>     <list>   
 1 <lgl [1]>     1                  1         <lgl [1]>
 2 <lgl [1]>     2                  1         <lgl [1]>
 3 <lgl [1]>     3                  2         <lgl [1]>
 4 <lgl [1]>     4                  2         <lgl [1]>
 5 <lgl [1]>     5                  1         <lgl [1]>
 6 <lgl [1]>     6                  1         <lgl [1]>
 7 <lgl [1]>     7                  2         <lgl [1]>
 8 <lgl [1]>     8                  1         <lgl [1]>
 9 <lgl [1]>     9                  1         <lgl [1]>
10 <lgl [1]>     10                 2         <lgl [1]>
# … with 182 more rows
# ℹ Use `print(n = ...)` to see more rows
> 
> fit_tbl <- crossing(model = models,
+                     sampling_dist = sampling_dist_fit,
+                     x0_flag = flags_x, y0_flag = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA), #tbl_tmp, #list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list(NA),
+                     r_eff = list(NA),
+                     loo = list(NA)
+                     )
> fit_tbl[ , c("x0_group_list", "y0_group_list", "fit")]
# A tibble: 16 × 3
   x0_group_list y0_group_list fit      
   <list>        <list>        <list>   
 1 <lgl [1]>     <lgl [1]>     <lgl [1]>
 2 <lgl [1]>     <lgl [1]>     <lgl [1]>
 3 <lgl [1]>     <lgl [1]>     <lgl [1]>
 4 <lgl [1]>     <lgl [1]>     <lgl [1]>
 5 <lgl [1]>     <lgl [1]>     <lgl [1]>
 6 <lgl [1]>     <lgl [1]>     <lgl [1]>
 7 <lgl [1]>     <lgl [1]>     <lgl [1]>
 8 <lgl [1]>     <lgl [1]>     <lgl [1]>
 9 <lgl [1]>     <lgl [1]>     <lgl [1]>
10 <lgl [1]>     <lgl [1]>     <lgl [1]>
11 <lgl [1]>     <lgl [1]>     <lgl [1]>
12 <lgl [1]>     <lgl [1]>     <lgl [1]>
13 <lgl [1]>     <lgl [1]>     <lgl [1]>
14 <lgl [1]>     <lgl [1]>     <lgl [1]>
15 <lgl [1]>     <lgl [1]>     <lgl [1]>
16 <lgl [1]>     <lgl [1]>     <lgl [1]>
> 
>       fit_tbl[curr_row, "x0_group_list"] <- unique(data[, c("male", "x0_group")])
Error in `vectbl_recycle_rhs_cols()`:
! Can't recycle input of size 2 to size 1.
Run `rlang::last_error()` to see where the error occurred.
> 
>       fit_tbl[[curr_row, "x0_group_list"]] <- unique(data[, c("male", "x0_group")])
Error:
! Assigned data `unique(data[, c("male", "x0_group")])` must be compatible with row subscript `curr_row`.
✖ 1 row must be assigned.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> 
>       fit_tbl[curr_row, "x0_group_list"][[1]] <- unique(data[, c("male", "x0_group")])
Error:
! Assigned data `unique(data[, c("male", "x0_group")])` must be compatible with existing data.
✖ Existing data has 1 row.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> 
>       fit_tbl[[curr_row, "x0_group_list"]][[1]] <- unique(data[, c("male", "x0_group")])
> 
>       fit_tbl[curr_row]$x0_group_list[[1]] <- unique(data[, c("male", "x0_group")])
Warning: Unknown or uninitialised column: `x0_group_list`.
Error in `vectbl_as_new_col_index()`:
! Can't recycle `<tibble[,2]>` (size 2) to size 1.
Run `rlang::last_error()` to see where the error occurred.
> unique(data[, c("male", "x0_group")])
# A tibble: 12 × 2
   male  x0_group
   <fct>    <dbl>
 1 1            1
 2 2            1
 3 3            1
 4 4            1
 5 5            1
 6 6            1
 7 7            1
 8 8            1
 9 9            1
10 10           1
11 11           1
12 12           1
> fit_tbl[curr_row]$x0_group_list[[1]]
Warning: Unknown or uninitialised column: `x0_group_list`.
NULL
> fit_tbl[curr_row]$x0_group_list
Warning: Unknown or uninitialised column: `x0_group_list`.
NULL
> 
>       fit_tbl[curr_row, ]$x0_group_list[[1]] <- unique(data[, c("male", "x0_group")])
>       
> fit_tbl[curr_row, ]$x0_group_list[[1]] <- unique(data[, c("male", "x0_group")])
> fit_tbl[curr_row, ]$x0_group_list
[[1]]
# A tibble: 12 × 2
   male  x0_group
   <fct>    <dbl>
 1 1            1
 2 2            1
 3 3            1
 4 4            1
 5 5            1
 6 6            1
 7 7            1
 8 8            1
 9 9            1
10 10           1
11 11           1
12 12           1

> fit_tbl[curr_row, x0_group_list]
Error in `[.tbl_df`(fit_tbl, curr_row, x0_group_list) : 
  object 'x0_group_list' not found
> fit_tbl[curr_row, "x0_group_list"]
# A tibble: 1 × 1
  x0_group_list    
  <list>           
1 <tibble [12 × 2]>
> fit_tbl[[curr_row, "x0_group_list"]]
[[1]]
# A tibble: 12 × 2
   male  x0_group
   <fct>    <dbl>
 1 1            1
 2 2            1
 3 3            1
 4 4            1
 5 5            1
 6 6            1
 7 7            1
 8 8            1
 9 9            1
10 10           1
11 11           1
12 12           1

> fit_tbl[[curr_row, "x0_group_list"]] <- tbl_tmp
Error:
! Assigned data `tbl_tmp` must be compatible with row subscript `curr_row`.
✖ 1 row must be assigned.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[[curr_row, "x0_group_list"]] <- as.list(tbl_tmp)
Error:
! Assigned data `as.list(tbl_tmp)` must be compatible with row subscript `curr_row`.
✖ 1 row must be assigned.
✖ Assigned data has 2 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[curr_row, "x0_group_list"]
# A tibble: 1 × 1
  x0_group_list    
  <list>           
1 <tibble [12 × 2]>
> fit_tbl[curr_row, "x0_group_list"][[1]]
[[1]]
# A tibble: 12 × 2
   male  x0_group
   <fct>    <dbl>
 1 1            1
 2 2            1
 3 3            1
 4 4            1
 5 5            1
 6 6            1
 7 7            1
 8 8            1
 9 9            1
10 10           1
11 11           1
12 12           1

> 
>       fit_tbl[curr_row, "x0_group_list"][[1]] <- unique(data[, c("male", "x0_group")])
Error:
! Assigned data `unique(data[, c("male", "x0_group")])` must be compatible with existing data.
✖ Existing data has 1 row.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[curr_row, "x0_group_list"]
# A tibble: 1 × 1
  x0_group_list    
  <list>           
1 <tibble [12 × 2]>
> fit_tbl[curr_row, "x0_group_list"][[1]]
[[1]]
# A tibble: 12 × 2
   male  x0_group
   <fct>    <dbl>
 1 1            1
 2 2            1
 3 3            1
 4 4            1
 5 5            1
 6 6            1
 7 7            1
 8 8            1
 9 9            1
10 10           1
11 11           1
12 12           1

> class(fit_tbl[curr_row, ]$x0_group_list)
[[1]]
# A tibble: 12 × 2
   male  x0_group
   <fct>    <dbl>
 1 1            1
 2 2            1
 3 3            1
 4 4            1
 5 5            1
 6 6            1
 7 7            1
 8 8            1
 9 9            1
10 10           1
11 11           1
12 12           1

> 
>       fit_tbl[curr_row, "x0_group_list"] <- unique(data[, c("male", "x0_group")])
Error in `vectbl_recycle_rhs_cols()`:
! Can't recycle input of size 2 to size 1.
Run `rlang::last_error()` to see where the error occurred.
> class(fit_tbl[curr_row, ]$x0_group_list)
[1] "list"
> length(fit_tbl[curr_row, ]$x0_group_list)
[1] 1
> 
>       fit_tbl[curr_row]$x0_group_list <- unique(data[, c("male", "x0_group")])
Error:
! Assigned data `unique(data[, c("male", "x0_group")])` must be compatible with existing data.
✖ Existing data has 16 rows.
✖ Assigned data has 12 rows.
ℹ Only vectors of size 1 are recycled.
Run `rlang::last_error()` to see where the error occurred.
> 
>       
Warning: Unknown or uninitialised column: `x0_group_list`.
Error in `vectbl_as_new_col_index()`:
! Can't recycle `<tibble[,2]>` (size 2) to size 1.
Run `rlang::last_error()` to see where the error occurred.
> 
> fit_tbl[curr_row]$"x0_group_list"[[1]] <- unique(data[, c("male", "x0_group")])
Warning: Unknown or uninitialised column: `x0_group_list`.
Error in `vectbl_as_new_col_index()`:
! Can't recycle `<tibble[,2]>` (size 2) to size 1.
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[curr_row]$"x0_group_list" <- unique(data[, c("male", "x0_group")])
Error:
! Assigned data `unique(data[, c("male", "x0_group")])` must be compatible with existing data.
✖ Existing data has 16 rows.
✖ Assigned data has 12 rows.
ℹ Only vectors of size 1 are recycled.
Run `rlang::last_error()` to see where the error occurred.
> unique(data[, c("male", "x0_group")])
# A tibble: 12 × 2
   male  x0_group
   <fct>    <dbl>
 1 1            1
 2 2            1
 3 3            1
 4 4            1
 5 5            1
 6 6            1
 7 7            1
 8 8            1
 9 9            1
10 10           1
11 11           1
12 12           1
> tbl_tmp
# A tibble: 12 × 2
   male  y0_group
   <fct> <fct>   
 1 1     1       
 2 2     1       
 3 3     2       
 4 4     2       
 5 5     1       
 6 6     1       
 7 7     2       
 8 8     1       
 9 9     1       
10 10    2       
11 11    2       
12 12    2       
> fit_tbl[curr_row]$"x0_group_list"[[1]]
Warning: Unknown or uninitialised column: `x0_group_list`.
NULL
> fit_tbl[curr_row]$x0_group_list
Warning: Unknown or uninitialised column: `x0_group_list`.
NULL
> 
> fit_tbl <- crossing(model = models,
+                     sampling_dist = sampling_dist_fit,
+                     x0_flag = flags_x, y0_flag = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA), #tbl_tmp, #list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list(NA),
+                     r_eff = list(NA),
+                     loo = list(NA)
+                     )
> fit_tbl[curr_row]$x0_group_list
Warning: Unknown or uninitialised column: `x0_group_list`.
NULL
> fit_tbl[curr_row, ]$x0_group_list
[[1]]
[1] NA

> fit_tbl[curr_row, x0_group_list]
Error in `[.tbl_df`(fit_tbl, curr_row, x0_group_list) : 
  object 'x0_group_list' not found
> fit_tbl[curr_row, "x0_group_list"]
# A tibble: 1 × 1
  x0_group_list
  <list>       
1 <lgl [1]>    
> fit_tbl[curr_row, "x0_group_list"] <- tbl_tmp
Error in `vectbl_recycle_rhs_cols()`:
! Can't recycle input of size 2 to size 1.
Run `rlang::last_error()` to see where the error occurred.
> tbl_tmp
# A tibble: 12 × 2
   male  y0_group
   <fct> <fct>   
 1 1     1       
 2 2     1       
 3 3     2       
 4 4     2       
 5 5     1       
 6 6     1       
 7 7     2       
 8 8     1       
 9 9     1       
10 10    2       
11 11    2       
12 12    2       
> fit_tbl[curr_row, "x0_group_list"][1] <- tbl_tmp
Error in `vectbl_as_new_col_index()`:
! Can't recycle `tbl_tmp` (size 2) to size 1.
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[curr_row, "x0_group_list"][[1]] <- tbl_tmp
Error:
! Assigned data `tbl_tmp` must be compatible with existing data.
✖ Existing data has 1 row.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[curr_row, "x0_group_list"] <- tbl_tmp
Error in `vectbl_recycle_rhs_cols()`:
! Can't recycle input of size 2 to size 1.
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[[curr_row, "x0_group_list"]] <- tbl_tmp
Error:
! Assigned data `tbl_tmp` must be compatible with row subscript `curr_row`.
✖ 1 row must be assigned.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[[curr_row, "x0_group_list"]] <- list(tbl_tmp)
> fit_tbl[[curr_row, "desc"]] <- list(tbl_tmp)
> fit_tbl
# A tibble: 16 × 12
   model sampli…¹ x0_flag y0_flag desc  y0_gr…² x0_gro…³ fit   llik  r_eff loo  
   <chr> <chr>    <chr>   <chr>   <chr> <list>  <list>   <lis> <lis> <lis> <lis>
 1 brms  nb       groups… groups… NA_c… <lgl>   <lgl>    <lgl> <lgl> <lgl> <lgl>
 2 brms  nb       groups… groups… NA_c… <lgl>   <lgl>    <lgl> <lgl> <lgl> <lgl>
 3 brms  nb       groups… unifor… NA_c… <lgl>   <lgl>    <lgl> <lgl> <lgl> <lgl>
 4 brms  nb       groups… unifor… NA_c… <lgl>   <lgl>    <lgl> <lgl> <lgl> <lgl>
 5 brms  nb       groups… groups… NA_c… <lgl>   <lgl>    <lgl> <lgl> <lgl> <lgl>
 6 brms  nb       groups… groups… NA_c… <lgl>   <lgl>    <lgl> <lgl> <lgl> <lgl>
 7 brms  nb       groups… unifor… NA_c… <lgl>   <lgl>    <lgl> <lgl> <lgl> <lgl>
 8 brms  nb       groups… unifor… NA_c… <lgl>   <lgl>    <lgl> <lgl> <lgl> <lgl>
 9 brms  nb       unifor… groups… NA_c… <lgl>   <lgl>    <lgl> <lgl> <lgl> <lgl>
10 brms  nb       unifor… groups… NA_c… <lgl>   <lgl>    <lgl> <lgl> <lgl> <lgl>
11 brms  nb       unifor… unifor… NA_c… <lgl>   <tibble> <lgl> <lgl> <lgl> <lgl>
12 brms  nb       unifor… unifor… NA_c… <lgl>   <lgl>    <lgl> <lgl> <lgl> <lgl>
13 brms  nb       unifor… groups… NA_c… <lgl>   <lgl>    <lgl> <lgl> <lgl> <lgl>
14 brms  nb       unifor… groups… NA_c… <lgl>   <lgl>    <lgl> <lgl> <lgl> <lgl>
15 brms  nb       unifor… unifor… NA_c… <lgl>   <lgl>    <lgl> <lgl> <lgl> <lgl>
16 brms  nb       unifor… unifor… NA_c… <lgl>   <lgl>    <lgl> <lgl> <lgl> <lgl>
# … with 1 more variable: `brms: uniform_1, uniform_1` <list>, and abbreviated
#   variable names ¹​sampling_dist, ²​y0_group_list, ³​x0_group_list
# ℹ Use `colnames()` to see all variable names
> 
> fit_tbl <- crossing(model = models,
+                     sampling_dist = sampling_dist_fit,
+                     x0_flag = flags_x, y0_flag = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA), #tbl_tmp, #list(NA),
+                     x0_group_list = list(NA),
+                     fit = list(NA),
+                     llik = list(NA),
+                     r_eff = list(NA),
+                     loo = list(NA)
+                     )
> fit_tbl
# A tibble: 16 × 11
   model samplin…¹ x0_flag y0_flag desc  y0_gr…² x0_gr…³ fit   llik  r_eff loo  
   <chr> <chr>     <chr>   <chr>   <chr> <list>  <list>  <lis> <lis> <lis> <lis>
 1 brms  nb        groups… groups… NA_c… <lgl>   <lgl>   <lgl> <lgl> <lgl> <lgl>
 2 brms  nb        groups… groups… NA_c… <lgl>   <lgl>   <lgl> <lgl> <lgl> <lgl>
 3 brms  nb        groups… unifor… NA_c… <lgl>   <lgl>   <lgl> <lgl> <lgl> <lgl>
 4 brms  nb        groups… unifor… NA_c… <lgl>   <lgl>   <lgl> <lgl> <lgl> <lgl>
 5 brms  nb        groups… groups… NA_c… <lgl>   <lgl>   <lgl> <lgl> <lgl> <lgl>
 6 brms  nb        groups… groups… NA_c… <lgl>   <lgl>   <lgl> <lgl> <lgl> <lgl>
 7 brms  nb        groups… unifor… NA_c… <lgl>   <lgl>   <lgl> <lgl> <lgl> <lgl>
 8 brms  nb        groups… unifor… NA_c… <lgl>   <lgl>   <lgl> <lgl> <lgl> <lgl>
 9 brms  nb        unifor… groups… NA_c… <lgl>   <lgl>   <lgl> <lgl> <lgl> <lgl>
10 brms  nb        unifor… groups… NA_c… <lgl>   <lgl>   <lgl> <lgl> <lgl> <lgl>
11 brms  nb        unifor… unifor… NA_c… <lgl>   <lgl>   <lgl> <lgl> <lgl> <lgl>
12 brms  nb        unifor… unifor… NA_c… <lgl>   <lgl>   <lgl> <lgl> <lgl> <lgl>
13 brms  nb        unifor… groups… NA_c… <lgl>   <lgl>   <lgl> <lgl> <lgl> <lgl>
14 brms  nb        unifor… groups… NA_c… <lgl>   <lgl>   <lgl> <lgl> <lgl> <lgl>
15 brms  nb        unifor… unifor… NA_c… <lgl>   <lgl>   <lgl> <lgl> <lgl> <lgl>
16 brms  nb        unifor… unifor… NA_c… <lgl>   <lgl>   <lgl> <lgl> <lgl> <lgl>
# … with abbreviated variable names ¹​sampling_dist, ²​y0_group_list,
#   ³​x0_group_list
> fit_tbl[[curr_row, "desc"]] <- list(tbl_tmp)
Error:
! Assigned data `list(tbl_tmp)` must be compatible with existing data.
ℹ Error occurred for column `desc`.
✖ Can't convert <list> to <character>.
Run `rlang::last_error()` to see where the error occurred.
> 
>       fit_tbl[curr_row, "x0_group_list"] <- unique(data[, c("male", "x0_group")]) %>% list()
Error:
! Assigned data `unique(data[, c("male", "x0_group")]) %>% list()` must be compatible with row subscript `curr_row`.
✖ 1 row must be assigned.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> 
>       fit_tbl[curr_row, "x0_group_list"] <- list(unique(data[, c("male", "x0_group")]))
Error:
! Assigned data `list(unique(data[, c("male", "x0_group")]))` must be compatible with row subscript `curr_row`.
✖ 1 row must be assigned.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> 
>       fit_tbl[curr_row, "x0_group_list"] <- as.list(unique(data[, c("male", "x0_group")]))
Error in `vectbl_recycle_rhs_cols()`:
! Can't recycle input of size 2 to size 1.
Run `rlang::last_error()` to see where the error occurred.
> fit_tbl[[curr_row, "x0_group_list"]] <- list(tbl_tmp)
> tbl_tmp
# A tibble: 12 × 2
   male  y0_group
   <fct> <fct>   
 1 1     1       
 2 2     1       
 3 3     2       
 4 4     2       
 5 5     1       
 6 6     1       
 7 7     2       
 8 8     1       
 9 9     1       
10 10    2       
11 11    2       
12 12    2       
>  as.list(unique(data[, c("male", "x0_group")]))
$male
 [1] 1  2  3  4  5  6  7  8  9  10 11 12
Levels: 1 2 3 4 5 6 7 8 9 10 11 12

$x0_group
 [1] 1 1 1 1 1 1 1 1 1 1 1 1

>  as.list(unique(data[, c("male", "y0_group")]))
$male
 [1] 1  2  3  4  5  6  7  8  9  10 11 12
Levels: 1 2 3 4 5 6 7 8 9 10 11 12

$y0_group
 [1] 1 1 1 1 1 1 1 1 1 1 1 1

>  list(unique(data[, c("male", "y0_group")]))
[[1]]
# A tibble: 12 × 2
   male  y0_group
   <fct>    <dbl>
 1 1            1
 2 2            1
 3 3            1
 4 4            1
 5 5            1
 6 6            1
 7 7            1
 8 8            1
 9 9            1
10 10           1
11 11           1
12 12           1

>  unique(data[, c("male", "y0_group")])
# A tibble: 12 × 2
   male  y0_group
   <fct>    <dbl>
 1 1            1
 2 2            1
 3 3            1
 4 4            1
 5 5            1
 6 6            1
 7 7            1
 8 8            1
 9 9            1
10 10           1
11 11           1
12 12           1
> 
>       fit_tbl[curr_row, "x0_group_list"] <- list(unique(data[, c("male", "x0_group")]))
Error:
! Assigned data `list(unique(data[, c("male", "x0_group")]))` must be compatible with row subscript `curr_row`.
✖ 1 row must be assigned.
✖ Assigned data has 12 rows.
ℹ Row updates require a list value. Do you need `list()` or `as.list()`?
Run `rlang::last_error()` to see where the error occurred.
> 
>       fit_tbl[[curr_row, "x0_group_list"]] <- list(unique(data[, c("male", "x0_group")]))
> fit_tbl[[curr_row, "x0_group_list"]]
[[1]]
# A tibble: 12 × 2
   male  x0_group
   <fct>    <dbl>
 1 1            1
 2 2            1
 3 3            1
 4 4            1
 5 5            1
 6 6            1
 7 7            1
 8 8            1
 9 9            1
10 10           1
11 11           1
12 12           1

> 
>       fit_tbl[[curr_row, "x0_group_list"]] <- list(unique(data[, c("male", "x0_group")]))
>       fit_tbl[[curr_row, "y0_group_list"]] <- list(unique(data[, c("male", "y0_group")]))
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.875 #0.95
> iter <- 1000
> ## could include "individual"
> flags <- c("uniform_1", "uniform_2", "groups_1", "groups_2")
> models <- c("brms")
> sampling_dist_fit <- "nb"
> flags_x <- flags
> flags_y <- flags
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     sampling_dist = sampling_dist_fit,
+                     x0_flag = flags_x, y0_flag = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA), #tbl_tmp, #list(NA),
+                     x0_group_ .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0_flag == x_flag &
+               .... [TRUNCATED] 
[1] "brms: uniform_1, uniform_1"
             prior class      coef group resp dpar nlpar lb ub       source
 gamma(0.01, 0.01) shape                                  0         default
            (flat)     b                              x0            default
            (flat)     b Intercept                    x0       (vectorized)
            (flat)     b                              y0            default
            (flat)     b Intercept                    y0       (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.002454 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 24.54 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002423 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 24.23 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002545 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 25.45 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.0021 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 21 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 4.614 seconds (Warm-up)
Chain 2:                3.748 seconds (Sampling)
Chain 2:                8.362 seconds (Total)
Chain 2: 
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 4.549 seconds (Warm-up)
Chain 1:                4.617 seconds (Sampling)
Chain 1:                9.166 seconds (Total)
Chain 1: 
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 4.834 seconds (Warm-up)
Chain 4:                5.001 seconds (Sampling)
Chain 4:                9.835 seconds (Total)
Chain 4: 
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 4.827 seconds (Warm-up)
Chain 3:                5.158 seconds (Sampling)
Chain 3:                9.985 seconds (Total)
Chain 3: 
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1
         y0 ~ 1
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    39.39      0.34    38.71    40.04 1.00      838     1079
y0_Intercept   112.22      4.00   104.68   120.08 1.00      894     1152

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     1.12      0.03     1.06     1.19 1.00     1430     1207

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: uniform_1, uniform_2"
             prior class      coef group resp dpar nlpar lb ub       source
 gamma(0.01, 0.01) shape                                  0         default
            (flat)     b                              x0            default
            (flat)     b Intercept                    x0       (vectorized)
            (flat)     b                              y0            default
            (flat)     b Intercept                    y0       (vectorized)
            (flat)     b y0_group2                    y0       (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.001976 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 19.76 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002004 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 20.04 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.001808 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 18.08 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.001911 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 19.11 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 5.026 seconds (Warm-up)
Chain 1:                4.963 seconds (Sampling)
Chain 1:                9.989 seconds (Total)
Chain 1: 
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 5.598 seconds (Warm-up)
Chain 2:                4.732 seconds (Sampling)
Chain 2:                10.33 seconds (Total)
Chain 2: 
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 5.544 seconds (Warm-up)
Chain 4:                5.687 seconds (Sampling)
Chain 4:                11.231 seconds (Total)
Chain 4: 
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 5.956 seconds (Warm-up)
Chain 3:                5.614 seconds (Sampling)
Chain 3:                11.57 seconds (Total)
Chain 3: 
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1
         y0 ~ 1 + y0_group
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    39.12      0.34    38.38    39.75 1.01      724      825
y0_Intercept    45.42      1.66    42.38    48.89 1.01      804     1128
y0_y0_group2   138.48      6.02   128.05   151.42 1.00      864      997

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.00      0.07     1.88     2.13 1.00     1534     1452

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: uniform_1, groups_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.002293 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 22.93 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002143 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 21.43 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.001801 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 18.01 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002154 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 21.54 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 140.058 seconds (Warm-up)
Chain 3:                146.301 seconds (Sampling)
Chain 3:                286.359 seconds (Total)
Chain 3: 
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 159.193 seconds (Warm-up)
Chain 1:                168.401 seconds (Sampling)
Chain 1:                327.594 seconds (Total)
Chain 1: 
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 167.319 seconds (Warm-up)
Chain 4:                168.961 seconds (Sampling)
Chain 4:                336.28 seconds (Total)
Chain 4: 
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 185.944 seconds (Warm-up)
Chain 2:                208.676 seconds (Sampling)
Chain 2:                394.62 seconds (Total)
Chain 2: 
Warning: There were 2 divergent transitions after warmup. See
https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
to find out why this is a problem and how to eliminate them.
Warning: Examine the pairs() plot to diagnose sampling problems

Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-ess
Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#tail-ess
Warning: There were 2 divergent transitions after warmup. Increasing adapt_delta above 0.875 may help. See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1
         y0 ~ (1 || male)
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(y0_Intercept)    84.71     18.91    56.36   131.53 1.00      377      445

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    38.54      0.31    37.97    39.19 1.00     1337     1065
y0_Intercept   121.78     24.03    79.35   173.47 1.01      427      513

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.79      0.10     2.60     2.98 1.00     1356      997

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: uniform_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.002532 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 25.32 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002574 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 25.74 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002532 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 25.32 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002397 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 23.97 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 86.236 seconds (Warm-up)
Chain 4:                105.003 seconds (Sampling)
Chain 4:                191.239 seconds (Total)
Chain 4: 
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 97.584 seconds (Warm-up)
Chain 2:                98.467 seconds (Sampling)
Chain 2:                196.051 seconds (Total)
Chain 2: 
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 96.105 seconds (Warm-up)
Chain 1:                108.348 seconds (Sampling)
Chain 1:                204.453 seconds (Total)
Chain 1: 
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 124.417 seconds (Warm-up)
Chain 3:                100.555 seconds (Sampling)
Chain 3:                224.972 seconds (Total)
Chain 3: 
Warning: There were 19 divergent transitions after warmup. See
https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
to find out why this is a problem and how to eliminate them.
Warning: Examine the pairs() plot to diagnose sampling problems

Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-ess
Warning: There were 19 divergent transitions after warmup. Increasing adapt_delta above 0.875 may help. See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1
         y0 ~ (1 || male) + y0_group
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(y0_Intercept)    34.04      9.22    20.68    56.59 1.01      383      712

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    38.55      0.32    37.93    39.16 1.00     1455     1253
y0_Intercept    48.19     13.05    21.76    73.68 1.00      495      586
y0_y0_group2   144.26     19.70   104.84   184.31 1.01      627      732

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.79      0.09     2.61     2.97 1.00     1727     1473

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: uniform_2, uniform_1"
             prior class      coef group resp dpar nlpar lb ub       source
 gamma(0.01, 0.01) shape                                  0         default
            (flat)     b                              x0            default
            (flat)     b Intercept                    x0       (vectorized)
            (flat)     b x0_group2                    x0       (vectorized)
            (flat)     b                              y0            default
            (flat)     b Intercept                    y0       (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.002262 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 22.62 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002179 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 21.79 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002554 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 25.54 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002183 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 21.83 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 5.772 seconds (Warm-up)
Chain 1:                4.315 seconds (Sampling)
Chain 1:                10.087 seconds (Total)
Chain 1: 
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 7.805 seconds (Warm-up)
Chain 2:                4.13 seconds (Sampling)
Chain 2:                11.935 seconds (Total)
Chain 2: 
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 7.732 seconds (Warm-up)
Chain 3:                4.524 seconds (Sampling)
Chain 3:                12.256 seconds (Total)
Chain 3: 
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 8.577 seconds (Warm-up)
Chain 4:                3.985 seconds (Sampling)
Chain 4:                12.562 seconds (Total)
Chain 4: 
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1 + x0_group
         y0 ~ 1
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    33.99      0.54    32.93    35.01 1.00     1191     1282
x0_x0_group2    37.68      4.47    30.35    45.07 1.00     1609      727
y0_Intercept   109.92      3.14   103.81   116.34 1.00     1346     1474

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     1.16      0.03     1.09     1.23 1.01     1962     1279

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: uniform_2, uniform_2"
             prior class      coef group resp dpar nlpar lb ub       source
 gamma(0.01, 0.01) shape                                  0         default
            (flat)     b                              x0            default
            (flat)     b Intercept                    x0       (vectorized)
            (flat)     b x0_group2                    x0       (vectorized)
            (flat)     b                              y0            default
            (flat)     b Intercept                    y0       (vectorized)
            (flat)     b y0_group2                    y0       (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.002531 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 25.31 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002158 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 21.58 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002334 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 23.34 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002134 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 21.34 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 5.762 seconds (Warm-up)
Chain 4:                4.001 seconds (Sampling)
Chain 4:                9.763 seconds (Total)
Chain 4: 
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 5.898 seconds (Warm-up)
Chain 1:                4.076 seconds (Sampling)
Chain 1:                9.974 seconds (Total)
Chain 1: 
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 6.687 seconds (Warm-up)
Chain 3:                3.793 seconds (Sampling)
Chain 3:                10.48 seconds (Total)
Chain 3: 
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 7.1 seconds (Warm-up)
Chain 2:                4.277 seconds (Sampling)
Chain 2:                11.377 seconds (Total)
Chain 2: 
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1 + x0_group
         y0 ~ 1 + y0_group
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    36.42      0.37    35.71    37.14 1.01     1864     1506
x0_x0_group2    37.74      4.54    30.44    45.20 1.00     2103     1162
y0_Intercept    44.50      1.34    41.91    47.15 1.00     1987     1509
y0_y0_group2   113.01      4.16   105.15   121.12 1.00     1938     1519

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     1.82      0.06     1.70     1.93 1.00     2473     1488

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: uniform_2, groups_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.002196 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 21.96 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002197 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 21.97 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002185 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 21.85 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002272 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 22.72 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 114.55 seconds (Warm-up)
Chain 4:                74.423 seconds (Sampling)
Chain 4:                188.973 seconds (Total)
Chain 4: 
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 112.381 seconds (Warm-up)
Chain 1:                93.771 seconds (Sampling)
Chain 1:                206.152 seconds (Total)
Chain 1: 
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 121.364 seconds (Warm-up)
Chain 2:                102.397 seconds (Sampling)
Chain 2:                223.761 seconds (Total)
Chain 2: 
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 125.524 seconds (Warm-up)
Chain 3:                109.904 seconds (Sampling)
Chain 3:                235.428 seconds (Total)
Chain 3: 
Warning: There were 3 divergent transitions after warmup. See
https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
to find out why this is a problem and how to eliminate them.
Warning: Examine the pairs() plot to diagnose sampling problems

Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-ess
Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#tail-ess
Warning: There were 3 divergent transitions after warmup. Increasing adapt_delta above 0.875 may help. See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1 + x0_group
         y0 ~ (1 || male)
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(y0_Intercept)    70.67     16.72    46.53   109.29 1.01      287      421

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    35.44      0.59    34.28    36.59 1.01     1243      845
x0_x0_group2    37.92      4.49    30.47    45.21 1.00     1654      978
y0_Intercept   104.14     23.43    52.36   147.66 1.01      270      244

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.19      0.07     2.05     2.33 1.01     1575     1039

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: uniform_2, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.002164 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 21.64 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002138 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 21.38 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002111 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 21.11 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002082 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 20.82 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 73.493 seconds (Warm-up)
Chain 4:                66.075 seconds (Sampling)
Chain 4:                139.568 seconds (Total)
Chain 4: 
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 80.115 seconds (Warm-up)
Chain 1:                74.261 seconds (Sampling)
Chain 1:                154.376 seconds (Total)
Chain 1: 
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 81.324 seconds (Warm-up)
Chain 3:                85.421 seconds (Sampling)
Chain 3:                166.745 seconds (Total)
Chain 3: 
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 101.265 seconds (Warm-up)
Chain 2:                91.121 seconds (Sampling)
Chain 2:                192.386 seconds (Total)
Chain 2: 
Warning: There were 11 divergent transitions after warmup. See
https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
to find out why this is a problem and how to eliminate them.
Warning: Examine the pairs() plot to diagnose sampling problems

Warning: There were 11 divergent transitions after warmup. Increasing adapt_delta above 0.875 may help. See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1 + x0_group
         y0 ~ (1 || male) + y0_group
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(y0_Intercept)    27.67      7.67    16.04    44.27 1.01      555      985

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    35.78      0.56    34.68    36.85 1.00     1198     1126
x0_x0_group2    37.79      4.53    30.34    45.18 1.00     1810      808
y0_Intercept    46.69     11.77    23.90    71.72 1.00      461      639
y0_y0_group2   114.26     17.39    79.49   149.32 1.00      456      521

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.19      0.07     2.04     2.33 1.00     1809     1273

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_1, uniform_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.002454 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 24.54 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.001983 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 19.83 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.001772 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 17.72 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002063 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 20.63 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 100.773 seconds (Warm-up)
Chain 3:                72.985 seconds (Sampling)
Chain 3:                173.758 seconds (Total)
Chain 3: 
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 125.168 seconds (Warm-up)
Chain 4:                102.666 seconds (Sampling)
Chain 4:                227.834 seconds (Total)
Chain 4: 
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 120.767 seconds (Warm-up)
Chain 1:                111.895 seconds (Sampling)
Chain 1:                232.662 seconds (Total)
Chain 1: 
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 138.142 seconds (Warm-up)
Chain 2:                110.822 seconds (Sampling)
Chain 2:                248.964 seconds (Total)
Chain 2: 
Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-ess
Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#tail-ess
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male)
         y0 ~ 1
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)    34.54      8.27    22.37    54.91 1.01      297      404

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    34.91      3.68    30.20    43.69 1.03      196      229
y0_Intercept   178.47      5.82   167.54   189.91 1.01      674      743

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.73      0.09     2.55     2.91 1.01     1193     1129

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_1, uniform_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.002597 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 25.97 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.00248 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 24.8 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002274 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 22.74 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002144 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 21.44 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 78.465 seconds (Warm-up)
Chain 1:                103.779 seconds (Sampling)
Chain 1:                182.244 seconds (Total)
Chain 1: 
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 109.369 seconds (Warm-up)
Chain 2:                78.522 seconds (Sampling)
Chain 2:                187.891 seconds (Total)
Chain 2: 
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 87.672 seconds (Warm-up)
Chain 3:                102.896 seconds (Sampling)
Chain 3:                190.568 seconds (Total)
Chain 3: 
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 83.324 seconds (Warm-up)
Chain 4:                108.891 seconds (Sampling)
Chain 4:                192.215 seconds (Total)
Chain 4: 
Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-ess
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male)
         y0 ~ 1 + y0_group
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)    11.22      2.98     7.04    17.94 1.01      387      702

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    34.63      2.73    30.41    40.62 1.01      292      481
y0_Intercept    70.55      3.72    63.62    78.51 1.01     1001      782
y0_y0_group2   111.56      6.53    98.37   124.22 1.01     1147     1124

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.83      0.10     2.63     3.03 1.00     1255      961

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_1, groups_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.002747 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 27.47 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002649 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 26.49 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002686 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 26.86 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002814 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 28.14 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 204.382 seconds (Warm-up)
Chain 4:                221.484 seconds (Sampling)
Chain 4:                425.866 seconds (Total)
Chain 4: 
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 234.742 seconds (Warm-up)
Chain 2:                205.775 seconds (Sampling)
Chain 2:                440.517 seconds (Total)
Chain 2: 
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 252.321 seconds (Warm-up)
Chain 1:                203.644 seconds (Sampling)
Chain 1:                455.965 seconds (Total)
Chain 1: 
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 257.327 seconds (Warm-up)
Chain 3:                280.314 seconds (Sampling)
Chain 3:                537.641 seconds (Total)
Chain 3: 
Warning: There were 1 divergent transitions after warmup. See
https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
to find out why this is a problem and how to eliminate them.
Warning: Examine the pairs() plot to diagnose sampling problems

Warning: There were 1 divergent transitions after warmup. Increasing adapt_delta above 0.875 may help. See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male)
         y0 ~ (1 || male)
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)     3.23      0.97     1.89     5.70 1.01      644      973
sd(y0_Intercept)    75.29     16.08    50.79   112.47 1.01      597     1046

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    37.99      0.97    36.13    39.87 1.00      510      965
y0_Intercept   117.59     23.41    73.46   164.20 1.00      455      598

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.98      0.10     2.78     3.18 1.00     1964     1278

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.002452 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 24.52 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002291 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 22.91 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002292 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 22.92 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002276 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 22.76 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 114.801 seconds (Warm-up)
Chain 4:                80.909 seconds (Sampling)
Chain 4:                195.71 seconds (Total)
Chain 4: 
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 121.747 seconds (Warm-up)
Chain 1:                85.43 seconds (Sampling)
Chain 1:                207.177 seconds (Total)
Chain 1: 
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 119.881 seconds (Warm-up)
Chain 3:                90.796 seconds (Sampling)
Chain 3:                210.677 seconds (Total)
Chain 3: 
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 121.298 seconds (Warm-up)
Chain 2:                113.49 seconds (Sampling)
Chain 2:                234.788 seconds (Total)
Chain 2: 
Warning: There were 15 divergent transitions after warmup. See
https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
to find out why this is a problem and how to eliminate them.
Warning: Examine the pairs() plot to diagnose sampling problems

Warning: There were 15 divergent transitions after warmup. Increasing adapt_delta above 0.875 may help. See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male)
         y0 ~ (1 || male) + y0_group
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)     3.00      0.90     1.79     5.04 1.00      708      907
sd(y0_Intercept)    27.10      7.41    16.31    44.42 1.00      699     1162

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    37.97      0.90    36.08    39.70 1.00      608      731
y0_Intercept    53.09     11.73    30.83    78.09 1.00      545      683
y0_y0_group2   130.54     16.90    96.95   164.22 1.00      653      825

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.97      0.10     2.78     3.19 1.01     2652     1515

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_2, uniform_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.001809 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 18.09 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002205 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 22.05 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002291 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 22.91 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002129 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 21.29 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 322.513 seconds (Warm-up)
Chain 3:                255.533 seconds (Sampling)
Chain 3:                578.046 seconds (Total)
Chain 3: 
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 369.741 seconds (Warm-up)
Chain 4:                291.01 seconds (Sampling)
Chain 4:                660.751 seconds (Total)
Chain 4: 
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 409.206 seconds (Warm-up)
Chain 2:                303.18 seconds (Sampling)
Chain 2:                712.386 seconds (Total)
Chain 2: 
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 372.113 seconds (Warm-up)
Chain 1:                348.967 seconds (Sampling)
Chain 1:                721.08 seconds (Total)
Chain 1: 
Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-ess
Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#tail-ess
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male) + x0_group
         y0 ~ 1
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)    43.13     11.14    27.91    72.11 1.02      234      411

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    33.94      3.44    30.13    43.26 1.00      605      667
x0_x0_group2    35.03      3.96    30.12    43.94 1.01      833      940
y0_Intercept   179.14      6.00   168.01   191.28 1.01     1248     1131

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.72      0.09     2.54     2.90 1.01     1537     1172

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_2, uniform_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.002739 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 27.39 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002778 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 27.78 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002717 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 27.17 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002688 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 26.88 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 359.948 seconds (Warm-up)
Chain 4:                211.543 seconds (Sampling)
Chain 4:                571.491 seconds (Total)
Chain 4: 
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 302.369 seconds (Warm-up)
Chain 1:                289.917 seconds (Sampling)
Chain 1:                592.286 seconds (Total)
Chain 1: 
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 359.835 seconds (Warm-up)
Chain 3:                294.616 seconds (Sampling)
Chain 3:                654.451 seconds (Total)
Chain 3: 
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 421.131 seconds (Warm-up)
Chain 2:                312.666 seconds (Sampling)
Chain 2:                733.797 seconds (Total)
Chain 2: 
Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-ess
Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#tail-ess
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male) + x0_group
         y0 ~ 1 + y0_group
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)    22.56      6.36    13.75    38.24 1.01      254      469

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    32.15      2.11    30.04    38.03 1.00      487      515
x0_x0_group2    32.90      2.90    30.06    40.81 1.00      959      827
y0_Intercept    72.75      4.46    64.91    82.41 1.00      961     1054
y0_y0_group2   108.62      7.04    94.07   121.92 1.00     1084      963

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.84      0.09     2.66     3.02 1.01     1475     1237

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_2, groups_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.002326 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 23.26 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002067 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 20.67 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002243 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 22.43 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002257 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 22.57 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 171.921 seconds (Warm-up)
Chain 1:                152.515 seconds (Sampling)
Chain 1:                324.436 seconds (Total)
Chain 1: 
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 581.83 seconds (Warm-up)
Chain 2:                507.706 seconds (Sampling)
Chain 2:                1089.54 seconds (Total)
Chain 2: 
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 671.245 seconds (Warm-up)
Chain 4:                442.606 seconds (Sampling)
Chain 4:                1113.85 seconds (Total)
Chain 4: 
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 763.025 seconds (Warm-up)
Chain 3:                415.852 seconds (Sampling)
Chain 3:                1178.88 seconds (Total)
Chain 3: 
Warning: The largest R-hat is 1.54, indicating chains have not mixed.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#r-hat
Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-ess
Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#tail-ess
Warning: Parts of the model have not converged (some Rhats are > 1.05). Be careful when analysing the results! We recommend running more iterations and/or setting stronger priors.
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male) + x0_group
         y0 ~ (1 || male)
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)    15.85      9.47     0.48    33.52 1.53        7       32
sd(y0_Intercept)    74.19     17.85    47.84   119.45 1.05       95      753

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    33.33      2.64    30.11    39.71 1.14       21      531
x0_x0_group2    33.90      3.85    30.06    43.94 1.18       16       68
y0_Intercept   120.29     25.76    72.92   170.87 1.09       42      503

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.77      0.35     2.11     3.16 1.53        7       34

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_2, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.003106 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 31.06 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002955 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 29.55 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002985 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 29.85 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002361 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 23.61 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 97.214 seconds (Warm-up)
Chain 2:                70.744 seconds (Sampling)
Chain 2:                167.958 seconds (Total)
Chain 2: 
Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 95.452 seconds (Warm-up)
Chain 3:                82.011 seconds (Sampling)
Chain 3:                177.463 seconds (Total)
Chain 3: 
Chain 4: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 110.976 seconds (Warm-up)
Chain 4:                133.844 seconds (Sampling)
Chain 4:                244.82 seconds (Total)
Chain 4: 
Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1: Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1: Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1: Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1: Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 547.158 seconds (Warm-up)
Chain 1:                260.721 seconds (Sampling)
Chain 1:                807.879 seconds (Total)
Chain 1: 
Warning: There were 10 divergent transitions after warmup. See
https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
to find out why this is a problem and how to eliminate them.
Warning: Examine the pairs() plot to diagnose sampling problems

Warning: The largest R-hat is 1.54, indicating chains have not mixed.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#r-hat
Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-ess
Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#tail-ess
Warning: Parts of the model have not converged (some Rhats are > 1.05). Be careful when analysing the results! We recommend running more iterations and/or setting stronger priors.
Warning: There were 10 divergent transitions after warmup. Increasing adapt_delta above 0.875 may help. See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male) + x0_group
         y0 ~ (1 || male) + y0_group
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)     6.00      8.67     0.07    27.03 1.53        7       45
sd(y0_Intercept)    29.39      8.82    17.24    52.56 1.00      585      805

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    34.93      1.97    30.33    37.58 1.35       12       54
x0_x0_group2    36.46      4.65    30.19    44.98 1.16       17      821
y0_Intercept    49.31     13.27    24.10    76.18 1.07       46      617
y0_y0_group2   117.02     18.70    82.65   154.14 1.05       77      623

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.38      0.34     2.06     3.09 1.53        7       36

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
> save(file = file.path(output_dir, paste0("fit_tbl_data_", x_flag_data, "_", y_flag_data, "_n_reps_", n_reps, ".Rda")), fit_tbl)
> + + + + + + + + + + > x_flag_data <- "groups_2"
> y_flag_data <- "groups_2"
> sampling_dist_data <- "nb"
> n_reps <- 32
> data_base <- data_sim %>% filter(x_flag == x_flag_data,
+                             y_flag == y_flag_data,
+                             sampling_dist == sampling_dist_data,
+                             n_reps == !!n_reps) %>%
+     rename(temp = temp_mean, male = index) %>%
+     rename(y = mo .... [TRUNCATED] 
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.9 #0.95
> iter <- 2000
> thin <- 2
> ## could include "individual"
> flags <- c("uniform_1", "uniform_2", "groups_1", "groups_2")
> models <- c("brms")
> sampling_dist_fit <- "nb"
> flags_x <- flags
> flags_y <- flags
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     sampling_dist = sampling_dist_fit,
+                     x0_flag = flags_x, y0_flag = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA), #tbl_tmp, #list(NA),
+                     x0_group_ .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0_flag == x_flag &
+               .... [TRUNCATED] 
[1] "brms: uniform_1, uniform_1"
             prior class      coef group resp dpar nlpar lb ub       source
 gamma(0.01, 0.01) shape                                  0         default
            (flat)     b                              x0            default
            (flat)     b Intercept                    x0       (vectorized)
            (flat)     b                              y0            default
            (flat)     b Intercept                    y0       (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Warning in .local(object, ...) :
  some chains had errors; consider specifying chains = 1 to debug
here are whatever error messages were returned
[[1]]
Stan model 'anon_model' does not contain samples.

[[2]]
Stan model 'anon_model' does not contain samples.

[[3]]
Stan model 'anon_model' does not contain samples.

[[4]]
Stan model 'anon_model' does not contain samples.

 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1
         y0 ~ 1
   Data: data (Number of observations: 1920) 

The model does not contain posterior draws.
Warning in eval(ei, envir) : 
[1] "brms: uniform_1, uniform_2"
             prior class      coef group resp dpar nlpar lb ub       source
 gamma(0.01, 0.01) shape                                  0         default
            (flat)     b                              x0            default
            (flat)     b Intercept                    x0       (vectorized)
            (flat)     b                              y0            default
            (flat)     b Intercept                    y0       (vectorized)
            (flat)     b y0_group2                    y0       (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Warning in .local(object, ...) :
  some chains had errors; consider specifying chains = 1 to debug
here are whatever error messages were returned
[[1]]
Stan model 'anon_model' does not contain samples.

[[2]]
Stan model 'anon_model' does not contain samples.

[[3]]
Stan model 'anon_model' does not contain samples.

[[4]]
Stan model 'anon_model' does not contain samples.

 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1
         y0 ~ 1 + y0_group
   Data: data (Number of observations: 1920) 

The model does not contain posterior draws.
Warning in eval(ei, envir) : 
[1] "brms: uniform_1, groups_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Warning in .local(object, ...) :
  some chains had errors; consider specifying chains = 1 to debug
here are whatever error messages were returned
[[1]]
Stan model 'anon_model' does not contain samples.

[[2]]
Stan model 'anon_model' does not contain samples.

[[3]]
Stan model 'anon_model' does not contain samples.

[[4]]
Stan model 'anon_model' does not contain samples.

 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1
         y0 ~ (1 || male)
   Data: data (Number of observations: 1920) 

The model does not contain posterior draws.
Warning in eval(ei, envir) : 
[1] "brms: uniform_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Warning in .local(object, ...) :
  some chains had errors; consider specifying chains = 1 to debug
here are whatever error messages were returned
[[1]]
Stan model 'anon_model' does not contain samples.

[[2]]
Stan model 'anon_model' does not contain samples.

[[3]]
Stan model 'anon_model' does not contain samples.

[[4]]
Stan model 'anon_model' does not contain samples.

 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1
         y0 ~ (1 || male) + y0_group
   Data: data (Number of observations: 1920) 

The model does not contain posterior draws.
Warning in eval(ei, envir) : 
[1] "brms: uniform_2, uniform_1"
             prior class      coef group resp dpar nlpar lb ub       source
 gamma(0.01, 0.01) shape                                  0         default
            (flat)     b                              x0            default
            (flat)     b Intercept                    x0       (vectorized)
            (flat)     b x0_group2                    x0       (vectorized)
            (flat)     b                              y0            default
            (flat)     b Intercept                    y0       (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Warning in .local(object, ...) :
  some chains had errors; consider specifying chains = 1 to debug
here are whatever error messages were returned
[[1]]
Stan model 'anon_model' does not contain samples.

[[2]]
Stan model 'anon_model' does not contain samples.

[[3]]
Stan model 'anon_model' does not contain samples.

[[4]]
Stan model 'anon_model' does not contain samples.

 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1 + x0_group
         y0 ~ 1
   Data: data (Number of observations: 1920) 

The model does not contain posterior draws.
Warning in eval(ei, envir) : 
[1] "brms: uniform_2, uniform_2"
             prior class      coef group resp dpar nlpar lb ub       source
 gamma(0.01, 0.01) shape                                  0         default
            (flat)     b                              x0            default
            (flat)     b Intercept                    x0       (vectorized)
            (flat)     b x0_group2                    x0       (vectorized)
            (flat)     b                              y0            default
            (flat)     b Intercept                    y0       (vectorized)
            (flat)     b y0_group2                    y0       (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Warning in .local(object, ...) :
  some chains had errors; consider specifying chains = 1 to debug
here are whatever error messages were returned
[[1]]
Stan model 'anon_model' does not contain samples.

[[2]]
Stan model 'anon_model' does not contain samples.

[[3]]
Stan model 'anon_model' does not contain samples.

[[4]]
Stan model 'anon_model' does not contain samples.

 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1 + x0_group
         y0 ~ 1 + y0_group
   Data: data (Number of observations: 1920) 

The model does not contain posterior draws.
Warning in eval(ei, envir) : 
[1] "brms: uniform_2, groups_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Warning in .local(object, ...) :
  some chains had errors; consider specifying chains = 1 to debug
here are whatever error messages were returned
[[1]]
Stan model 'anon_model' does not contain samples.

[[2]]
Stan model 'anon_model' does not contain samples.

[[3]]
Stan model 'anon_model' does not contain samples.

[[4]]
Stan model 'anon_model' does not contain samples.

 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1 + x0_group
         y0 ~ (1 || male)
   Data: data (Number of observations: 1920) 

The model does not contain posterior draws.
Warning in eval(ei, envir) : 
[1] "brms: uniform_2, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Warning in .local(object, ...) :
  some chains had errors; consider specifying chains = 1 to debug
here are whatever error messages were returned
[[1]]
Stan model 'anon_model' does not contain samples.

[[2]]
Stan model 'anon_model' does not contain samples.

[[3]]
Stan model 'anon_model' does not contain samples.

[[4]]
Stan model 'anon_model' does not contain samples.

 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1 + x0_group
         y0 ~ (1 || male) + y0_group
   Data: data (Number of observations: 1920) 

The model does not contain posterior draws.
Warning in eval(ei, envir) : 
[1] "brms: groups_1, uniform_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Warning in .local(object, ...) :
  some chains had errors; consider specifying chains = 1 to debug
here are whatever error messages were returned
[[1]]
Stan model 'anon_model' does not contain samples.

[[2]]
Stan model 'anon_model' does not contain samples.

[[3]]
Stan model 'anon_model' does not contain samples.

[[4]]
Stan model 'anon_model' does not contain samples.

 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male)
         y0 ~ 1
   Data: data (Number of observations: 1920) 

The model does not contain posterior draws.
Warning in eval(ei, envir) : 
[1] "brms: groups_1, uniform_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Warning in .local(object, ...) :
  some chains had errors; consider specifying chains = 1 to debug
here are whatever error messages were returned
[[1]]
Stan model 'anon_model' does not contain samples.

[[2]]
Stan model 'anon_model' does not contain samples.

[[3]]
Stan model 'anon_model' does not contain samples.

[[4]]
Stan model 'anon_model' does not contain samples.

 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male)
         y0 ~ 1 + y0_group
   Data: data (Number of observations: 1920) 

The model does not contain posterior draws.
Warning in eval(ei, envir) : 
[1] "brms: groups_1, groups_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Warning in .local(object, ...) :
  some chains had errors; consider specifying chains = 1 to debug
here are whatever error messages were returned
[[1]]
Stan model 'anon_model' does not contain samples.

[[2]]
Stan model 'anon_model' does not contain samples.

[[3]]
Stan model 'anon_model' does not contain samples.

[[4]]
Stan model 'anon_model' does not contain samples.

 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male)
         y0 ~ (1 || male)
   Data: data (Number of observations: 1920) 

The model does not contain posterior draws.
Warning in eval(ei, envir) : 
[1] "brms: groups_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Warning in .local(object, ...) :
  some chains had errors; consider specifying chains = 1 to debug
here are whatever error messages were returned
[[1]]
Stan model 'anon_model' does not contain samples.

[[2]]
Stan model 'anon_model' does not contain samples.

[[3]]
Stan model 'anon_model' does not contain samples.

[[4]]
Stan model 'anon_model' does not contain samples.

 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male)
         y0 ~ (1 || male) + y0_group
   Data: data (Number of observations: 1920) 

The model does not contain posterior draws.
Warning in eval(ei, envir) : 
[1] "brms: groups_2, uniform_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Warning in .local(object, ...) :
  some chains had errors; consider specifying chains = 1 to debug
here are whatever error messages were returned
[[1]]
Stan model 'anon_model' does not contain samples.

[[2]]
Stan model 'anon_model' does not contain samples.

[[3]]
Stan model 'anon_model' does not contain samples.

[[4]]
Stan model 'anon_model' does not contain samples.

 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male) + x0_group
         y0 ~ 1
   Data: data (Number of observations: 1920) 

The model does not contain posterior draws.
Warning in eval(ei, envir) : 
[1] "brms: groups_2, uniform_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Warning in .local(object, ...) :
  some chains had errors; consider specifying chains = 1 to debug
here are whatever error messages were returned
[[1]]
Stan model 'anon_model' does not contain samples.

[[2]]
Stan model 'anon_model' does not contain samples.

[[3]]
Stan model 'anon_model' does not contain samples.

[[4]]
Stan model 'anon_model' does not contain samples.

 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male) + x0_group
         y0 ~ 1 + y0_group
   Data: data (Number of observations: 1920) 

The model does not contain posterior draws.
Warning in eval(ei, envir) : 
[1] "brms: groups_2, groups_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Warning in .local(object, ...) :
  some chains had errors; consider specifying chains = 1 to debug
here are whatever error messages were returned
[[1]]
Stan model 'anon_model' does not contain samples.

[[2]]
Stan model 'anon_model' does not contain samples.

[[3]]
Stan model 'anon_model' does not contain samples.

[[4]]
Stan model 'anon_model' does not contain samples.

 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male) + x0_group
         y0 ~ (1 || male)
   Data: data (Number of observations: 1920) 

The model does not contain posterior draws.
Warning in eval(ei, envir) : 
[1] "brms: groups_2, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Error : 'control' list contains unknown members of names: thin.
error in specifying arguments; sampling not done
Warning in .local(object, ...) :
  some chains had errors; consider specifying chains = 1 to debug
here are whatever error messages were returned
[[1]]
Stan model 'anon_model' does not contain samples.

[[2]]
Stan model 'anon_model' does not contain samples.

[[3]]
Stan model 'anon_model' does not contain samples.

[[4]]
Stan model 'anon_model' does not contain samples.

 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male) + x0_group
         y0 ~ (1 || male) + y0_group
   Data: data (Number of observations: 1920) 

The model does not contain posterior draws.
Warning in eval(ei, envir) : 
> save(file = file.path(output_dir, paste0("fit_tbl_data_", x_flag_data, "_", y_flag_data, "_n_reps_", n_reps, ".Rda")), fit_tbl)
> ?brmsfamily
> ?rstan
> ??thin
> + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + > adapt_delta <- 0.9 #0.95
> iter <- 2000
> thin <- 2
> ## could include "individual"
> flags <- c("uniform_1", "uniform_2", "groups_1", "groups_2")
> models <- c("brms")
> sampling_dist_fit <- "nb"
> flags_x <- flags
> flags_y <- flags
> N <- length(data)
> fit_tbl <- crossing(model = models,
+                     sampling_dist = sampling_dist_fit,
+                     x0_flag = flags_x, y0_flag = flags_y,
+                     desc = "NA_character",
+                     y0_group_list = list(NA), #tbl_tmp, #list(NA),
+                     x0_group_ .... [TRUNCATED] 
> ## Priors
> 
> my_priors <- prior(
+   # uniform(10, 1000), nlpar = "y0", lb = 10) +
+   normal(150, 200), nlpar = "y0", lb = 10) +
+   prior(uniform(30, 45.5), lb = 30, ub = 45.5, nlpar = "x0")
> model = models[[1]]
> for(x_flag in flags_x) {
+     for(y_flag in flags_y) {
+ 
+         ## Set up variables for saving model and fit
+         desc <- paste0(model, ": ", x_flag, ", ", y_flag)
+         curr_row <- which(fit_tbl$model == model &
+                           fit_tbl$x0_flag == x_flag &
+               .... [TRUNCATED] 
[1] "brms: uniform_1, uniform_1"
             prior class      coef group resp dpar nlpar lb ub       source
 gamma(0.01, 0.01) shape                                  0         default
            (flat)     b                              x0            default
            (flat)     b Intercept                    x0       (vectorized)
            (flat)     b                              y0            default
            (flat)     b Intercept                    y0       (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.003542 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 35.42 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002136 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 21.36 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002574 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 25.74 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002268 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 22.68 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 8.399 seconds (Warm-up)
Chain 1:                8.552 seconds (Sampling)
Chain 1:                16.951 seconds (Total)
Chain 1: 
Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 8.954 seconds (Warm-up)
Chain 3:                9.742 seconds (Sampling)
Chain 3:                18.696 seconds (Total)
Chain 3: 
Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 9.468 seconds (Warm-up)
Chain 2:                10.687 seconds (Sampling)
Chain 2:                20.155 seconds (Total)
Chain 2: 
Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 9.093 seconds (Warm-up)
Chain 4:                11.034 seconds (Sampling)
Chain 4:                20.127 seconds (Total)
Chain 4: 
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1
         y0 ~ 1
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 2;
         total post-warmup draws = 2000

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    39.40      0.34    38.69    40.02 1.00     1470     1616
y0_Intercept   112.22      4.13   105.05   120.73 1.00     1524     1570

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     1.12      0.04     1.05     1.19 1.00     1641     1546

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: uniform_1, uniform_2"
             prior class      coef group resp dpar nlpar lb ub       source
 gamma(0.01, 0.01) shape                                  0         default
            (flat)     b                              x0            default
            (flat)     b Intercept                    x0       (vectorized)
            (flat)     b                              y0            default
            (flat)     b Intercept                    y0       (vectorized)
            (flat)     b y0_group2                    y0       (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.00303 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 30.3 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.003214 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 32.14 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.00297 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 29.7 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002873 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 28.73 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 10.377 seconds (Warm-up)
Chain 4:                9.428 seconds (Sampling)
Chain 4:                19.805 seconds (Total)
Chain 4: 
Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 10.862 seconds (Warm-up)
Chain 1:                12.424 seconds (Sampling)
Chain 1:                23.286 seconds (Total)
Chain 1: 
Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 11.093 seconds (Warm-up)
Chain 2:                12.528 seconds (Sampling)
Chain 2:                23.621 seconds (Total)
Chain 2: 
Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 46.271 seconds (Warm-up)
Chain 3:                12.994 seconds (Sampling)
Chain 3:                59.265 seconds (Total)
Chain 3: 
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1
         y0 ~ 1 + y0_group
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 2;
         total post-warmup draws = 2000

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    39.09      0.33    38.39    39.69 1.00     1489     1519
y0_Intercept    45.53      1.67    42.52    48.97 1.00     1426     1344
y0_y0_group2   138.80      6.02   127.32   151.24 1.00     1625     1595

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.00      0.06     1.88     2.13 1.00     1740     1809

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: uniform_1, groups_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[1761] is -0.465536, but must be positive finite! (in 'anon_model', line 61, column 4 to column 49)
Chain 1: 
Chain 1: Gradient evaluation took 0.002679 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 26.79 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002663 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 26.63 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.00258 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 25.8 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.0028 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 28 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 316.458 seconds (Warm-up)
Chain 1:                299.099 seconds (Sampling)
Chain 1:                615.557 seconds (Total)
Chain 1: 
Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 326.59 seconds (Warm-up)
Chain 4:                337.975 seconds (Sampling)
Chain 4:                664.565 seconds (Total)
Chain 4: 
Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 320.79 seconds (Warm-up)
Chain 3:                374.616 seconds (Sampling)
Chain 3:                695.406 seconds (Total)
Chain 3: 
Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 316.167 seconds (Warm-up)
Chain 2:                400.197 seconds (Sampling)
Chain 2:                716.364 seconds (Total)
Chain 2: 
Warning: There were 1 divergent transitions after warmup. See
https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
to find out why this is a problem and how to eliminate them.
Warning: Examine the pairs() plot to diagnose sampling problems

Warning: There were 1 divergent transitions after warmup. Increasing adapt_delta above 0.9 may help. See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1
         y0 ~ (1 || male)
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 2;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(y0_Intercept)    85.56     19.58    56.27   132.69 1.00      644      982

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    38.55      0.31    37.99    39.16 1.00     1644     1629
y0_Intercept   119.81     25.80    71.20   173.33 1.01      654      824

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.79      0.09     2.60     2.97 1.00     1539     1597

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: uniform_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.002346 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 23.46 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002451 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 24.51 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002757 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 27.57 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002569 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 25.69 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 195.213 seconds (Warm-up)
Chain 1:                153.78 seconds (Sampling)
Chain 1:                348.993 seconds (Total)
Chain 1: 
Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 179.406 seconds (Warm-up)
Chain 3:                198.441 seconds (Sampling)
Chain 3:                377.847 seconds (Total)
Chain 3: 
Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 247.294 seconds (Warm-up)
Chain 4:                188.938 seconds (Sampling)
Chain 4:                436.232 seconds (Total)
Chain 4: 
Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 249.825 seconds (Warm-up)
Chain 2:                260.508 seconds (Sampling)
Chain 2:                510.333 seconds (Total)
Chain 2: 
Warning: There were 32 divergent transitions after warmup. See
https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
to find out why this is a problem and how to eliminate them.
Warning: Examine the pairs() plot to diagnose sampling problems

Warning: There were 32 divergent transitions after warmup. Increasing adapt_delta above 0.9 may help. See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1
         y0 ~ (1 || male) + y0_group
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 2;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(y0_Intercept)    33.88      8.50    21.24    54.36 1.00      749     1100

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    38.55      0.31    37.98    39.16 1.00     1751     1518
y0_Intercept    48.32     14.28    21.26    79.10 1.01      618      506
y0_y0_group2   144.46     20.83    99.63   184.11 1.00      588      565

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.79      0.10     2.60     2.98 1.00     1977     1854

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: uniform_2, uniform_1"
             prior class      coef group resp dpar nlpar lb ub       source
 gamma(0.01, 0.01) shape                                  0         default
            (flat)     b                              x0            default
            (flat)     b Intercept                    x0       (vectorized)
            (flat)     b x0_group2                    x0       (vectorized)
            (flat)     b                              y0            default
            (flat)     b Intercept                    y0       (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.00385 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 38.5 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002268 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 22.68 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002404 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 24.04 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002215 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 22.15 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 10.381 seconds (Warm-up)
Chain 3:                8.298 seconds (Sampling)
Chain 3:                18.679 seconds (Total)
Chain 3: 
Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 11.506 seconds (Warm-up)
Chain 2:                7.782 seconds (Sampling)
Chain 2:                19.288 seconds (Total)
Chain 2: 
Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 12.779 seconds (Warm-up)
Chain 4:                7.598 seconds (Sampling)
Chain 4:                20.377 seconds (Total)
Chain 4: 
Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 11.72 seconds (Warm-up)
Chain 1:                10.2 seconds (Sampling)
Chain 1:                21.92 seconds (Total)
Chain 1: 
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1 + x0_group
         y0 ~ 1
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 2;
         total post-warmup draws = 2000

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    33.98      0.52    32.92    34.97 1.00     1722     1896
x0_x0_group2    37.70      4.53    30.41    45.14 1.00     2092     1628
y0_Intercept   109.95      3.00   104.31   116.12 1.00     1757     1715

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     1.16      0.03     1.09     1.23 1.00     2061     1750

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: uniform_2, uniform_2"
             prior class      coef group resp dpar nlpar lb ub       source
 gamma(0.01, 0.01) shape                                  0         default
            (flat)     b                              x0            default
            (flat)     b Intercept                    x0       (vectorized)
            (flat)     b x0_group2                    x0       (vectorized)
            (flat)     b                              y0            default
            (flat)     b Intercept                    y0       (vectorized)
            (flat)     b y0_group2                    y0       (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.001837 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 18.37 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002391 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 23.91 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002632 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 26.32 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002303 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 23.03 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 10.313 seconds (Warm-up)
Chain 1:                8.4 seconds (Sampling)
Chain 1:                18.713 seconds (Total)
Chain 1: 
Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 10.347 seconds (Warm-up)
Chain 3:                8.239 seconds (Sampling)
Chain 3:                18.586 seconds (Total)
Chain 3: 
Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 10.702 seconds (Warm-up)
Chain 4:                8.487 seconds (Sampling)
Chain 4:                19.189 seconds (Total)
Chain 4: 
Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 11.172 seconds (Warm-up)
Chain 2:                8.828 seconds (Sampling)
Chain 2:                20 seconds (Total)
Chain 2: 
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1 + x0_group
         y0 ~ 1 + y0_group
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 2;
         total post-warmup draws = 2000

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    36.40      0.37    35.67    37.11 1.00     1970     1603
x0_x0_group2    37.75      4.41    30.38    45.06 1.00     2166     1794
y0_Intercept    44.55      1.38    41.85    47.25 1.00     1902     1847
y0_y0_group2   112.92      4.10   105.11   120.80 1.00     2035     1894

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     1.82      0.06     1.70     1.94 1.00     1938     1440

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: uniform_2, groups_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
recompiling to avoid crashing R session
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.004607 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 46.07 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.00276 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 27.6 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002522 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 25.22 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002674 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 26.74 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 217.714 seconds (Warm-up)
Chain 1:                197.696 seconds (Sampling)
Chain 1:                415.41 seconds (Total)
Chain 1: 
Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 221.443 seconds (Warm-up)
Chain 3:                237.104 seconds (Sampling)
Chain 3:                458.547 seconds (Total)
Chain 3: 
Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 230.305 seconds (Warm-up)
Chain 2:                240.338 seconds (Sampling)
Chain 2:                470.643 seconds (Total)
Chain 2: 
Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 236.57 seconds (Warm-up)
Chain 4:                272.336 seconds (Sampling)
Chain 4:                508.906 seconds (Total)
Chain 4: 
Warning: There were 3 divergent transitions after warmup. See
https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
to find out why this is a problem and how to eliminate them.
Warning: Examine the pairs() plot to diagnose sampling problems

Warning: There were 3 divergent transitions after warmup. Increasing adapt_delta above 0.9 may help. See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1 + x0_group
         y0 ~ (1 || male)
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 2;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(y0_Intercept)    68.95     15.45    46.37   105.81 1.01      953     1348

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    35.45      0.56    34.37    36.48 1.00     2079     1740
x0_x0_group2    37.81      4.48    30.35    45.18 1.00     1840     1264
y0_Intercept   105.03     20.67    65.23   145.01 1.00      715     1042

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.19      0.07     2.05     2.33 1.00     1802     1502

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: uniform_2, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.002667 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 26.67 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002696 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 26.96 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002928 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 29.28 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002553 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 25.53 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 137.471 seconds (Warm-up)
Chain 2:                108.137 seconds (Sampling)
Chain 2:                245.608 seconds (Total)
Chain 2: 
Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 138.705 seconds (Warm-up)
Chain 3:                111.246 seconds (Sampling)
Chain 3:                249.951 seconds (Total)
Chain 3: 
Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 145.145 seconds (Warm-up)
Chain 4:                117.16 seconds (Sampling)
Chain 4:                262.305 seconds (Total)
Chain 4: 
Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 139.768 seconds (Warm-up)
Chain 1:                204.502 seconds (Sampling)
Chain 1:                344.27 seconds (Total)
Chain 1: 
Warning: There were 5 divergent transitions after warmup. See
https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
to find out why this is a problem and how to eliminate them.
Warning: Examine the pairs() plot to diagnose sampling problems

Warning: There were 5 divergent transitions after warmup. Increasing adapt_delta above 0.9 may help. See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ 1 + x0_group
         y0 ~ (1 || male) + y0_group
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 2;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(y0_Intercept)    27.57      7.74    16.17    46.81 1.00      821     1367

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    35.77      0.59    34.57    36.87 1.00     1668     1650
x0_x0_group2    37.68      4.47    30.40    45.13 1.00     2132     1819
y0_Intercept    47.01     11.40    24.82    71.67 1.00      854      811
y0_y0_group2   113.88     17.22    77.99   149.64 1.01      870      925

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.19      0.07     2.05     2.32 1.00     1818     1356

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_1, uniform_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.002878 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 28.78 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002481 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 24.81 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002584 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 25.84 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002445 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 24.45 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 227.384 seconds (Warm-up)
Chain 4:                174.494 seconds (Sampling)
Chain 4:                401.878 seconds (Total)
Chain 4: 
Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 257.362 seconds (Warm-up)
Chain 3:                187.256 seconds (Sampling)
Chain 3:                444.618 seconds (Total)
Chain 3: 
Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 243.376 seconds (Warm-up)
Chain 1:                229.149 seconds (Sampling)
Chain 1:                472.525 seconds (Total)
Chain 1: 
Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 262.161 seconds (Warm-up)
Chain 2:                352.921 seconds (Sampling)
Chain 2:                615.082 seconds (Total)
Chain 2: 
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male)
         y0 ~ 1
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 2;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)    34.58      8.36    22.63    54.65 1.01      563      615

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    34.68      3.82    30.12    43.92 1.00      488      823
y0_Intercept   178.42      6.02   166.64   190.09 1.00     1736     1482

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.72      0.09     2.55     2.91 1.00     1501     1404

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_1, uniform_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.0025 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 25 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.00258 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 25.8 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002585 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 25.85 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002457 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 24.57 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 225.606 seconds (Warm-up)
Chain 2:                214.289 seconds (Sampling)
Chain 2:                439.895 seconds (Total)
Chain 2: 
Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 177.513 seconds (Warm-up)
Chain 1:                267.298 seconds (Sampling)
Chain 1:                444.811 seconds (Total)
Chain 1: 
Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 197.553 seconds (Warm-up)
Chain 3:                247.82 seconds (Sampling)
Chain 3:                445.373 seconds (Total)
Chain 3: 
Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 222.49 seconds (Warm-up)
Chain 4:                258.123 seconds (Sampling)
Chain 4:                480.613 seconds (Total)
Chain 4: 
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male)
         y0 ~ 1 + y0_group
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 2;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)    11.24      2.92     7.03    18.64 1.00      618      950

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    34.49      2.72    30.45    40.65 1.01      513      771
y0_Intercept    70.68      3.96    63.52    79.34 1.00     1467     1301
y0_y0_group2   111.08      6.53    98.43   123.87 1.00     1496     1709

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.83      0.10     2.64     3.03 1.00     1623     1349

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_1, groups_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: Rejecting initial value:
Chain 1:   Error evaluating the log probability at the initial value.
Chain 1: Exception: neg_binomial_2_lpmf: Location parameter[961] is -1.87504, but must be positive finite! (in 'anon_model', line 77, column 4 to column 49)
Chain 1: 
Chain 1: Gradient evaluation took 0.002863 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 28.63 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002797 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 27.97 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002812 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 28.12 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002987 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 29.87 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 418.792 seconds (Warm-up)
Chain 3:                390.16 seconds (Sampling)
Chain 3:                808.952 seconds (Total)
Chain 3: 
Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 446.01 seconds (Warm-up)
Chain 2:                365.033 seconds (Sampling)
Chain 2:                811.043 seconds (Total)
Chain 2: 
Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 413.449 seconds (Warm-up)
Chain 1:                408.434 seconds (Sampling)
Chain 1:                821.883 seconds (Total)
Chain 1: 
Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 400.836 seconds (Warm-up)
Chain 4:                453.113 seconds (Sampling)
Chain 4:                853.949 seconds (Total)
Chain 4: 
Warning: There were 1 divergent transitions after warmup. See
https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
to find out why this is a problem and how to eliminate them.
Warning: Examine the pairs() plot to diagnose sampling problems

Warning: There were 1 divergent transitions after warmup. Increasing adapt_delta above 0.9 may help. See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male)
         y0 ~ (1 || male)
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 2;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)     3.23      0.98     1.85     5.74 1.00     1028     1321
sd(y0_Intercept)    75.50     16.92    50.87   115.37 1.00     1023     1560

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    37.95      0.98    35.84    39.72 1.00     1138     1411
y0_Intercept   119.93     22.47    75.18   167.58 1.01      705     1004

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.97      0.10     2.78     3.17 1.00     1875     1846

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_1, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.002739 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 27.39 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002278 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 22.78 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002615 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 26.15 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002553 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 25.53 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 213.94 seconds (Warm-up)
Chain 1:                209.72 seconds (Sampling)
Chain 1:                423.66 seconds (Total)
Chain 1: 
Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 222.192 seconds (Warm-up)
Chain 2:                204.404 seconds (Sampling)
Chain 2:                426.596 seconds (Total)
Chain 2: 
Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 231.02 seconds (Warm-up)
Chain 3:                196.216 seconds (Sampling)
Chain 3:                427.236 seconds (Total)
Chain 3: 
Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 218.274 seconds (Warm-up)
Chain 4:                235.88 seconds (Sampling)
Chain 4:                454.154 seconds (Total)
Chain 4: 
Warning: There were 3 divergent transitions after warmup. See
https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
to find out why this is a problem and how to eliminate them.
Warning: Examine the pairs() plot to diagnose sampling problems

Warning: There were 3 divergent transitions after warmup. Increasing adapt_delta above 0.9 may help. See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male)
         y0 ~ (1 || male) + y0_group
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 2;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)     2.99      0.85     1.79     5.14 1.00     1050     1429
sd(y0_Intercept)    27.07      7.35    16.33    45.35 1.00     1421     1613

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    38.07      0.94    36.12    39.85 1.00      965     1486
y0_Intercept    52.51     12.03    27.33    75.67 1.01      905     1037
y0_y0_group2   131.08     17.84    96.22   168.27 1.00     1162     1360

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.97      0.10     2.78     3.16 1.00     1820     1504

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_2, uniform_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.002731 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 27.31 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002715 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 27.15 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002823 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 28.23 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.0026 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 26 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 699.875 seconds (Warm-up)
Chain 2:                621.806 seconds (Sampling)
Chain 2:                1321.68 seconds (Total)
Chain 2: 
Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 812.198 seconds (Warm-up)
Chain 3:                539.32 seconds (Sampling)
Chain 3:                1351.52 seconds (Total)
Chain 3: 
Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 778.043 seconds (Warm-up)
Chain 1:                586.822 seconds (Sampling)
Chain 1:                1364.87 seconds (Total)
Chain 1: 
Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 969.285 seconds (Warm-up)
Chain 4:                797.289 seconds (Sampling)
Chain 4:                1766.57 seconds (Total)
Chain 4: 
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male) + x0_group
         y0 ~ 1
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 2;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)    43.37     10.29    27.62    67.27 1.01      525      842

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    33.96      3.44    30.12    42.63 1.00      948     1107
x0_x0_group2    35.45      4.07    30.19    44.47 1.00     1498     1619
y0_Intercept   179.12      6.01   167.35   190.60 1.00     1726     1680

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.73      0.10     2.54     2.92 1.00     1804     1554

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_2, uniform_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.002786 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 27.86 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002781 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 27.81 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002786 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 27.86 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002603 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 26.03 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 736.818 seconds (Warm-up)
Chain 1:                632.532 seconds (Sampling)
Chain 1:                1369.35 seconds (Total)
Chain 1: 
Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 892.848 seconds (Warm-up)
Chain 2:                647.444 seconds (Sampling)
Chain 2:                1540.29 seconds (Total)
Chain 2: 
Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 720.661 seconds (Warm-up)
Chain 3:                856.013 seconds (Sampling)
Chain 3:                1576.67 seconds (Total)
Chain 3: 
Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 802.316 seconds (Warm-up)
Chain 4:                982.859 seconds (Sampling)
Chain 4:                1785.18 seconds (Total)
Chain 4: 
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male) + x0_group
         y0 ~ 1 + y0_group
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 2;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)    22.05      5.71    13.80    35.74 1.01      591      905

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    32.41      2.36    30.06    38.90 1.01      865     1027
x0_x0_group2    32.87      2.81    30.07    40.87 1.00     1413     1368
y0_Intercept    72.51      4.27    65.11    81.91 1.00     1670     1565
y0_y0_group2   108.84      6.85    94.72   122.22 1.00     1664     1377

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.83      0.10     2.65     3.03 1.00     1885     1857

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_2, groups_1"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.00266 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 26.6 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002703 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 27.03 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002666 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 26.66 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002554 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 25.54 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 305.316 seconds (Warm-up)
Chain 2:                160.277 seconds (Sampling)
Chain 2:                465.593 seconds (Total)
Chain 2: 
Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 284.448 seconds (Warm-up)
Chain 4:                220.086 seconds (Sampling)
Chain 4:                504.534 seconds (Total)
Chain 4: 
Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 1321.56 seconds (Warm-up)
Chain 1:                1189.76 seconds (Sampling)
Chain 1:                2511.32 seconds (Total)
Chain 1: 
Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 1488.58 seconds (Warm-up)
Chain 3:                3940.13 seconds (Sampling)
Chain 3:                5428.71 seconds (Total)
Chain 3: 
Warning: There were 101 divergent transitions after warmup. See
https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
to find out why this is a problem and how to eliminate them.
Warning: There were 291 transitions after warmup that exceeded the maximum treedepth. Increase max_treedepth above 12. See
https://mc-stan.org/misc/warnings.html#maximum-treedepth-exceeded
Warning: There were 1 chains where the estimated Bayesian Fraction of Missing Information was low. See
https://mc-stan.org/misc/warnings.html#bfmi-low
Warning: Examine the pairs() plot to diagnose sampling problems

Warning: The largest R-hat is 2.13, indicating chains have not mixed.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#r-hat
Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-ess
Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#tail-ess
Warning: Parts of the model have not converged (some Rhats are > 1.05). Be careful when analysing the results! We recommend running more iterations and/or setting stronger priors.
Warning: There were 101 divergent transitions after warmup. Increasing adapt_delta above 0.9 may help. See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male) + x0_group
         y0 ~ (1 || male)
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 2;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)    12.37      8.99     0.25    29.55 1.85        6       79
sd(y0_Intercept)    74.29     17.10    47.58   115.62 1.09      107      591

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    33.78      2.29    30.13    37.50 1.29       11      280
x0_x0_group2    34.17      4.03    30.10    44.38 1.26       13      121
y0_Intercept   118.64     23.15    72.36   164.61 1.16       18      265

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.58      0.40     2.09     3.15 1.74        6       74

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
[1] "brms: groups_2, groups_2"
                 prior class      coef group resp dpar nlpar lb ub       source
     gamma(0.01, 0.01) shape                                  0         default
                (flat)     b                              x0            default
                (flat)     b Intercept                    x0       (vectorized)
                (flat)     b x0_group2                    x0       (vectorized)
 student_t(3, 0, 59.3)    sd                              x0  0         default
 student_t(3, 0, 59.3)    sd            male              x0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              x0  0    (vectorized)
                (flat)     b                              y0            default
                (flat)     b Intercept                    y0       (vectorized)
                (flat)     b y0_group2                    y0       (vectorized)
 student_t(3, 0, 59.3)    sd                              y0  0         default
 student_t(3, 0, 59.3)    sd            male              y0  0    (vectorized)
 student_t(3, 0, 59.3)    sd Intercept  male              y0  0    (vectorized)
Compiling Stan program...
Start sampling

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).
Chain 1: 
Chain 1: Gradient evaluation took 0.00257 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 25.7 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).
Chain 2: 
Chain 2: Gradient evaluation took 0.002606 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 26.06 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).
Chain 3: 
Chain 3: Gradient evaluation took 0.002579 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 25.79 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).
Chain 4: 
Chain 4: Gradient evaluation took 0.002552 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 25.52 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 176.253 seconds (Warm-up)
Chain 1:                149.31 seconds (Sampling)
Chain 1:                325.563 seconds (Total)
Chain 1: 
Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 189.947 seconds (Warm-up)
Chain 4:                157.195 seconds (Sampling)
Chain 4:                347.142 seconds (Total)
Chain 4: 
Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 1193.98 seconds (Warm-up)
Chain 2:                982.839 seconds (Sampling)
Chain 2:                2176.82 seconds (Total)
Chain 2: 
Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 1238.67 seconds (Warm-up)
Chain 3:                967.74 seconds (Sampling)
Chain 3:                2206.41 seconds (Total)
Chain 3: 
Warning: There were 2 divergent transitions after warmup. See
https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
to find out why this is a problem and how to eliminate them.
Warning: Examine the pairs() plot to diagnose sampling problems

Warning: The largest R-hat is 1.74, indicating chains have not mixed.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#r-hat
Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-ess
Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#tail-ess
Warning: Parts of the model have not converged (some Rhats are > 1.05). Be careful when analysing the results! We recommend running more iterations and/or setting stronger priors.
Warning: There were 2 divergent transitions after warmup. Increasing adapt_delta above 0.9 may help. See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
 Family: negbinomial 
  Links: mu = identity; shape = identity 
Formula: y ~ 0 - (46 - fmax(x0, x)) * (0 - y0)/(46 - x0) 
         x0 ~ (1 || male) + x0_group
         y0 ~ (1 || male) + y0_group
   Data: data (Number of observations: 1920) 
  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 2;
         total post-warmup draws = 2000

Group-Level Effects: 
~male (Number of levels: 12) 
                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(x0_Intercept)    10.81     10.29     0.12    31.69 1.74        6      169
sd(y0_Intercept)    28.89      8.33    17.00    49.10 1.01     1092     1391

Population-Level Effects: 
             Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
x0_Intercept    34.24      2.52    30.13    38.84 1.30       16      177
x0_x0_group2    35.12      4.47    30.09    44.81 1.22       13      614
y0_Intercept    51.43     13.16    27.27    80.18 1.04       72      939
y0_y0_group2   120.65     20.48    78.14   162.28 1.13       21      765

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
shape     2.58      0.40     2.07     3.13 1.73        6      146

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning in eval(ei, envir) : 
> save(file = file.path(output_dir, paste0("fit_tbl_data_", x_flag_data, "_", y_flag_data, "_n_reps_", n_reps, ".Rda")), fit_tbl)
> 
